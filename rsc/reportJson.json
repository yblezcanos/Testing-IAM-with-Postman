{
  "collection": {
    "_": {
      "postman_id": "9dc9b0b9-839c-45ff-a805-d3aee7f37f7c",
      "exporter_id": "36701025"
    },
    "item": [
      {
        "id": "7680c76a-81ed-4c15-8ed6-454890294d1d",
        "name": "event",
        "item": [
          {
            "id": "974c05de-3dc7-45f7-96c0-63a2ff4696a2",
            "name": "[Create]/v1/event",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "event"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b7474e39-859a-4770-9b9e-43ef44eb6ed2",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {\r",
                    "    pm.response.to.have.status(201);\r",
                    "});\r",
                    "\r",
                    "(()=>{\r",
                    "    let jsonData = pm.response.json();\r",
                    "    let status = jsonData.status;\r",
                    "    let description = jsonData.description;\r",
                    "    let group = jsonData.group;    \r",
                    "    pm.collectionVariables.set(\"status\", status);\r",
                    "    pm.collectionVariables.set(\"description\", description);\r",
                    "    pm.collectionVariables.set(\"group\", group);\r",
                    "})()\r",
                    "\r",
                    "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('id');\r",
                    "    let eventId = jsonData.id;\r",
                    "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                    "    pm.expect(eventId).to.not.be.null;\r",
                    "    pm.expect(eventId).to.not.be.undefined;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('name');\r",
                    "    let name = jsonData.name;\r",
                    "    pm.collectionVariables.set(\"name\", name);\r",
                    "    pm.expect(name).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('updated_at');\r",
                    "    let updatedAt = jsonData.updated_at;\r",
                    "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                    "    pm.expect(updatedAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('created_at');\r",
                    "    let createdAt = jsonData.created_at;\r",
                    "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                    "    pm.expect(createdAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Extract and store ID\", function () {\r",
                    "    let scope = pm.collectionVariables;\r",
                    "    let keyName = \"iam_events_ids\";\r",
                    "    let jsonData = pm.response.json();\r",
                    "    \r",
                    "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                    "    pm.expect(jsonData.id).to.not.be.null;\r",
                    "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                    "    if(jsonData.id != null & jsonData.id != undefined )\r",
                    "    {\r",
                    "    resourceIds.push(jsonData.id);\r",
                    "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        resourceIds = resourceIds;\r",
                    "    }\r",
                    "});\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "2a5c7e50-e6d6-44c0-88a3-5aff642a83f8"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "41bb88b4-1ddf-4513-af9a-ca692467b402",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa571151-24f3-4953-909a-1ccf19839df6"
                }
              }
            ]
          },
          {
            "id": "5b85cdca-6d12-4759-a29a-c5894d9c5c3b",
            "name": "[List]/v1/event",
            "request": {
              "description": {
                "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "event"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "03a191ff-7e23-41c8-bd2a-d4c6fcb47ed8",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    ""
                  ],
                  "_lastExecutionId": "9c90d023-c7fe-4490-bfb0-87bd6fd7007a"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "97529557-9b99-409d-b200-f2b6ba9c6484",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e9e63d3-d66b-462c-a2c6-9339184a2be8"
                }
              }
            ]
          },
          {
            "id": "5ee0ecb1-2183-42da-bdcc-7fc9fa85b0de",
            "name": "[List :id]/v1/event/:id",
            "request": {
              "description": {
                "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "event",
                  "{{eventId}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "format",
                    "value": "full"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ba11006c-bafb-476f-821b-ef86dfbccdf6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"Verifying Name is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('name');",
                    "    let currentName = jsonData.name;",
                    "    pm.expect(currentName).to.be.an('string');",
                    "    pm.expect(currentName.length > 1).eq(true);",
                    "    let expectedName = pm.collectionVariables.get(\"name\");",
                    "    pm.expect(currentName).to.eql(expectedName);",
                    "});",
                    "",
                    "pm.test(\"Verifying Description is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('description');",
                    "    let currentDescription = jsonData.description;",
                    "    let expectedDescription = pm.collectionVariables.get(\"description\");",
                    "    pm.expect(currentDescription).to.eql(expectedDescription);",
                    "});",
                    "",
                    "pm.test(\"Verifying Id is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('id');",
                    "    let currentID = jsonData.id;",
                    "    pm.expect(currentID).to.not.be.null;",
                    "    pm.expect(currentID).to.not.be.undefined;",
                    "    let expectedId = pm.collectionVariables.get(\"eventId\");",
                    "    pm.expect(currentID).to.eql(expectedId);",
                    "});",
                    "",
                    "pm.test(\"Verifying created_at is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('created_at');",
                    "    let currentCreatedAt = new Date(jsonData.created_at).toISOString().slice(0, 19) + 'Z';",
                    "    let iso8601Regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$/;",
                    "    pm.expect(currentCreatedAt).to.match(iso8601Regex);",
                    "    let expectedCreatedAt = pm.collectionVariables.get(\"createdAt\");",
                    "    expectedCreatedAt = new Date(expectedCreatedAt).toISOString().slice(0, 19) + 'Z';",
                    "    pm.expect(currentCreatedAt).to.eql(expectedCreatedAt);",
                    "});",
                    "",
                    "pm.test(\"Verifying updated_at is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('updated_at');",
                    "    let currentUpdatedAt = new Date(jsonData.updated_at).toISOString().slice(0, 19) + 'Z';",
                    "    let expectedUpdatedAt = pm.collectionVariables.get(\"updatedAt\");",
                    "    expectedUpdatedAt = new Date(expectedUpdatedAt).toISOString().slice(0, 19) + 'Z';",
                    "    pm.expect(currentUpdatedAt).to.eql(expectedUpdatedAt);",
                    "});",
                    "",
                    "pm.test(\"Verifying Status is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('status');",
                    "    let currentStatus = jsonData.status;",
                    "    let expectedStatus = parseInt(pm.collectionVariables.get(\"status\"));",
                    "    if(currentStatus || currentStatus == 0){",
                    "        pm.expect(currentStatus).to.eql(expectedStatus);",
                    "    }",
                    "    else{        ",
                    "        pm.expect(currentStatus).to.eql(1);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Verifying Group is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('group');",
                    "    let currentGroup = jsonData.group;",
                    "    let expectedGroup = pm.collectionVariables.get(\"group\");",
                    "    if(expectedGroup){",
                    "        pm.expect(currentGroup).to.eql(expectedGroup.toString());",
                    "    }",
                    "});",
                    ""
                  ],
                  "_lastExecutionId": "53f96a4b-6d60-48a2-a426-e3c55ed2c8af"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "27383397-3cae-4c51-ab4e-d26122b1f432",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "48064e31-19a8-4fe0-8f0f-f948ff426d40"
                }
              }
            ]
          },
          {
            "id": "4fb6f3c5-0b27-42e3-a4b0-c59343d84918",
            "name": "[Update :id]/v1/event/:id",
            "request": {
              "description": {
                "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "event",
                  "{{eventId}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "format",
                    "value": "full"
                  }
                ],
                "variable": []
              },
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "\n{\n  \"name\": \"update put:id\",\n  \"description\": \"The authentication process fails\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 1,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-07-25 16:19:52\",\n  \"group\": \"user\"\n}\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4f3f0332-de03-4461-8488-c8abb89ce846",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Successful PUT request\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"updated_at was updated correctly\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    let newUpdatedAtS = jsonData.updated_at; // 2024-07-25T16:19:52.000Z",
                    "    let newUpdatedAt = new Date(newUpdatedAtS).getTime(); // Convertido a UTC en ms",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let updatedAtS = requestBodyJson?.updated_at;",
                    "    if (updatedAtS) {",
                    "        if (!updatedAtS.endsWith('Z') && updatedAtS.indexOf('T') === -1) {",
                    "            updatedAtS = updatedAtS.replace(' ', 'T') + 'Z'; ",
                    "        }",
                    "        let updatedAt = new Date(updatedAtS).getTime();",
                    "        pm.expect(updatedAt).to.eql(newUpdatedAt);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"created_at was updated correctly\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    let newCreatedAtS = jsonData.created_at;",
                    "    let newCreatedAt = new Date(newCreatedAtS).getTime();",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let createdAtS = requestBodyJson?.created_at;",
                    "    if (createdAtS) {",
                    "        if (!createdAtS.endsWith('Z') && createdAtS.indexOf('T') === -1) {",
                    "            createdAtS = createdAtS.replace(' ', 'T') + 'Z'; ",
                    "        }",
                    "        let createdAt = new Date(createdAtS).getTime();",
                    "        pm.expect(createdAt).to.eql(newCreatedAt);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Name was updated correctly\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    let newName = jsonData.name;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let requestName = requestBodyJson?.name;",
                    "    if(requestName){",
                    "    pm.expect(newName).to.be.eql(requestName);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Description was updated correctly\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    let newDescription = jsonData.description;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let requestDescription = requestBodyJson?.description;",
                    "    if(requestDescription){",
                    "    pm.expect(newDescription).to.be.eql(requestDescription);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Group was updated correctly\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    let newGroup = jsonData.group;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let requestGroup = requestBodyJson?.group;",
                    "    if(requestGroup){",
                    "    pm.expect(newGroup).to.be.eql(requestGroup);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Status was updated correctly\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    let newStatus = jsonData.status;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let requestStatus = requestBodyJson?.status;",
                    "    if(requestStatus){",
                    "    pm.expect(newStatus).to.be.eql(requestStatus);",
                    "    }",
                    "});",
                    ""
                  ],
                  "_lastExecutionId": "f796f5a5-3f2f-4491-8fe4-a234dfeb757b"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "2dbd9b18-c663-4dec-b05d-3c6af2bbb38e",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "// Obtener el body del request como un objeto\r",
                    "let requestBodyPutSimple = pm.request.body.raw;\r",
                    "\r",
                    "// Almacenar el body en una variable de entorno (como JSON string)\r",
                    "pm.collectionVariables.set(\"requestBodyPutSimple\", requestBodyPutSimple);\r",
                    ""
                  ],
                  "_lastExecutionId": "96dc1ddf-c1f6-4a51-95bf-5afb240c9f2f"
                }
              }
            ]
          },
          {
            "id": "239f6e96-61ce-481b-b026-9372ce8019dd",
            "name": "[DELETE :id]/v1/event/:id",
            "request": {
              "description": {
                "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "event",
                  "{{eventId}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "84c90394-e048-4244-a1aa-ad54a2cb1c83",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Dynamic delete action for existent target with status code is 200\", function () {",
                    "    if(pm.response.responseSize) {",
                    "        let jsonData = pm.response.json(); ",
                    "        let id = pm.collectionVariables.get(\"eventId\");",
                    "        pm.response.to.have.status(200);",
                    "        ",
                    "        pm.expect(jsonData).to.be.an('object');",
                    "        pm.expect(jsonData.id).eq(id);",
                    "        pm.expect(jsonData.name).to.be.an('string');",
                    "        pm.expect(jsonData.description).to.be.an('string');",
                    "        pm.expect(jsonData.description.length > 1).eq(true);",
                    "        pm.expect(jsonData.description).to.not.be.empty;",
                    "    }else{",
                    "        pm.expect(pm.response.code).to.not.equal(200);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Dynamic delete action for not existent target with status code 404\", function () {",
                    "    if(!pm.response.responseSize) {",
                    "        pm.response.to.have.status(404);",
                    "    }else{",
                    "        pm.expect(pm.response.code).to.not.equal(404);",
                    "    }",
                    "});",
                    "",
                    "if(pm.response.responseSize) {",
                    "    let jsonData = pm.response.json(); ",
                    "    if(jsonData) {",
                    "        let iam_events_ids = pm.collectionVariables.get(\"iam_events_ids\");",
                    "        let list = JSON.parse(iam_events_ids);",
                    "        delete_id = jsonData.id;",
                    "        let res = list.filter(item => item != delete_id);",
                    "        iam_events_ids= JSON.stringify(res);",
                    "        pm.collectionVariables.set(\"iam_events_ids\", iam_events_ids);",
                    "    }",
                    "}",
                    "       ",
                    "",
                    "",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "46942b19-841c-4745-8de4-5c408361668b"
                }
              }
            ]
          },
          {
            "id": "377c0fba-7ddb-44c2-8726-fb775fff3908",
            "name": "[Delete 404]/v1/event/:id",
            "request": {
              "description": {
                "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "event",
                  "99999"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "533bef27-63c3-4ecf-a566-fbada62c9026",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Static delete action for not existent target with status code 404\", function () {",
                    "    pm.response.to.have.status(404);",
                    "});"
                  ],
                  "_lastExecutionId": "8d1ed8c9-0982-44ea-9eba-413aa0e2102c"
                }
              }
            ]
          },
          {
            "id": "05819ff9-d71f-4344-a216-71f93a8391cc",
            "name": "[Get id deleted]/v1/event/:id",
            "request": {
              "description": {
                "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "event",
                  "{{eventId}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "fc0cae36-3e3a-4635-abd1-80c9cfa89fb0",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 404\", function () {",
                    "    pm.response.to.have.status(404);",
                    "});",
                    "",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "9bbd28fe-b594-4e82-aef3-e304bea7bccd"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f304919-26a1-4b00-81e5-06138e662ddb",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "e7a434be-05ea-40bf-a6cd-58393c9ae555"
                }
              }
            ]
          },
          {
            "id": "4fcfb597-b402-4f62-b8bf-50108ee3a2a5",
            "name": "[Create 1]/v1/event",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "event"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"name\": \"test1\",\r\n  \"description\": \"Test1\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8eb247cb-3d41-4ae7-89b9-aa9b324ed210",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {\r",
                    "    pm.response.to.have.status(201);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('id');\r",
                    "    let eventId = jsonData.id;\r",
                    "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                    "    //console.log(\"eventId: \"+ eventId);\r",
                    "    pm.expect(eventId).to.not.be.null;\r",
                    "    pm.expect(eventId).to.not.be.undefined;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('name');\r",
                    "    let name = jsonData.name;\r",
                    "    pm.collectionVariables.set(\"name\", name);\r",
                    "    pm.expect(name).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('updated_at');\r",
                    "    let updatedAt = jsonData.updated_at;\r",
                    "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                    "    pm.expect(updatedAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('created_at');\r",
                    "    let createdAt = jsonData.created_at;\r",
                    "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                    "    pm.expect(createdAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Extract and store ID\", function () {\r",
                    "    let scope = pm.collectionVariables;\r",
                    "    let keyName = \"iam_events_ids\";\r",
                    "    let jsonData = pm.response.json();\r",
                    "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                    "    pm.expect(jsonData.id).to.not.be.null;\r",
                    "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                    "    if(jsonData.id != null & jsonData.id != undefined )\r",
                    "    {\r",
                    "    resourceIds.push(jsonData.id);\r",
                    "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        resourceIds = resourceIds;\r",
                    "    }\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "46c5320e-968e-4695-bb55-9f3c4f14bbe3"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "f50eae99-414c-48d3-b17b-a0c459b6b1d9",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a629083-99ed-4d51-ac4b-a3b727d37a04"
                }
              }
            ]
          },
          {
            "id": "50c8ab0b-e912-42b3-b3b5-7cb971b9cecf",
            "name": "[Create 2]/v1/event",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "event"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8d70def8-fa83-431c-b4aa-f542e80ab8c7",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {\r",
                    "    pm.response.to.have.status(201);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('id');\r",
                    "    let eventId = jsonData.id;\r",
                    "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                    "    //console.log(\"eventId: \"+ eventId);\r",
                    "    pm.expect(eventId).to.not.be.null;\r",
                    "    pm.expect(eventId).to.not.be.undefined;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('name');\r",
                    "    let name = jsonData.name;\r",
                    "    pm.collectionVariables.set(\"name\", name);\r",
                    "    pm.expect(name).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('updated_at');\r",
                    "    let updatedAt = jsonData.updated_at;\r",
                    "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                    "    pm.expect(updatedAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('created_at');\r",
                    "    let createdAt = jsonData.created_at;\r",
                    "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                    "    pm.expect(createdAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Extract and store ID\", function () {\r",
                    "    let scope = pm.collectionVariables;\r",
                    "    let keyName = \"iam_events_ids\";\r",
                    "    let jsonData = pm.response.json();\r",
                    "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                    "    pm.expect(jsonData.id).to.not.be.null;\r",
                    "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                    "    if(jsonData.id != null & jsonData.id != undefined )\r",
                    "    {\r",
                    "    resourceIds.push(jsonData.id);\r",
                    "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        resourceIds = resourceIds;\r",
                    "    }\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "3e01e23c-bc01-4b4a-8389-00403c7a7097"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f1c0598-959b-407a-a1ee-3ee307e1b82b",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3dc293cf-29b9-49c8-9f23-0dd71c39d06b"
                }
              }
            ]
          },
          {
            "id": "09799d8e-ff6e-4fc1-a2ab-08063112865a",
            "name": "[Create 3]/v1/event",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "event"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ae9c6fc5-808b-4e6e-90c2-e2bd9416b832",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {\r",
                    "    pm.response.to.have.status(201);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('id');\r",
                    "    let eventId = jsonData.id;\r",
                    "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                    "    //console.log(\"eventId: \"+ eventId);\r",
                    "    pm.expect(eventId).to.not.be.null;\r",
                    "    pm.expect(eventId).to.not.be.undefined;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('name');\r",
                    "    let name = jsonData.name;\r",
                    "    pm.collectionVariables.set(\"name\", name);\r",
                    "    pm.expect(name).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('updated_at');\r",
                    "    let updatedAt = jsonData.updated_at;\r",
                    "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                    "    pm.expect(updatedAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('created_at');\r",
                    "    let createdAt = jsonData.created_at;\r",
                    "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                    "    pm.expect(createdAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Extract and store ID\", function () {\r",
                    "    let scope = pm.collectionVariables;\r",
                    "    let keyName = \"iam_events_ids\";\r",
                    "    let jsonData = pm.response.json();\r",
                    "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                    "    pm.expect(jsonData.id).to.not.be.null;\r",
                    "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                    "    if(jsonData.id != null & jsonData.id != undefined )\r",
                    "    {\r",
                    "    resourceIds.push(jsonData.id);\r",
                    "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        resourceIds = resourceIds;\r",
                    "    }\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "6d793d0f-eb08-4587-b025-d8d9f7fc2b36"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff767143-195b-42f1-a74d-c15c30a5cf19",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e7a0e09-9dee-4267-bde9-528c1da03a6e"
                }
              }
            ]
          },
          {
            "id": "61665e84-8d43-4429-8f60-445a5159b8f1",
            "name": "[Update :list]/v1/event",
            "request": {
              "description": {
                "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "event"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "ql",
                    "value": "{\"id\":{\"in\":{{iam_events_ids}}}}"
                  }
                ],
                "variable": []
              },
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "\n{\n  \"name\": \"OnlineTest\",\n  \"description\": \"Bulk action\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 3,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-04-19 06:19:50\",\n  \"group\": \"guess\"\n}\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "da639eee-be63-4fa1-8096-28253f349dcf",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"Verifying that the names has been updated\", function () {",
                    "    if (!pm.response.responseSize) return null;",
                    "    let jsonData = pm.response.json();",
                    "    if (!jsonData) return null;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPut\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let responseName = jsonData.data.map(item => item.name);",
                    "    let requestName = requestBodyJson.name",
                    "    let allNamesMatch = responseName.every(name => name === requestName);",
                    "    pm.expect(allNamesMatch).to.be.true;  ",
                    "});",
                    "",
                    "pm.test(\"Verifying that the description has been updated\", function () {",
                    "    if (!pm.response.responseSize) return null;",
                    "    let jsonData = pm.response.json();",
                    "    if (!jsonData) return null;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPut\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let responseDescription = jsonData.data.map(item => item.description);",
                    "    let requestDescription = requestBodyJson.description",
                    "    let allDescriptionsMatch = responseDescription.every(description => description === requestDescription);",
                    "    pm.expect(allDescriptionsMatch).to.be.true;  ",
                    "});",
                    "",
                    "pm.test(\"Verifying that the Status has been updated\", function () {",
                    "    if (!pm.response.responseSize) return null;",
                    "    let jsonData = pm.response.json();",
                    "    if (!jsonData) return null;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPut\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let responseStatus = jsonData.data.map(item => item.status);",
                    "    let requestStatus = requestBodyJson.status",
                    "    let allStatusMatch = responseStatus.every(status => status === requestStatus);",
                    "    pm.expect(allStatusMatch).to.be.true;  ",
                    "});",
                    "",
                    "pm.test(\"Verifying that the Group has been updated\", function () {",
                    "    if (!pm.response.responseSize) return null;",
                    "    let jsonData = pm.response.json();",
                    "    if (!jsonData) return null;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPut\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let responseGroup = jsonData.data.map(item => item.group);",
                    "    let requestGroup = requestBodyJson.group",
                    "    let allStatusMatch = responseGroup.every(group => group === requestGroup);",
                    "    pm.expect(allStatusMatch).to.be.true;  ",
                    "});",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "   ",
                    "",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "6f3abcd4-6df0-4a1c-b8b1-4d59259075c9"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "df09a970-dce9-4fa6-839b-82354082d187",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "// Obtener el body del request como un objeto\r",
                    "let requestBodyPut = pm.request.body.raw;\r",
                    "\r",
                    "// Almacenar el body en una variable de entorno (como JSON string)\r",
                    "pm.collectionVariables.set(\"requestBodyPut\", requestBodyPut);\r",
                    "\r",
                    "\r",
                    "/*let uri = pm.collectionVariables.get('base_url')\r",
                    "pm.sendRequest({\r",
                    "    url: uri + '/v1/event',\r",
                    "    method: 'POST',\r",
                    "    header: {\r",
                    "        'Content-Type': 'application/x-www-form-urlencoded'\r",
                    "    },\r",
                    "    body: {\r",
                    "        mode: 'raw',\r",
                    "        raw: JSON.stringify({\r",
                    "            \"name\": \"test3\",\r",
                    "            \"description\": \"Test3\",\r",
                    "            \"payload\": { \"name\":\"test\"},\r",
                    "            \"status\": 1,\r",
                    "            \"group\": \"user\"\r",
                    "        })\r",
                    "    }\r",
                    "}, function (err, res) {\r",
                    "    console.log(\">>> CREATE_\");\r",
                    "    if (!res?.responseSize) return null;\r",
                    "    let jsonData = res.json();\r",
                    "    if (!jsonData) return null;\r",
                    "    jsonData?.id && pm.collectionVariables.set(\"eventId\", jsonData.id);\r",
                    "});*/\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "9641b317-ea75-4aaf-b6b4-8a0210e572a2"
                }
              }
            ]
          },
          {
            "id": "d7077136-6666-4568-9fc4-6ff541ffa7ed",
            "name": "[Delete :list]/v1/event",
            "request": {
              "description": {
                "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "event"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "ql",
                    "value": "{\"id\":{\"in\":{{iam_events_ids}}}}"
                  }
                ],
                "variable": []
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5c23b3a3-b9c0-49c1-ab06-54ef15520eda",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "(()=>{",
                    "    if (!pm.response.responseSize) return null;",
                    "    let jsonData = pm.response.json();",
                    "    if (!jsonData) return null;",
                    "    let iam_events_ids = pm.collectionVariables.get(\"iam_events_ids\");",
                    "    let list = iam_events_ids ? JSON.parse(iam_events_ids) : null;",
                    "    if (!Array.isArray(list) || !list.length) return null;",
                    "    let ids = jsonData.data.map(item => item.id);",
                    "    let res = list.filter(item => !ids.includes(item));",
                    "    let values = JSON.stringify(res);",
                    "    pm.collectionVariables.set(\"iam_events_ids\", values);",
                    "})()",
                    ""
                  ],
                  "_lastExecutionId": "521d581e-8e42-4056-97dd-ddd057c7979b"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c1a7ea8-29be-4db4-94d6-58ce28a81baa",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "758ef54c-301c-4eff-a9ec-5f3398e38567"
                }
              }
            ]
          },
          {
            "id": "d76fa67c-b1f8-4136-a351-3d1cc16250ac",
            "name": "[clone non-existent id]/v1/event/:id",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "event",
                  "{{eventId}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n \"name\": \"cloned\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9e52211b-d8bb-4ba6-be0d-4a0769fc088d",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"event name was cloned correctly\", function () {\r",
                    "    if (!pm.response.responseSize) return null;\r",
                    "    let jsonData = pm.response.json();\r",
                    "    if (!jsonData) return null;\r",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPost\");\r",
                    "    if (!requestBody || requestBody.trim() === \"\") {\r",
                    "        requestBody = null;\r",
                    "    }\r",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;\r",
                    "    let cloneName = jsonData.name;\r",
                    "    let requestName = requestBodyJson ? requestBodyJson.name: null;\r",
                    "    if (requestName) {\r",
                    "        pm.expect(cloneName).to.be.eql(requestName);\r",
                    "    }\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "6b3bb0eb-f5bf-4bcb-a0f4-ddbdd6268677"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "a40a516d-5aaf-4492-bd31-782bc5a5a860",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "// Obtener el body del request como un objeto\r",
                    "let requestBodyPost = pm.request.body.raw;\r",
                    "\r",
                    "// Almacenar el body en una variable de entorno (como JSON string)\r",
                    "pm.collectionVariables.set(\"requestBodyPost\", requestBodyPost);"
                  ],
                  "_lastExecutionId": "9555e266-5fa0-4283-b288-b83ca567366b"
                }
              }
            ]
          },
          {
            "id": "3b461a94-881d-44d6-bbab-d99519b36697",
            "name": "[Create 4]/v1/event",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "event"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d1353011-d2d3-4598-953c-68e157ba959c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {\r",
                    "    pm.response.to.have.status(201);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('id');\r",
                    "    let eventId = jsonData.id;\r",
                    "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                    "    //console.log(\"eventId: \"+ eventId);\r",
                    "    pm.expect(eventId).to.not.be.null;\r",
                    "    pm.expect(eventId).to.not.be.undefined;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('name');\r",
                    "    let name = jsonData.name;\r",
                    "    pm.collectionVariables.set(\"name\", name);\r",
                    "    pm.expect(name).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('updated_at');\r",
                    "    let updatedAt = jsonData.updated_at;\r",
                    "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                    "    pm.expect(updatedAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('created_at');\r",
                    "    let createdAt = jsonData.created_at;\r",
                    "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                    "    pm.expect(createdAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Extract and store ID\", function () {\r",
                    "    let scope = pm.collectionVariables;\r",
                    "    let keyName = \"iam_events_ids\";\r",
                    "    let jsonData = pm.response.json();\r",
                    "    \r",
                    "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                    "    pm.expect(jsonData.id).to.not.be.null;\r",
                    "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                    "    if(jsonData.id != null & jsonData.id != undefined )\r",
                    "    {\r",
                    "    resourceIds.push(jsonData.id);\r",
                    "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        resourceIds = resourceIds;\r",
                    "    }\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "ae13f096-ee19-4140-8ecf-7a4c3870549b"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "c5115db0-e8c9-4bcf-a3d0-d898d3fa1d58",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "125b6b79-7467-4138-ac3c-8a9f2418d180"
                }
              }
            ]
          },
          {
            "id": "0af47a85-bb6a-4e77-9b45-7d251c1f0160",
            "name": "[Cloned]/v1/event/:id",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "event",
                  "{{eventId}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"name\": \"cloned\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "118c62c6-48a9-482a-87d2-164be184025e",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"event name was cloned correctly\", function () {\r",
                    "    if (!pm.response.responseSize) return null;\r",
                    "    let jsonData = pm.response.json();\r",
                    "    if (!jsonData) return null;\r",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPost\");\r",
                    "    if (!requestBody || requestBody.trim() === \"\") {\r",
                    "        requestBody = null;\r",
                    "    }\r",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;\r",
                    "    let cloneName = jsonData.name;\r",
                    "    let originName = pm.collectionVariables.get(\"name\");\r",
                    "    let requestName = requestBodyJson ? requestBodyJson.name: null;\r",
                    "    if (!requestName) {\r",
                    "        pm.expect(cloneName).to.be.eql(originName);\r",
                    "    } else {\r",
                    "        pm.expect(cloneName).to.be.eql(requestName);\r",
                    "    }\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "5a58d484-aef8-4d2e-9ecd-5f87aa9879a0"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7664ccc-fad0-4ff9-b486-66cd2589a65b",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "// Obtener el body del request como un objeto\r",
                    "let requestBodyPost = pm.request.body.raw;\r",
                    "\r",
                    "// Almacenar el body en una variable de entorno (como JSON string)\r",
                    "pm.collectionVariables.set(\"requestBodyPost\", requestBodyPost);"
                  ],
                  "_lastExecutionId": "a5e98e20-6527-487e-90de-d180dacf20dd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "00c0ce62-ceb2-4fde-a464-bc212bcd062a",
        "name": "action",
        "item": [
          {
            "id": "a0b1b1f9-edaa-4142-9ea0-e4ac0b8fad23",
            "name": "[Create]/v1/action",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "action"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"name\": \"action.user:lock\",\r\n  \"description\": \"The process of blocking users involves temporarily or permanently disabling a user's account in a system. It is used to protect the security of a system against potential threats or security breaches, taking measures to prevent unauthorized access or malicious activities. Some possible reasons that would justify this block for security reasons include: Unauthorized access attempts, Violation of security policie, Malicious activity, Termination of employment or relationship with the organization, etc.\",\r\n  \"payload\": \"{\\\"example\\\":{\\\"date\\\":1713180784894,\\\"enterpriseId\\\":1,\\\"failure\\\":{\\\"count\\\":8,\\\"ko_last\\\":\\\"2024-04-15T11:33:04.000Z\\\",\\\"ko_start\\\":\\\"2024-04-15T11:32:58.000Z\\\",\\\"user_id\\\":134905,\\\"ko_diff\\\":0},\\\"fingerprint\\\":{\\\"components\\\":{\\\"useragent\\\":{\\\"browser\\\":{},\\\"device\\\":{\\\"family\\\":\\\"Other\\\",\\\"version\\\":\\\"0\\\",\\\"id\\\":\\\"UUIDE49283ED-12EA-D64D-6DDE-DDC26B30F948_ANTONIO.MEMBRIDES\\\",\\\"description\\\":\\\"Chrome - 110.0.0.0 / Windows - windows-10\\\"},\\\"os\\\":{},\\\"product\\\":{\\\"version\\\":\\\"2.0\\\"}},\\\"geoip\\\":{},\\\"server\\\":{},\\\"client\\\":{}}},\\\"flow\\\":\\\"171318078476991\\\",\\\"method\\\":\\\"BASIC\\\",\\\"products\\\":[4],\\\"userId\\\":134905,\\\"userStatus\\\":1,\\\"username\\\":\\\"tony@sita.aero\\\"},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"date\\\":{\\\"type\\\":\\\"integer\\\"},\\\"enterpriseId\\\":{\\\"type\\\":\\\"integer\\\"},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}}},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"browser\\\":{\\\"type\\\":\\\"object\\\"},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"family\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"os\\\":{\\\"type\\\":\\\"object\\\"},\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"version\\\":{\\\"type\\\":\\\"string\\\"}}}}},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\"},\\\"server\\\":{\\\"type\\\":\\\"object\\\"},\\\"client\\\":{\\\"type\\\":\\\"object\\\"}}}}},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]},\\\"userId\\\":{\\\"type\\\":\\\"integer\\\"},\\\"userStatus\\\":{\\\"type\\\":\\\"integer\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"}}}}\",\r\n  \"status\": 1,\r\n  \"group\": \"user\",\r\n  \"created_at\": \"2024-04-18 12:19:52\",\r\n  \"updated_at\": \"2024-04-19 06:19:50\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8574be0b-df06-455d-97ac-dc9eee5f6748",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {\r",
                    "    pm.response.to.have.status(201);\r",
                    "});\r",
                    "\r",
                    "(()=>{\r",
                    "    let jsonData = pm.response.json();\r",
                    "    let status = jsonData.status;\r",
                    "    let description = jsonData.description;\r",
                    "    let group = jsonData.group; \r",
                    "    pm.collectionVariables.set(\"statusAction\", status);     \r",
                    "    pm.collectionVariables.set(\"descriptionAction\", description);\r",
                    "    pm.collectionVariables.set(\"groupAction\", group);\r",
                    "})()\r",
                    "\r",
                    "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('id');\r",
                    "    let actionId = jsonData.id;\r",
                    "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                    "    pm.expect(actionId).to.not.be.null;\r",
                    "    pm.expect(actionId).to.not.be.undefined;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('name');\r",
                    "    let name = jsonData.name;\r",
                    "    pm.collectionVariables.set(\"nameAction\", name);\r",
                    "    pm.expect(name).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('updated_at');\r",
                    "    let updatedAt = jsonData.updated_at;\r",
                    "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                    "    pm.expect(updatedAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('created_at');\r",
                    "    let createdAt = jsonData.created_at;\r",
                    "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                    "    pm.expect(createdAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Extract and store ID\", function () {\r",
                    "    let scope = pm.collectionVariables;\r",
                    "    let keyName = \"iamActionIds\";\r",
                    "    let jsonData = pm.response.json();\r",
                    "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                    "    pm.expect(jsonData.id).to.not.be.null;\r",
                    "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                    "    if(jsonData.id != null & jsonData.id != undefined )\r",
                    "    {\r",
                    "    resourceIds.push(jsonData.id);\r",
                    "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        resourceIds = resourceIds;\r",
                    "    }\r",
                    "});\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "000958d0-319b-4a65-8453-32e369c51c64"
                }
              }
            ]
          },
          {
            "id": "0d7ff2ba-37bb-4b04-8e00-0a13bc301b06",
            "name": "[List]/v1/action",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "action"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "2"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "861ad954-b97d-4beb-b8fe-45a723eb86e3",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "5ed8c0f0-5ae7-47ee-8bf4-a52841e5e740"
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            }
          },
          {
            "id": "918f0280-fe8d-4d85-aaea-fe1e8103719a",
            "name": "[List :id]/v1/action/:id",
            "request": {
              "description": {
                "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "action",
                  "{{idAction}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "format",
                    "value": "full"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "867e5d0d-2958-4374-aa36-a3fffb8c957a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"Verifying Name is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('name');",
                    "    let currentName = jsonData.name;",
                    "    pm.expect(currentName).to.be.an('string');",
                    "    pm.expect(currentName.length > 1).eq(true);",
                    "    let expectedName = pm.collectionVariables.get(\"nameAction\");",
                    "    pm.expect(currentName).to.eql(expectedName);",
                    "});",
                    "",
                    "pm.test(\"Verifying Description is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('description');",
                    "    let currentDescription = jsonData.description;",
                    "    let expectedDescription = pm.collectionVariables.get(\"descriptionAction\");",
                    "    pm.expect(currentDescription).to.eql(expectedDescription);",
                    "});",
                    "",
                    "pm.test(\"Verifying Id is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('id');",
                    "    let currentID = jsonData.id;",
                    "    pm.expect(currentID).to.not.be.null;",
                    "    pm.expect(currentID).to.not.be.undefined;",
                    "    let expectedId = pm.collectionVariables.get(\"idAction\");",
                    "    pm.expect(currentID).to.eql(expectedId);",
                    "});",
                    "",
                    "pm.test(\"Verifying created_at is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('created_at');",
                    "    let currentCreatedAt = new Date(jsonData.created_at).toISOString().slice(0, 19) + 'Z';",
                    "    let iso8601Regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$/;",
                    "    pm.expect(currentCreatedAt).to.match(iso8601Regex);",
                    "    let expectedCreatedAt = pm.collectionVariables.get(\"createdAtAction\");",
                    "    expectedCreatedAt = new Date(expectedCreatedAt).toISOString().slice(0, 19) + 'Z';",
                    "    pm.expect(currentCreatedAt).to.eql(expectedCreatedAt);",
                    "});",
                    "",
                    "pm.test(\"Verifying updated_at is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('updated_at');",
                    "    let currentUpdatedAt = new Date(jsonData.updated_at).toISOString().slice(0, 19) + 'Z';",
                    "    let expectedUpdatedAt = pm.collectionVariables.get(\"updatedAtAction\");",
                    "    expectedUpdatedAt = new Date(expectedUpdatedAt).toISOString().slice(0, 19) + 'Z';",
                    "    pm.expect(currentUpdatedAt).to.eql(expectedUpdatedAt);",
                    "});",
                    "",
                    "pm.test(\"Verifying Status is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('status');",
                    "    let currentStatus = jsonData.status;",
                    "    let expectedStatus = parseInt(pm.collectionVariables.get(\"statusAction\"));",
                    "    if(currentStatus || currentStatus == 0){",
                    "        pm.expect(currentStatus).to.eql(expectedStatus);",
                    "    }",
                    "    else{        ",
                    "        pm.expect(currentStatus).to.eql(1);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Verifying Group is the created one\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.have.property('group');",
                    "    let currentGroup = jsonData.group;",
                    "    let expectedGroup = pm.collectionVariables.get(\"groupAction\");",
                    "    if(expectedGroup){",
                    "        pm.expect(currentGroup).to.eql(expectedGroup.toString());",
                    "    }",
                    "});",
                    ""
                  ],
                  "_lastExecutionId": "c0b9eae2-3d5a-4f5f-8b6d-ee050fd51a3c"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "d791ef86-3ef5-4634-bdae-0effa12e3a57",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "9753d9b4-9bfb-4c63-a16d-967f1147c877"
                }
              }
            ]
          },
          {
            "id": "de96f4b8-ebc2-4eba-b801-0d30bf9c0913",
            "name": "[Update :id]/v1/action/:id",
            "request": {
              "description": {
                "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "action",
                  "{{idAction}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "format",
                    "value": "full"
                  }
                ],
                "variable": []
              },
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "\n{\n  \"name\": \"update put:id\",\n  \"description\": \"The authentication process fails\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 1,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-07-25 16:19:52\",\n  \"group\": \"user\"\n}\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "49802296-17cd-4c27-91a6-ccc7c099c7af",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Successful PUT request\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"updated_at was updated correctly\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    let newUpdatedAtS = jsonData.updated_at;",
                    "    let newUpdatedAt = new Date(newUpdatedAtS).getTime();",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let updatedAtS = requestBodyJson?.updated_at;",
                    "    if (updatedAtS) {",
                    "        if (!updatedAtS.endsWith('Z') && updatedAtS.indexOf('T') === -1) {",
                    "            updatedAtS = updatedAtS.replace(' ', 'T') + 'Z';",
                    "        }",
                    "        let updatedAt = new Date(updatedAtS).getTime();",
                    "        pm.expect(updatedAt).to.eql(newUpdatedAt);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"created_at was updated correctly\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    let newCreatedAtS = jsonData.created_at;",
                    "    let newCreatedAt = new Date(newCreatedAtS).getTime();",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let createdAtS = requestBodyJson?.created_at;",
                    "    if (createdAtS) {",
                    "        if (!createdAtS.endsWith('Z') && createdAtS.indexOf('T') === -1) {",
                    "            createdAtS = createdAtS.replace(' ', 'T') + 'Z';",
                    "        }",
                    "        let createdAt = new Date(createdAtS).getTime();",
                    "        pm.expect(createdAt).to.eql(newCreatedAt);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Name was updated correctly\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    let newName = jsonData.name;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let requestName = requestBodyJson?.name;",
                    "    if(requestName){",
                    "    pm.expect(newName).to.be.eql(requestName);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Description was updated correctly\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    let newDescription = jsonData.description;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let requestDescription = requestBodyJson?.description;",
                    "    if(requestDescription){",
                    "    pm.expect(newDescription).to.be.eql(requestDescription);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Group was updated correctly\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    let newGroup = jsonData.group;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let requestGroup = requestBodyJson?.group;",
                    "    if(requestGroup){",
                    "    pm.expect(newGroup).to.be.eql(requestGroup);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Status was updated correctly\", function () {",
                    "    let jsonData = pm.response.json();",
                    "    let newStatus = jsonData.status;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let requestStatus = requestBodyJson?.status;",
                    "    if(requestStatus){",
                    "    pm.expect(newStatus).to.be.eql(requestStatus);",
                    "    }",
                    "});",
                    ""
                  ],
                  "_lastExecutionId": "f76e6ed6-db6f-49e4-991d-9c5055ef152a"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d99fca8-ea6d-4715-9001-782d1be3b1f5",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "// Obtener el body del request como un objeto\r",
                    "let requestBodyPutSimple = pm.request.body.raw;\r",
                    "\r",
                    "// Almacenar el body en una variable de entorno (como JSON string)\r",
                    "pm.collectionVariables.set(\"requestBodyPutSimpleAction\", requestBodyPutSimple);\r",
                    ""
                  ],
                  "_lastExecutionId": "bc8ca81c-aebf-4904-9184-1537d57d4c39"
                }
              }
            ]
          },
          {
            "id": "64307d41-cf27-48a6-a0d6-be665713697b",
            "name": "[DELETE :id]/v1/action/:id",
            "request": {
              "description": {
                "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "action",
                  "{{idAction}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e3ca140f-345e-45a7-8b88-a28e981cd8d8",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Dynamic delete action for existent target with status code is 200\", function () {",
                    "    if(pm.response.responseSize) {",
                    "        let jsonData = pm.response.json(); ",
                    "        let id = pm.collectionVariables.get(\"idAction\");",
                    "        pm.response.to.have.status(200);",
                    "        pm.expect(jsonData).to.be.an('object');",
                    "        pm.expect(jsonData.id).eq(id);",
                    "        pm.expect(jsonData.name).to.be.an('string');",
                    "        pm.expect(jsonData.description).to.be.an('string');",
                    "        pm.expect(jsonData.description.length > 1).eq(true);",
                    "        pm.expect(jsonData.description).to.not.be.empty;",
                    "    }else{",
                    "        pm.expect(pm.response.code).to.not.equal(200);",
                    "    }",
                    "});",
                    "",
                    "pm.test(\"Dynamic delete action for not existent target with status code 404\", function () {",
                    "    if(!pm.response.responseSize) {",
                    "        pm.response.to.have.status(404);",
                    "    }else{",
                    "        pm.expect(pm.response.code).to.not.equal(404);",
                    "    }",
                    "});",
                    "",
                    "if(pm.response.responseSize) {",
                    "    let jsonData = pm.response.json(); ",
                    "    if(jsonData) {",
                    "        let iamActionIds = pm.collectionVariables.get(\"iamActionIds\");",
                    "        let list = JSON.parse(iamActionIds);",
                    "        delete_id = jsonData.id;",
                    "        let res = list.filter(item => item != delete_id);",
                    "        iamActionIds= JSON.stringify(res);",
                    "        pm.collectionVariables.set(\"iamActionIds\", iamActionIds);",
                    "    }",
                    "}",
                    "       ",
                    "",
                    "",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "ae9abf86-c564-4e3a-a37a-a0ebe28e0700"
                }
              }
            ]
          },
          {
            "id": "1c26b126-104b-4971-928a-10d5fd52b2d7",
            "name": "[Delete 404]/v1/action/:id",
            "request": {
              "description": {
                "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "action",
                  "99999"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5efdec0c-7fbf-49c2-bd18-13200407a1fe",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Static delete action for not existent target with status code 404\", function () {",
                    "    pm.response.to.have.status(404);",
                    "});"
                  ],
                  "_lastExecutionId": "cf0a74f9-7c3f-4453-9d55-88a99927a7ef"
                }
              }
            ]
          },
          {
            "id": "c76d5485-d724-4583-ba61-f77d9f5eaac6",
            "name": "[Get id deleted]/v1/action/:id",
            "request": {
              "description": {
                "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "action",
                  "{{idAction}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0a6a2903-2b00-42fe-8aaa-abc233c1f5b6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 404\", function () {",
                    "    pm.response.to.have.status(404);",
                    "});",
                    "",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "5935ae31-d1fc-43de-9f63-8d145eee0931"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "e58d40bd-95a5-4c8e-8165-0337aec079d7",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "4703a892-e207-464c-8369-29f33687583b"
                }
              }
            ]
          },
          {
            "id": "525a745f-357a-4705-9d8f-d0060e278310",
            "name": "[Create 1]/v1/action",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "action"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"name\": \"test1\",\r\n  \"description\": \"Test1\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "035535ed-7e60-4fad-824a-e9982b424430",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {\r",
                    "    pm.response.to.have.status(201);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('id');\r",
                    "    let actionId = jsonData.id;\r",
                    "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                    "    pm.expect(actionId).to.not.be.null;\r",
                    "    pm.expect(actionId).to.not.be.undefined;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('name');\r",
                    "    let name = jsonData.name;\r",
                    "    pm.collectionVariables.set(\"nameAction\", name);\r",
                    "    pm.expect(name).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('updated_at');\r",
                    "    let updatedAt = jsonData.updated_at;\r",
                    "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                    "    pm.expect(updatedAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action created_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('created_at');\r",
                    "    let createdAt = jsonData.created_at;\r",
                    "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                    "    pm.expect(createdAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Extract and store ID\", function () {\r",
                    "    let scope = pm.collectionVariables;\r",
                    "    let keyName = \"iamActionIds\";\r",
                    "    let jsonData = pm.response.json();\r",
                    "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                    "    pm.expect(jsonData.id).to.not.be.null;\r",
                    "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                    "    if(jsonData.id != null & jsonData.id != undefined )\r",
                    "    {\r",
                    "    resourceIds.push(jsonData.id);\r",
                    "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        resourceIds = resourceIds;\r",
                    "    }\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "5e440ab8-14c1-448e-8798-da363f42174b"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2c9c95e-f67b-4923-a0aa-fe40bebccd1e",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bdd12300-2e5e-4d99-947d-3a94a013ce2f"
                }
              }
            ]
          },
          {
            "id": "f2d3374d-7098-404f-a912-8787093c8b24",
            "name": "[Create 2]/v1/action",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "action"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5b284afc-453b-43a3-b6c5-70e813387634",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {\r",
                    "    pm.response.to.have.status(201);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('id');\r",
                    "    let actionId = jsonData.id;\r",
                    "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                    "    pm.expect(actionId).to.not.be.null;\r",
                    "    pm.expect(actionId).to.not.be.undefined;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('name');\r",
                    "    let name = jsonData.name;\r",
                    "    pm.collectionVariables.set(\"nameAction\", name);\r",
                    "    pm.expect(name).to.not.be.empty;\r",
                    "});\r",
                    "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('updated_at');\r",
                    "    let updatedAt = jsonData.updated_at;\r",
                    "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                    "    pm.expect(updatedAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action created_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('created_at');\r",
                    "    let createdAt = jsonData.created_at;\r",
                    "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                    "    pm.expect(createdAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Extract and store ID\", function () {\r",
                    "    let scope = pm.collectionVariables;\r",
                    "    let keyName = \"iamActionIds\";\r",
                    "    let jsonData = pm.response.json();\r",
                    "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                    "    pm.expect(jsonData.id).to.not.be.null;\r",
                    "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                    "    if(jsonData.id != null & jsonData.id != undefined )\r",
                    "    {\r",
                    "    resourceIds.push(jsonData.id);\r",
                    "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        resourceIds = resourceIds;\r",
                    "    }\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "21fa38e4-fd2f-435a-98c4-82d0ceff9a0a"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "45df576d-930a-4c64-8cde-d4fc0e0fce1d",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb9d25f4-2a15-4d6d-a56f-280185d8cc0d"
                }
              }
            ]
          },
          {
            "id": "2f38ae73-8c98-40ac-8d2b-7fdf23f5745b",
            "name": "[Create 3]/v1/action",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "action"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ea2614e4-3bd2-4cd8-872a-e42c4b9851ad",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {\r",
                    "    pm.response.to.have.status(201);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('id');\r",
                    "    let actionId = jsonData.id;\r",
                    "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                    "    pm.expect(actionId).to.not.be.null;\r",
                    "    pm.expect(actionId).to.not.be.undefined;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('name');\r",
                    "    let name = jsonData.name;\r",
                    "    pm.collectionVariables.set(\"nameAction\", name);\r",
                    "    pm.expect(name).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('updated_at');\r",
                    "    let updatedAt = jsonData.updated_at;\r",
                    "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                    "    pm.expect(updatedAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action created_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('created_at');\r",
                    "    let createdAt = jsonData.created_at;\r",
                    "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                    "    pm.expect(createdAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Extract and store ID\", function () {\r",
                    "    let scope = pm.collectionVariables;\r",
                    "    let keyName = \"iamActionIds\";\r",
                    "    let jsonData = pm.response.json();\r",
                    "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                    "    pm.expect(jsonData.id).to.not.be.null;\r",
                    "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                    "    if(jsonData.id != null & jsonData.id != undefined )\r",
                    "    {\r",
                    "    resourceIds.push(jsonData.id);\r",
                    "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        resourceIds = resourceIds;\r",
                    "    }\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "906d2a11-85fd-4eec-872d-50ce2068994e"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0a3e923-462c-4e6a-991a-66bfea185e7a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "469a9599-cac6-4950-b1b3-2a36f9473540"
                }
              }
            ]
          },
          {
            "id": "74d39070-afe8-4db8-9a40-392ffe638876",
            "name": "[Update :list]/v1/action",
            "request": {
              "description": {
                "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "action"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "ql",
                    "value": "{\"id\":{\"in\":{{iamActionIds}}}}"
                  }
                ],
                "variable": []
              },
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "\n{\n  \"name\": \"OnlineTest\",\n  \"description\": \"Bulk action\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 3,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-04-19 06:19:50\",\n  \"group\": \"guess\"\n}\n",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3ca60904-7df5-4293-b0ac-a32f0e48a60c",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"Verifying that the names has been updated\", function () {",
                    "    if (!pm.response.responseSize) return null;",
                    "    let jsonData = pm.response.json();",
                    "    if (!jsonData) return null;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutAction\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let responseName = jsonData.data.map(item => item.name);",
                    "    let requestName = requestBodyJson.name",
                    "    let allNamesMatch = responseName.every(name => name === requestName);",
                    "    pm.expect(allNamesMatch).to.be.true;  ",
                    "});",
                    "",
                    "pm.test(\"Verifying that the description has been updated\", function () {",
                    "    if (!pm.response.responseSize) return null;",
                    "    let jsonData = pm.response.json();",
                    "    if (!jsonData) return null;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutAction\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let responseDescription = jsonData.data.map(item => item.description);",
                    "    let requestDescription = requestBodyJson.description",
                    "    let allDescriptionsMatch = responseDescription.every(description => description === requestDescription);",
                    "    pm.expect(allDescriptionsMatch).to.be.true;  ",
                    "});",
                    "",
                    "pm.test(\"Verifying that the Status has been updated\", function () {",
                    "    if (!pm.response.responseSize) return null;",
                    "    let jsonData = pm.response.json();",
                    "    if (!jsonData) return null;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutAction\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let responseStatus = jsonData.data.map(item => item.status);",
                    "    let requestStatus = requestBodyJson.status",
                    "    let allStatusMatch = responseStatus.every(status => status === requestStatus);",
                    "    pm.expect(allStatusMatch).to.be.true;  ",
                    "});",
                    "",
                    "pm.test(\"Verifying that the Group has been updated\", function () {",
                    "    if (!pm.response.responseSize) return null;",
                    "    let jsonData = pm.response.json();",
                    "    if (!jsonData) return null;",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPutAction\");",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                    "    let responseGroup = jsonData.data.map(item => item.group);",
                    "    let requestGroup = requestBodyJson.group",
                    "    let allStatusMatch = responseGroup.every(group => group === requestGroup);",
                    "    pm.expect(allStatusMatch).to.be.true;  ",
                    "});",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "   ",
                    "",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "8703c4b4-76cf-42de-8441-96923deb8a64"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "561faf7a-fcc3-4b59-8c56-7f9b791137f7",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "// Obtener el body del request como un objeto\r",
                    "let requestBodyPut = pm.request.body.raw;\r",
                    "\r",
                    "// Almacenar el body en una variable de entorno (como JSON string)\r",
                    "pm.collectionVariables.set(\"requestBodyPutAction\", requestBodyPut);\r",
                    "\r",
                    "\r",
                    "/*let uri = pm.collectionVariables.get('base_url')\r",
                    "pm.sendRequest({\r",
                    "    url: uri + '/v1/event',\r",
                    "    method: 'POST',\r",
                    "    header: {\r",
                    "        'Content-Type': 'application/x-www-form-urlencoded'\r",
                    "    },\r",
                    "    body: {\r",
                    "        mode: 'raw',\r",
                    "        raw: JSON.stringify({\r",
                    "            \"name\": \"test3\",\r",
                    "            \"description\": \"Test3\",\r",
                    "            \"payload\": { \"name\":\"test\"},\r",
                    "            \"status\": 1,\r",
                    "            \"group\": \"user\"\r",
                    "        })\r",
                    "    }\r",
                    "}, function (err, res) {\r",
                    "    console.log(\">>> CREATE_\");\r",
                    "    if (!res?.responseSize) return null;\r",
                    "    let jsonData = res.json();\r",
                    "    if (!jsonData) return null;\r",
                    "    jsonData?.id && pm.collectionVariables.set(\"eventId\", jsonData.id);\r",
                    "});*/\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "d2cd924b-03cb-4b94-8f6a-03b3e7e54670"
                }
              }
            ]
          },
          {
            "id": "2f3d8d67-cd71-408f-bf98-cd4b604fbfaf",
            "name": "[Delete :list]/v1/action",
            "request": {
              "description": {
                "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "v1",
                  "action"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "ql",
                    "value": "{\"id\":{\"in\":{{iamActionIds}}}}"
                  }
                ],
                "variable": []
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e46744a8-d2bb-488c-8f97-729a900939be",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "(()=>{",
                    "    if (!pm.response.responseSize) return null;",
                    "    let jsonData = pm.response.json();",
                    "    if (!jsonData) return null;",
                    "    let iamActionIds = pm.collectionVariables.get(\"iamActionIds\");",
                    "    let list = iamActionIds ? JSON.parse(iamActionIds) : null;",
                    "    if (!Array.isArray(list) || !list.length) return null;",
                    "    let ids = jsonData.data.map(item => item.id);",
                    "    let res = list.filter(item => !ids.includes(item));",
                    "    let values = JSON.stringify(res);",
                    "    pm.collectionVariables.set(\"iamActionIds\", values);",
                    "})()",
                    ""
                  ],
                  "_lastExecutionId": "b6150710-e1b5-49e2-8e40-171ec5037cf0"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "10a4ada1-45fa-4ff4-98b0-a62e50d638b6",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8bf9e0a-0e29-435e-a4f3-5e65b13646eb"
                }
              }
            ]
          },
          {
            "id": "11c748ae-ffb5-48ef-91a1-cfe4eae9a2d1",
            "name": "[clone non-existent id]/v1/action/:id",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "action",
                  "{{eventId}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n \"name\": \"cloned\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5a5b21ec-cb69-4ccc-9eda-40c121f6efee",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"event name was cloned correctly\", function () {\r",
                    "    if (!pm.response.responseSize) return null;\r",
                    "    let jsonData = pm.response.json();\r",
                    "    if (!jsonData) return null;\r",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPostAction\");\r",
                    "    if (!requestBody || requestBody.trim() === \"\") {\r",
                    "        requestBody = null;\r",
                    "    }\r",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;\r",
                    "    let cloneName = jsonData.name;\r",
                    "    let requestName = requestBodyJson ? requestBodyJson.name: null;\r",
                    "    if (requestName) {\r",
                    "        pm.expect(cloneName).to.be.eql(requestName);\r",
                    "    }\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "78b5c2b7-a95d-489c-af7d-688c579cba8d"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "591c9713-7366-481f-bd21-32c517f57f37",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "// Obtener el body del request como un objeto\r",
                    "let requestBodyPost = pm.request.body.raw;\r",
                    "\r",
                    "// Almacenar el body en una variable de entorno (como JSON string)\r",
                    "pm.collectionVariables.set(\"requestBodyPostAction\", requestBodyPost);"
                  ],
                  "_lastExecutionId": "6b68f34b-ee3f-407e-9733-d4277101ea93"
                }
              }
            ]
          },
          {
            "id": "30bfc71c-82f6-4eed-b1ed-08c8f05e6a81",
            "name": "[Create 4]/v1/action",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "action"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "88b9c8ba-7e26-439c-9909-1ab452caccb2",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 201\", function () {\r",
                    "    pm.response.to.have.status(201);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('id');\r",
                    "    let actionId = jsonData.id;\r",
                    "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                    "    pm.expect(actionId).to.not.be.null;\r",
                    "    pm.expect(actionId).to.not.be.undefined;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('name');\r",
                    "    let name = jsonData.name;\r",
                    "    pm.collectionVariables.set(\"nameAction\", name);\r",
                    "    pm.expect(name).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('updated_at');\r",
                    "    let updatedAt = jsonData.updated_at;\r",
                    "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                    "    pm.expect(updatedAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Action created_at is not empty (storaged)\", function () {\r",
                    "    let jsonData = pm.response.json();\r",
                    "    pm.expect(jsonData).to.have.property('created_at');\r",
                    "    let createdAt = jsonData.created_at;\r",
                    "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                    "    pm.expect(createdAt).to.not.be.empty;\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Extract and store ID\", function () {\r",
                    "    let scope = pm.collectionVariables;\r",
                    "    let keyName = \"iamActionIds\";\r",
                    "    let jsonData = pm.response.json();\r",
                    "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                    "    pm.expect(jsonData.id).to.not.be.null;\r",
                    "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                    "    if(jsonData.id != null & jsonData.id != undefined )\r",
                    "    {\r",
                    "    resourceIds.push(jsonData.id);\r",
                    "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                    "    }\r",
                    "    else\r",
                    "    {\r",
                    "        resourceIds = resourceIds;\r",
                    "    }\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "445b5be3-da32-4ad5-af88-b709af36dfd8"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "27f8e72a-a0d9-40c9-90c4-045efc40cb73",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "618394c4-3638-4ff1-b2be-03c8a6b734ff"
                }
              }
            ]
          },
          {
            "id": "c3392703-1253-4ead-8778-d652c7df364f",
            "name": "[Cloned]/v1/action/:id",
            "request": {
              "url": {
                "path": [
                  "v1",
                  "action",
                  "{{eventId}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n  \"name\": \"cloned\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "eb3e5f88-5e42-4a4d-8006-bc7fa54e1395",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"event name was cloned correctly\", function () {\r",
                    "    if (!pm.response.responseSize) return null;\r",
                    "    let jsonData = pm.response.json();\r",
                    "    if (!jsonData) return null;\r",
                    "    let requestBody = pm.collectionVariables.get(\"requestBodyPostAction\");\r",
                    "    if (!requestBody || requestBody.trim() === \"\") {\r",
                    "        requestBody = null;\r",
                    "    }\r",
                    "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;\r",
                    "    let cloneName = jsonData.name;\r",
                    "    let originName = pm.collectionVariables.get(\"name\");\r",
                    "    let requestName = requestBodyJson ? requestBodyJson.name: null;\r",
                    "    if (!requestName) {\r",
                    "        pm.expect(cloneName).to.be.eql(originName);\r",
                    "    } else {\r",
                    "        pm.expect(cloneName).to.be.eql(requestName);\r",
                    "    }\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "4931bf2d-a8b7-45ba-a713-2187931080a9"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba28c886-ed61-47ea-b025-b46a35922a9b",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "// Obtener el body del request como un objeto\r",
                    "let requestBodyPost = pm.request.body.raw;\r",
                    "\r",
                    "// Almacenar el body en una variable de entorno (como JSON string)\r",
                    "pm.collectionVariables.set(\"requestBodyPostAction\", requestBodyPost);"
                  ],
                  "_lastExecutionId": "8ae7a608-7ed4-44b9-84a0-6879579d1b8a"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "auth": {
      "type": "bearer",
      "bearer": [
        {
          "type": "string",
          "value": "{{access_token}}",
          "key": "token"
        }
      ]
    },
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "80e18306-64a6-432a-9c67-92433fd390a9",
          "type": "text/javascript",
          "exec": [
            "let keyName = \"iam_events_ids\";\r",
            "pm.collectionVariables.set(keyName, pm.collectionVariables.get(keyName) || \"[]\");\r",
            "\r",
            "let uri = pm.environment.get('base_url')\r",
            "//console.log(\"111111\" + uri)\r",
            "pm.sendRequest({\r",
            "    url: uri + '/v1/oauth/token',\r",
            "    method: 'POST',\r",
            "    header: {\r",
            "        'Content-Type': 'application/x-www-form-urlencoded'\r",
            "    },\r",
            "    body: {\r",
            "        mode: \"urlencoded\",\r",
            "        urlencoded: [\r",
            "            { key: \"grant_type\", value: \"password\" },\r",
            "            { key: \"username\", value: pm.environment.get('user') },\r",
            "            { key: \"password\", value: pm.environment.get('pass') },\r",
            "            { key: \"scope\", value: \"6\"}\r",
            "        ]\r",
            "    }\r",
            "}, function (err, res) {\r",
            "    //console.log(\">>> ACCESS-TOKEN\");\r",
            "    if (!res?.responseSize) return null;\r",
            "    let jsonData = res.json();\r",
            "    if (!jsonData) return null;\r",
            "    jsonData?.access_token && pm.environment.set(\"access_token\", jsonData.access_token);\r",
            "    /*console.log(\">>> error\", err);\r",
            "    onsole.log(\">>> access_token-v\", pm.collectionVariables.get('access_token'));\r",
            "    onsole.log(\">>> access_token-l\", jsonData?.access_token);*/\r",
            "});"
          ],
          "_lastExecutionId": "340036ed-fbe2-4d01-a4c9-2081ec449ab3"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "dea3729f-e9c3-4b6f-9260-c506a321466a",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "fceb9083-d72c-4d8d-8c43-84a9e3b9daca"
        }
      }
    ],
    "variable": [
      {
        "type": "any",
        "value": "",
        "key": "eventId"
      },
      {
        "type": "any",
        "value": "",
        "key": "name"
      },
      {
        "type": "any",
        "value": "",
        "key": "updatedAt"
      },
      {
        "type": "any",
        "value": "\n{\n  \"name\": \"OnlineTest\",\n  \"description\": \"Bulk action\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 1,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-04-19 06:19:50\",\n  \"group\": \"user\"\n}\n",
        "key": "requestBody"
      },
      {
        "type": "any",
        "value": "",
        "key": "iam_events_ids"
      },
      {
        "type": "any",
        "value": "",
        "key": "createdAt"
      },
      {
        "type": "any",
        "value": "",
        "key": "requestBodyPut"
      },
      {
        "type": "any",
        "value": "",
        "key": "requestBodyPost"
      },
      {
        "type": "any",
        "value": "",
        "key": "status"
      },
      {
        "type": "any",
        "value": "",
        "key": "description"
      },
      {
        "type": "any",
        "value": "",
        "key": "group"
      },
      {
        "type": "any",
        "value": "",
        "key": "requestBodyPutSimple"
      },
      {
        "type": "any",
        "value": "",
        "key": "statusAction"
      },
      {
        "type": "any",
        "value": "",
        "key": "descriptionAction"
      },
      {
        "type": "any",
        "value": "",
        "key": "groupAction"
      },
      {
        "type": "any",
        "value": "",
        "key": "idAction"
      },
      {
        "type": "any",
        "value": "",
        "key": "nameAction"
      },
      {
        "type": "any",
        "value": "",
        "key": "updatedAtAction"
      },
      {
        "type": "any",
        "value": "",
        "key": "createdAtAction"
      },
      {
        "type": "any",
        "value": "",
        "key": "iamActionIds"
      },
      {
        "type": "any",
        "value": "",
        "key": "requestBodyPutSimpleAction"
      },
      {
        "type": "any",
        "value": "",
        "key": "requestBodyPutAction"
      },
      {
        "type": "any",
        "value": "",
        "key": "requestBodyPostAction"
      }
    ],
    "info": {
      "_postman_id": "9dc9b0b9-839c-45ff-a805-d3aee7f37f7c",
      "name": "IAM",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "# 🚀 Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## 🔖 **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## 💪 Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## 💡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2024-08-19T16:13:08.779Z",
      "postman_exported_using": "Postman/11.8.1"
    },
    "id": "2e6c5349-3c40-4124-a86f-105308ffbb5d",
    "name": "IAM",
    "values": [
      {
        "type": "any",
        "value": "https://auth-dev.qa.ewas.aero",
        "key": "base_url"
      },
      {
        "type": "any",
        "value": "amembrides",
        "key": "user"
      },
      {
        "type": "any",
        "value": "Zaqwsx-123456",
        "key": "pass"
      },
      {
        "type": "any",
        "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTM1MDI0NiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMywiZXhwIjoxNzI0NTE2MzEzfQ._0ia0eFeKIGb6OGCgL18EKhKSQwDgsgja3X5hDy_jNo",
        "key": "access_token"
      }
    ]
  },
  "globals": {
    "id": "3bd98918-a1d9-4548-80e3-bf640c17d34a",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 30,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 114,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 30,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 60,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 30,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 120,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 60,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 54,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 300.4166666666666,
      "responseMin": 136,
      "responseMax": 957,
      "responseSd": 164.41241758320916,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724084292261,
      "completed": 1724084313968
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 30,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "88759864-545a-4056-81a6-e0cdde639e29",
          "httpRequestId": "9de873a9-0a39-417a-8e4e-e360056e6944"
        },
        "item": {
          "id": "974c05de-3dc7-45f7-96c0-63a2ff4696a2",
          "name": "[Create]/v1/event",
          "request": {
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b7474e39-859a-4770-9b9e-43ef44eb6ed2",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "(()=>{\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let status = jsonData.status;\r",
                  "    let description = jsonData.description;\r",
                  "    let group = jsonData.group;    \r",
                  "    pm.collectionVariables.set(\"status\", status);\r",
                  "    pm.collectionVariables.set(\"description\", description);\r",
                  "    pm.collectionVariables.set(\"group\", group);\r",
                  "})()\r",
                  "\r",
                  "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let eventId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                  "    pm.expect(eventId).to.not.be.null;\r",
                  "    pm.expect(eventId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"name\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iam_events_ids\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    \r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "2a5c7e50-e6d6-44c0-88a3-5aff642a83f8"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "41bb88b4-1ddf-4513-af9a-ca692467b402",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "fa571151-24f3-4953-909a-1ccf19839df6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTI2NDE2MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5MiwiZXhwIjoxNzI0NTE2MjkyfQ.0NnstyFr5uJtKbWHYEtqDXNaRUnmQUBqLpdwsEUhe48",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cfc67531-8b73-4771-9a33-2113e0ea5551",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTI2NDE2MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5MiwiZXhwIjoxNzI0NTE2MjkyfQ.0NnstyFr5uJtKbWHYEtqDXNaRUnmQUBqLpdwsEUhe48",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e5b26d20-0915-404d-9253-aed0b965767e",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:13 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-28w2VsksqG2VqAx5+UeBD1go1Po\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              51,
              46,
              49,
              51,
              51,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              51,
              46,
              49,
              51,
              51,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              56,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 136,
          "responseSize": 183
        },
        "id": "974c05de-3dc7-45f7-96c0-63a2ff4696a2",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Event ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 30,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "88759864-545a-4056-81a6-e0cdde639e29",
          "httpRequestId": "9de873a9-0a39-417a-8e4e-e360056e6944"
        },
        "item": {
          "id": "974c05de-3dc7-45f7-96c0-63a2ff4696a2",
          "name": "[Create]/v1/event",
          "request": {
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b7474e39-859a-4770-9b9e-43ef44eb6ed2",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "(()=>{\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let status = jsonData.status;\r",
                  "    let description = jsonData.description;\r",
                  "    let group = jsonData.group;    \r",
                  "    pm.collectionVariables.set(\"status\", status);\r",
                  "    pm.collectionVariables.set(\"description\", description);\r",
                  "    pm.collectionVariables.set(\"group\", group);\r",
                  "})()\r",
                  "\r",
                  "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let eventId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                  "    pm.expect(eventId).to.not.be.null;\r",
                  "    pm.expect(eventId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"name\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iam_events_ids\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    \r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "2a5c7e50-e6d6-44c0-88a3-5aff642a83f8"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "41bb88b4-1ddf-4513-af9a-ca692467b402",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "fa571151-24f3-4953-909a-1ccf19839df6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTI2NDE2MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5MiwiZXhwIjoxNzI0NTE2MjkyfQ.0NnstyFr5uJtKbWHYEtqDXNaRUnmQUBqLpdwsEUhe48",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cfc67531-8b73-4771-9a33-2113e0ea5551",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTI2NDE2MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5MiwiZXhwIjoxNzI0NTE2MjkyfQ.0NnstyFr5uJtKbWHYEtqDXNaRUnmQUBqLpdwsEUhe48",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e5b26d20-0915-404d-9253-aed0b965767e",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:13 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-28w2VsksqG2VqAx5+UeBD1go1Po\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              51,
              46,
              49,
              51,
              51,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              51,
              46,
              49,
              51,
              51,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              56,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 136,
          "responseSize": 183
        },
        "id": "974c05de-3dc7-45f7-96c0-63a2ff4696a2",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Event ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c71b4891-30e0-416b-b253-f4f1529ed22b",
          "length": 30,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1798aae5-8e26-4285-8471-31a823045ce0"
        },
        "item": {
          "id": "5b85cdca-6d12-4759-a29a-c5894d9c5c3b",
          "name": "[List]/v1/event",
          "request": {
            "description": {
              "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "03a191ff-7e23-41c8-bd2a-d4c6fcb47ed8",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "_lastExecutionId": "9c90d023-c7fe-4490-bfb0-87bd6fd7007a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "97529557-9b99-409d-b200-f2b6ba9c6484",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "0e9e63d3-d66b-462c-a2c6-9339184a2be8"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTMyNDkyNCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5MywiZXhwIjoxNzI0NTE2MjkzfQ.YWDOL6wDnic8j15rbmIz1KPvhvs7573mWSZFsV2N_K8",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "61e81174-a14a-4f4a-a296-0a0f95921cc4",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTMyNDkyNCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5MywiZXhwIjoxNzI0NTE2MjkzfQ.YWDOL6wDnic8j15rbmIz1KPvhvs7573mWSZFsV2N_K8",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "965cf61d-8931-4d20-baa3-f62bc2aa28ed",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:13 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2202"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"89a-BiV+lsNH1VChjZcG+a1xLlfCCzE\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              115,
              105,
              122,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              52,
              52,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              110,
              85,
              115,
              101,
              114,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              65,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              101,
              100,
              32,
              98,
              121,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              32,
              119,
              105,
              116,
              104,
              32,
              97,
              110,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              115,
              116,
              97,
              116,
              117,
              115,
              44,
              32,
              117,
              115,
              117,
              97,
              108,
              108,
              121,
              32,
              114,
              101,
              102,
              101,
              114,
              115,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              111,
              114,
              32,
              108,
              111,
              103,
              105,
              110,
              32,
              97,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              32,
              98,
              121,
              32,
              100,
              105,
              115,
              97,
              98,
              108,
              101,
              100,
              32,
              111,
              114,
              32,
              98,
              108,
              111,
              99,
              107,
              101,
              100,
              32,
              117,
              115,
              101,
              114,
              115,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              56,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              110,
              65,
              115,
              76,
              111,
              103,
              105,
              110,
              70,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              102,
              97,
              105,
              108,
              115,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              110,
              68,
              101,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              65,
              32,
              110,
              101,
              119,
              32,
              100,
              101,
              118,
              105,
              99,
              101,
              32,
              104,
              97,
              115,
              32,
              98,
              101,
              101,
              110,
              32,
              100,
              101,
              116,
              101,
              99,
              116,
              101,
              100,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              110,
              69,
              110,
              116,
              101,
              114,
              112,
              114,
              105,
              115,
              101,
              70,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              87,
              114,
              111,
              110,
              103,
              32,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              32,
              97,
              115,
              115,
              105,
              103,
              110,
              109,
              101,
              110,
              116,
              32,
              117,
              115,
              117,
              97,
              108,
              108,
              121,
              32,
              97,
              115,
              115,
              111,
              99,
              105,
              97,
              116,
              101,
              100,
              32,
              119,
              105,
              116,
              104,
              32,
              97,
              32,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              32,
              116,
              104,
              97,
              116,
              32,
              100,
              111,
              101,
              115,
              32,
              110,
              111,
              116,
              32,
              98,
              101,
              108,
              111,
              110,
              103,
              32,
              116,
              111,
              32,
              116,
              104,
              101,
              32,
              103,
              114,
              111,
              117,
              112,
              32,
              111,
              102,
              32,
              99,
              111,
              109,
              112,
              97,
              110,
              105,
              101,
              115,
              32,
              97,
              115,
              115,
              105,
              103,
              110,
              101,
              100,
              32,
              116,
              111,
              32,
              116,
              104,
              101,
              32,
              100,
              111,
              109,
              97,
              105,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              98,
              97,
              115,
              105,
              99,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              116,
              121,
              112,
              101,
              32,
              101,
              118,
              101,
              110,
              116,
              32,
              119,
              105,
              116,
              104,
              111,
              117,
              116,
              32,
              104,
              111,
              111,
              107,
              32,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              46,
              32,
              65,
              108,
              108,
              111,
              119,
              115,
              32,
              99,
              104,
              101,
              99,
              107,
              105,
              110,
              103,
              32,
              111,
              102,
              32,
              109,
              117,
              108,
              116,
              105,
              112,
              108,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              116,
              105,
              109,
              101,
              32,
              108,
              101,
              103,
              97,
              99,
              121,
              32,
              111,
              114,
              32,
              98,
              97,
              115,
              105,
              99,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              101,
              100,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              97,
              117,
              116,
              104,
              95,
              114,
              111,
              112,
              99,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              116,
              121,
              112,
              101,
              32,
              101,
              118,
              101,
              110,
              116,
              32,
              119,
              105,
              116,
              104,
              111,
              117,
              116,
              32,
              104,
              111,
              111,
              107,
              32,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              46,
              32,
              65,
              108,
              108,
              111,
              119,
              115,
              32,
              99,
              104,
              101,
              99,
              107,
              105,
              110,
              103,
              32,
              111,
              102,
              32,
              109,
              117,
              108,
              116,
              105,
              112,
              108,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              116,
              105,
              109,
              101,
              32,
              79,
              65,
              117,
              116,
              104,
              32,
              82,
              79,
              80,
              67,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              101,
              100,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              97,
              117,
              116,
              104,
              95,
              99,
              108,
              105,
              101,
              110,
              116,
              95,
              99,
              114,
              101,
              100,
              101,
              110,
              116,
              105,
              97,
              108,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              116,
              121,
              112,
              101,
              32,
              101,
              118,
              101,
              110,
              116,
              32,
              119,
              105,
              116,
              104,
              111,
              117,
              116,
              32,
              104,
              111,
              111,
              107,
              32,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              46,
              32,
              65,
              108,
              108,
              111,
              119,
              115,
              32,
              99,
              104,
              101,
              99,
              107,
              105,
              110,
              103,
              32,
              111,
              102,
              32,
              109,
              117,
              108,
              116,
              105,
              112,
              108,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              116,
              105,
              109,
              101,
              32,
              79,
              65,
              117,
              116,
              104,
              32,
              67,
              108,
              105,
              101,
              110,
              116,
              32,
              67,
              114,
              101,
              100,
              101,
              110,
              116,
              105,
              97,
              108,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              101,
              100,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              97,
              117,
              116,
              104,
              95,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              95,
              99,
              111,
              100,
              101,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              116,
              121,
              112,
              101,
              32,
              101,
              118,
              101,
              110,
              116,
              32,
              119,
              105,
              116,
              104,
              111,
              117,
              116,
              32,
              104,
              111,
              111,
              107,
              32,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              46,
              32,
              65,
              108,
              108,
              111,
              119,
              115,
              32,
              99,
              104,
              101,
              99,
              107,
              105,
              110,
              103,
              32,
              111,
              102,
              32,
              109,
              117,
              108,
              116,
              105,
              112,
              108,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              116,
              105,
              109,
              101,
              32,
              111,
              102,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              98,
              97,
              115,
              101,
              100,
              32,
              111,
              110,
              32,
              116,
              104,
              101,
              32,
              79,
              65,
              117,
              116,
              104,
              32,
              115,
              116,
              97,
              110,
              100,
              97,
              114,
              100,
              32,
              102,
              111,
              114,
              32,
              116,
              104,
              101,
              32,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              67,
              111,
              100,
              101,
              32,
              102,
              108,
              111,
              119,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              97,
              117,
              116,
              104,
              95,
              114,
              101,
              102,
              114,
              101,
              115,
              104,
              95,
              116,
              111,
              107,
              101,
              110,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              116,
              121,
              112,
              101,
              32,
              101,
              118,
              101,
              110,
              116,
              32,
              119,
              105,
              116,
              104,
              111,
              117,
              116,
              32,
              104,
              111,
              111,
              107,
              32,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              46,
              32,
              65,
              108,
              108,
              111,
              119,
              115,
              32,
              121,
              111,
              117,
              32,
              116,
              111,
              32,
              118,
              101,
              114,
              105,
              102,
              121,
              32,
              109,
              117,
              108,
              116,
              105,
              112,
              108,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              119,
              104,
              101,
              110,
              32,
              97,
              32,
              116,
              111,
              107,
              101,
              110,
              32,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              111,
              114,
              32,
              114,
              101,
              102,
              114,
              101,
              115,
              104,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              95,
              115,
              116,
              111,
              114,
              101,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              116,
              121,
              112,
              101,
              32,
              101,
              118,
              101,
              110,
              116,
              32,
              119,
              105,
              116,
              104,
              111,
              117,
              116,
              32,
              104,
              111,
              111,
              107,
              32,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              46,
              32,
              65,
              108,
              108,
              111,
              119,
              115,
              32,
              121,
              111,
              117,
              32,
              116,
              111,
              32,
              99,
              104,
              101,
              99,
              107,
              32,
              109,
              117,
              108,
              116,
              105,
              112,
              108,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              119,
              104,
              101,
              110,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              32,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              111,
              114,
              32,
              99,
              114,
              101,
              97,
              116,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              46,
              32,
              84,
              121,
              112,
              105,
              99,
              97,
              108,
              108,
              121,
              44,
              32,
              116,
              104,
              105,
              115,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              115,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              117,
              115,
              101,
              114,
              45,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              32,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              32,
              97,
              110,
              100,
              32,
              116,
              104,
              101,
              32,
              108,
              105,
              109,
              105,
              116,
              32,
              111,
              102,
              32,
              117,
              115,
              101,
              114,
              115,
              32,
              112,
              101,
              114,
              32,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              32,
              112,
              101,
              114,
              32,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              32,
              97,
              110,
              100,
              32,
              111,
              116,
              104,
              101,
              114,
              32,
              98,
              117,
              115,
              105,
              110,
              101,
              115,
              115,
              32,
              98,
              111,
              117,
              110,
              100,
              97,
              114,
              105,
              101,
              115,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 160,
          "responseSize": 2202
        },
        "id": "5b85cdca-6d12-4759-a29a-c5894d9c5c3b",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c71b4891-30e0-416b-b253-f4f1529ed22b",
          "length": 30,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1798aae5-8e26-4285-8471-31a823045ce0"
        },
        "item": {
          "id": "5b85cdca-6d12-4759-a29a-c5894d9c5c3b",
          "name": "[List]/v1/event",
          "request": {
            "description": {
              "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "03a191ff-7e23-41c8-bd2a-d4c6fcb47ed8",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "_lastExecutionId": "9c90d023-c7fe-4490-bfb0-87bd6fd7007a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "97529557-9b99-409d-b200-f2b6ba9c6484",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "0e9e63d3-d66b-462c-a2c6-9339184a2be8"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTMyNDkyNCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5MywiZXhwIjoxNzI0NTE2MjkzfQ.YWDOL6wDnic8j15rbmIz1KPvhvs7573mWSZFsV2N_K8",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "61e81174-a14a-4f4a-a296-0a0f95921cc4",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTMyNDkyNCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5MywiZXhwIjoxNzI0NTE2MjkzfQ.YWDOL6wDnic8j15rbmIz1KPvhvs7573mWSZFsV2N_K8",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "965cf61d-8931-4d20-baa3-f62bc2aa28ed",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:13 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2202"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"89a-BiV+lsNH1VChjZcG+a1xLlfCCzE\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              49,
              44,
              34,
              115,
              105,
              122,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              52,
              52,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              110,
              85,
              115,
              101,
              114,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              65,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              101,
              100,
              32,
              98,
              121,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              32,
              119,
              105,
              116,
              104,
              32,
              97,
              110,
              32,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              115,
              116,
              97,
              116,
              117,
              115,
              44,
              32,
              117,
              115,
              117,
              97,
              108,
              108,
              121,
              32,
              114,
              101,
              102,
              101,
              114,
              115,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              111,
              114,
              32,
              108,
              111,
              103,
              105,
              110,
              32,
              97,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              32,
              98,
              121,
              32,
              100,
              105,
              115,
              97,
              98,
              108,
              101,
              100,
              32,
              111,
              114,
              32,
              98,
              108,
              111,
              99,
              107,
              101,
              100,
              32,
              117,
              115,
              101,
              114,
              115,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              56,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              110,
              65,
              115,
              76,
              111,
              103,
              105,
              110,
              70,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              102,
              97,
              105,
              108,
              115,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              110,
              68,
              101,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              65,
              32,
              110,
              101,
              119,
              32,
              100,
              101,
              118,
              105,
              99,
              101,
              32,
              104,
              97,
              115,
              32,
              98,
              101,
              101,
              110,
              32,
              100,
              101,
              116,
              101,
              99,
              116,
              101,
              100,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              110,
              69,
              110,
              116,
              101,
              114,
              112,
              114,
              105,
              115,
              101,
              70,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              87,
              114,
              111,
              110,
              103,
              32,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              32,
              97,
              115,
              115,
              105,
              103,
              110,
              109,
              101,
              110,
              116,
              32,
              117,
              115,
              117,
              97,
              108,
              108,
              121,
              32,
              97,
              115,
              115,
              111,
              99,
              105,
              97,
              116,
              101,
              100,
              32,
              119,
              105,
              116,
              104,
              32,
              97,
              32,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              32,
              116,
              104,
              97,
              116,
              32,
              100,
              111,
              101,
              115,
              32,
              110,
              111,
              116,
              32,
              98,
              101,
              108,
              111,
              110,
              103,
              32,
              116,
              111,
              32,
              116,
              104,
              101,
              32,
              103,
              114,
              111,
              117,
              112,
              32,
              111,
              102,
              32,
              99,
              111,
              109,
              112,
              97,
              110,
              105,
              101,
              115,
              32,
              97,
              115,
              115,
              105,
              103,
              110,
              101,
              100,
              32,
              116,
              111,
              32,
              116,
              104,
              101,
              32,
              100,
              111,
              109,
              97,
              105,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              98,
              97,
              115,
              105,
              99,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              116,
              121,
              112,
              101,
              32,
              101,
              118,
              101,
              110,
              116,
              32,
              119,
              105,
              116,
              104,
              111,
              117,
              116,
              32,
              104,
              111,
              111,
              107,
              32,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              46,
              32,
              65,
              108,
              108,
              111,
              119,
              115,
              32,
              99,
              104,
              101,
              99,
              107,
              105,
              110,
              103,
              32,
              111,
              102,
              32,
              109,
              117,
              108,
              116,
              105,
              112,
              108,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              116,
              105,
              109,
              101,
              32,
              108,
              101,
              103,
              97,
              99,
              121,
              32,
              111,
              114,
              32,
              98,
              97,
              115,
              105,
              99,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              101,
              100,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              97,
              117,
              116,
              104,
              95,
              114,
              111,
              112,
              99,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              116,
              121,
              112,
              101,
              32,
              101,
              118,
              101,
              110,
              116,
              32,
              119,
              105,
              116,
              104,
              111,
              117,
              116,
              32,
              104,
              111,
              111,
              107,
              32,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              46,
              32,
              65,
              108,
              108,
              111,
              119,
              115,
              32,
              99,
              104,
              101,
              99,
              107,
              105,
              110,
              103,
              32,
              111,
              102,
              32,
              109,
              117,
              108,
              116,
              105,
              112,
              108,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              116,
              105,
              109,
              101,
              32,
              79,
              65,
              117,
              116,
              104,
              32,
              82,
              79,
              80,
              67,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              101,
              100,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              97,
              117,
              116,
              104,
              95,
              99,
              108,
              105,
              101,
              110,
              116,
              95,
              99,
              114,
              101,
              100,
              101,
              110,
              116,
              105,
              97,
              108,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              116,
              121,
              112,
              101,
              32,
              101,
              118,
              101,
              110,
              116,
              32,
              119,
              105,
              116,
              104,
              111,
              117,
              116,
              32,
              104,
              111,
              111,
              107,
              32,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              46,
              32,
              65,
              108,
              108,
              111,
              119,
              115,
              32,
              99,
              104,
              101,
              99,
              107,
              105,
              110,
              103,
              32,
              111,
              102,
              32,
              109,
              117,
              108,
              116,
              105,
              112,
              108,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              116,
              105,
              109,
              101,
              32,
              79,
              65,
              117,
              116,
              104,
              32,
              67,
              108,
              105,
              101,
              110,
              116,
              32,
              67,
              114,
              101,
              100,
              101,
              110,
              116,
              105,
              97,
              108,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              101,
              100,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              97,
              117,
              116,
              104,
              95,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              95,
              99,
              111,
              100,
              101,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              116,
              121,
              112,
              101,
              32,
              101,
              118,
              101,
              110,
              116,
              32,
              119,
              105,
              116,
              104,
              111,
              117,
              116,
              32,
              104,
              111,
              111,
              107,
              32,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              46,
              32,
              65,
              108,
              108,
              111,
              119,
              115,
              32,
              99,
              104,
              101,
              99,
              107,
              105,
              110,
              103,
              32,
              111,
              102,
              32,
              109,
              117,
              108,
              116,
              105,
              112,
              108,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              116,
              105,
              109,
              101,
              32,
              111,
              102,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              98,
              97,
              115,
              101,
              100,
              32,
              111,
              110,
              32,
              116,
              104,
              101,
              32,
              79,
              65,
              117,
              116,
              104,
              32,
              115,
              116,
              97,
              110,
              100,
              97,
              114,
              100,
              32,
              102,
              111,
              114,
              32,
              116,
              104,
              101,
              32,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              67,
              111,
              100,
              101,
              32,
              102,
              108,
              111,
              119,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              111,
              97,
              117,
              116,
              104,
              95,
              114,
              101,
              102,
              114,
              101,
              115,
              104,
              95,
              116,
              111,
              107,
              101,
              110,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              116,
              121,
              112,
              101,
              32,
              101,
              118,
              101,
              110,
              116,
              32,
              119,
              105,
              116,
              104,
              111,
              117,
              116,
              32,
              104,
              111,
              111,
              107,
              32,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              46,
              32,
              65,
              108,
              108,
              111,
              119,
              115,
              32,
              121,
              111,
              117,
              32,
              116,
              111,
              32,
              118,
              101,
              114,
              105,
              102,
              121,
              32,
              109,
              117,
              108,
              116,
              105,
              112,
              108,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              119,
              104,
              101,
              110,
              32,
              97,
              32,
              116,
              111,
              107,
              101,
              110,
              32,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              111,
              114,
              32,
              114,
              101,
              102,
              114,
              101,
              115,
              104,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              95,
              115,
              116,
              111,
              114,
              101,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              116,
              121,
              112,
              101,
              32,
              101,
              118,
              101,
              110,
              116,
              32,
              119,
              105,
              116,
              104,
              111,
              117,
              116,
              32,
              104,
              111,
              111,
              107,
              32,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              46,
              32,
              65,
              108,
              108,
              111,
              119,
              115,
              32,
              121,
              111,
              117,
              32,
              116,
              111,
              32,
              99,
              104,
              101,
              99,
              107,
              32,
              109,
              117,
              108,
              116,
              105,
              112,
              108,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              119,
              104,
              101,
              110,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              32,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              111,
              114,
              32,
              99,
              114,
              101,
              97,
              116,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              46,
              32,
              84,
              121,
              112,
              105,
              99,
              97,
              108,
              108,
              121,
              44,
              32,
              116,
              104,
              105,
              115,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              115,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              117,
              115,
              101,
              114,
              45,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              32,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              32,
              97,
              110,
              100,
              32,
              116,
              104,
              101,
              32,
              108,
              105,
              109,
              105,
              116,
              32,
              111,
              102,
              32,
              117,
              115,
              101,
              114,
              115,
              32,
              112,
              101,
              114,
              32,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              32,
              112,
              101,
              114,
              32,
              99,
              111,
              109,
              112,
              97,
              110,
              121,
              32,
              97,
              110,
              100,
              32,
              111,
              116,
              104,
              101,
              114,
              32,
              98,
              117,
              115,
              105,
              110,
              101,
              115,
              115,
              32,
              98,
              111,
              117,
              110,
              100,
              97,
              114,
              105,
              101,
              115,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 160,
          "responseSize": 2202
        },
        "id": "5b85cdca-6d12-4759-a29a-c5894d9c5c3b",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1044a421-7662-426d-a110-ed80e2552205",
          "length": 30,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bb9c64c8-4b04-488f-ae05-5231175492b3"
        },
        "item": {
          "id": "5ee0ecb1-2183-42da-bdcc-7fc9fa85b0de",
          "name": "[List :id]/v1/event/:id",
          "request": {
            "description": {
              "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "format",
                  "value": "full"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ba11006c-bafb-476f-821b-ef86dfbccdf6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verifying Name is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('name');",
                  "    let currentName = jsonData.name;",
                  "    pm.expect(currentName).to.be.an('string');",
                  "    pm.expect(currentName.length > 1).eq(true);",
                  "    let expectedName = pm.collectionVariables.get(\"name\");",
                  "    pm.expect(currentName).to.eql(expectedName);",
                  "});",
                  "",
                  "pm.test(\"Verifying Description is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('description');",
                  "    let currentDescription = jsonData.description;",
                  "    let expectedDescription = pm.collectionVariables.get(\"description\");",
                  "    pm.expect(currentDescription).to.eql(expectedDescription);",
                  "});",
                  "",
                  "pm.test(\"Verifying Id is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    let currentID = jsonData.id;",
                  "    pm.expect(currentID).to.not.be.null;",
                  "    pm.expect(currentID).to.not.be.undefined;",
                  "    let expectedId = pm.collectionVariables.get(\"eventId\");",
                  "    pm.expect(currentID).to.eql(expectedId);",
                  "});",
                  "",
                  "pm.test(\"Verifying created_at is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('created_at');",
                  "    let currentCreatedAt = new Date(jsonData.created_at).toISOString().slice(0, 19) + 'Z';",
                  "    let iso8601Regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$/;",
                  "    pm.expect(currentCreatedAt).to.match(iso8601Regex);",
                  "    let expectedCreatedAt = pm.collectionVariables.get(\"createdAt\");",
                  "    expectedCreatedAt = new Date(expectedCreatedAt).toISOString().slice(0, 19) + 'Z';",
                  "    pm.expect(currentCreatedAt).to.eql(expectedCreatedAt);",
                  "});",
                  "",
                  "pm.test(\"Verifying updated_at is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('updated_at');",
                  "    let currentUpdatedAt = new Date(jsonData.updated_at).toISOString().slice(0, 19) + 'Z';",
                  "    let expectedUpdatedAt = pm.collectionVariables.get(\"updatedAt\");",
                  "    expectedUpdatedAt = new Date(expectedUpdatedAt).toISOString().slice(0, 19) + 'Z';",
                  "    pm.expect(currentUpdatedAt).to.eql(expectedUpdatedAt);",
                  "});",
                  "",
                  "pm.test(\"Verifying Status is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    let currentStatus = jsonData.status;",
                  "    let expectedStatus = parseInt(pm.collectionVariables.get(\"status\"));",
                  "    if(currentStatus || currentStatus == 0){",
                  "        pm.expect(currentStatus).to.eql(expectedStatus);",
                  "    }",
                  "    else{        ",
                  "        pm.expect(currentStatus).to.eql(1);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Verifying Group is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('group');",
                  "    let currentGroup = jsonData.group;",
                  "    let expectedGroup = pm.collectionVariables.get(\"group\");",
                  "    if(expectedGroup){",
                  "        pm.expect(currentGroup).to.eql(expectedGroup.toString());",
                  "    }",
                  "});",
                  ""
                ],
                "_lastExecutionId": "53f96a4b-6d60-48a2-a426-e3c55ed2c8af"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "27383397-3cae-4c51-ab4e-d26122b1f432",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  ""
                ],
                "_lastExecutionId": "48064e31-19a8-4fe0-8f0f-f948ff426d40"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "135389"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "format",
                "value": "full"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTM3NDQ0NiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5MywiZXhwIjoxNzI0NTE2MjkzfQ.h4lix_wfxUJ6GQ1bhadB9AdBpjlmtdRn6cZCpXcd2cA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2f92c6a0-9126-484d-a3f2-b16a8b8cd0ae",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTM3NDQ0NiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5MywiZXhwIjoxNzI0NTE2MjkzfQ.h4lix_wfxUJ6GQ1bhadB9AdBpjlmtdRn6cZCpXcd2cA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d8bad6cb-58b8-4acf-9664-fb807a2e1d38",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:14 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-Ky17qDfTQ3JGA0hA0oQ0gdMI9mc\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              56,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              51,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              51,
              46,
              48,
              48,
              48,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 162,
          "responseSize": 183
        },
        "id": "5ee0ecb1-2183-42da-bdcc-7fc9fa85b0de",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verifying Name is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Description is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Id is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying created_at is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying updated_at is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Status is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Group is the created one",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1044a421-7662-426d-a110-ed80e2552205",
          "length": 30,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bb9c64c8-4b04-488f-ae05-5231175492b3"
        },
        "item": {
          "id": "5ee0ecb1-2183-42da-bdcc-7fc9fa85b0de",
          "name": "[List :id]/v1/event/:id",
          "request": {
            "description": {
              "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "format",
                  "value": "full"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ba11006c-bafb-476f-821b-ef86dfbccdf6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verifying Name is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('name');",
                  "    let currentName = jsonData.name;",
                  "    pm.expect(currentName).to.be.an('string');",
                  "    pm.expect(currentName.length > 1).eq(true);",
                  "    let expectedName = pm.collectionVariables.get(\"name\");",
                  "    pm.expect(currentName).to.eql(expectedName);",
                  "});",
                  "",
                  "pm.test(\"Verifying Description is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('description');",
                  "    let currentDescription = jsonData.description;",
                  "    let expectedDescription = pm.collectionVariables.get(\"description\");",
                  "    pm.expect(currentDescription).to.eql(expectedDescription);",
                  "});",
                  "",
                  "pm.test(\"Verifying Id is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    let currentID = jsonData.id;",
                  "    pm.expect(currentID).to.not.be.null;",
                  "    pm.expect(currentID).to.not.be.undefined;",
                  "    let expectedId = pm.collectionVariables.get(\"eventId\");",
                  "    pm.expect(currentID).to.eql(expectedId);",
                  "});",
                  "",
                  "pm.test(\"Verifying created_at is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('created_at');",
                  "    let currentCreatedAt = new Date(jsonData.created_at).toISOString().slice(0, 19) + 'Z';",
                  "    let iso8601Regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$/;",
                  "    pm.expect(currentCreatedAt).to.match(iso8601Regex);",
                  "    let expectedCreatedAt = pm.collectionVariables.get(\"createdAt\");",
                  "    expectedCreatedAt = new Date(expectedCreatedAt).toISOString().slice(0, 19) + 'Z';",
                  "    pm.expect(currentCreatedAt).to.eql(expectedCreatedAt);",
                  "});",
                  "",
                  "pm.test(\"Verifying updated_at is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('updated_at');",
                  "    let currentUpdatedAt = new Date(jsonData.updated_at).toISOString().slice(0, 19) + 'Z';",
                  "    let expectedUpdatedAt = pm.collectionVariables.get(\"updatedAt\");",
                  "    expectedUpdatedAt = new Date(expectedUpdatedAt).toISOString().slice(0, 19) + 'Z';",
                  "    pm.expect(currentUpdatedAt).to.eql(expectedUpdatedAt);",
                  "});",
                  "",
                  "pm.test(\"Verifying Status is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    let currentStatus = jsonData.status;",
                  "    let expectedStatus = parseInt(pm.collectionVariables.get(\"status\"));",
                  "    if(currentStatus || currentStatus == 0){",
                  "        pm.expect(currentStatus).to.eql(expectedStatus);",
                  "    }",
                  "    else{        ",
                  "        pm.expect(currentStatus).to.eql(1);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Verifying Group is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('group');",
                  "    let currentGroup = jsonData.group;",
                  "    let expectedGroup = pm.collectionVariables.get(\"group\");",
                  "    if(expectedGroup){",
                  "        pm.expect(currentGroup).to.eql(expectedGroup.toString());",
                  "    }",
                  "});",
                  ""
                ],
                "_lastExecutionId": "53f96a4b-6d60-48a2-a426-e3c55ed2c8af"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "27383397-3cae-4c51-ab4e-d26122b1f432",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  ""
                ],
                "_lastExecutionId": "48064e31-19a8-4fe0-8f0f-f948ff426d40"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "135389"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "format",
                "value": "full"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTM3NDQ0NiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5MywiZXhwIjoxNzI0NTE2MjkzfQ.h4lix_wfxUJ6GQ1bhadB9AdBpjlmtdRn6cZCpXcd2cA",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2f92c6a0-9126-484d-a3f2-b16a8b8cd0ae",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTM3NDQ0NiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5MywiZXhwIjoxNzI0NTE2MjkzfQ.h4lix_wfxUJ6GQ1bhadB9AdBpjlmtdRn6cZCpXcd2cA",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "d8bad6cb-58b8-4acf-9664-fb807a2e1d38",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:14 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-Ky17qDfTQ3JGA0hA0oQ0gdMI9mc\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              56,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              51,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              51,
              46,
              48,
              48,
              48,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 162,
          "responseSize": 183
        },
        "id": "5ee0ecb1-2183-42da-bdcc-7fc9fa85b0de",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verifying Name is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Description is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Id is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying created_at is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying updated_at is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Status is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Group is the created one",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "73fdd13c-5526-49f4-aa86-644799ba6aee",
          "length": 30,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9dbab404-3152-483d-b960-2092e2869f70"
        },
        "item": {
          "id": "4fb6f3c5-0b27-42e3-a4b0-c59343d84918",
          "name": "[Update :id]/v1/event/:id",
          "request": {
            "description": {
              "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "format",
                  "value": "full"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "\n{\n  \"name\": \"update put:id\",\n  \"description\": \"The authentication process fails\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 1,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-07-25 16:19:52\",\n  \"group\": \"user\"\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4f3f0332-de03-4461-8488-c8abb89ce846",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Successful PUT request\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"updated_at was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newUpdatedAtS = jsonData.updated_at; // 2024-07-25T16:19:52.000Z",
                  "    let newUpdatedAt = new Date(newUpdatedAtS).getTime(); // Convertido a UTC en ms",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let updatedAtS = requestBodyJson?.updated_at;",
                  "    if (updatedAtS) {",
                  "        if (!updatedAtS.endsWith('Z') && updatedAtS.indexOf('T') === -1) {",
                  "            updatedAtS = updatedAtS.replace(' ', 'T') + 'Z'; ",
                  "        }",
                  "        let updatedAt = new Date(updatedAtS).getTime();",
                  "        pm.expect(updatedAt).to.eql(newUpdatedAt);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"created_at was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newCreatedAtS = jsonData.created_at;",
                  "    let newCreatedAt = new Date(newCreatedAtS).getTime();",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let createdAtS = requestBodyJson?.created_at;",
                  "    if (createdAtS) {",
                  "        if (!createdAtS.endsWith('Z') && createdAtS.indexOf('T') === -1) {",
                  "            createdAtS = createdAtS.replace(' ', 'T') + 'Z'; ",
                  "        }",
                  "        let createdAt = new Date(createdAtS).getTime();",
                  "        pm.expect(createdAt).to.eql(newCreatedAt);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Name was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newName = jsonData.name;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestName = requestBodyJson?.name;",
                  "    if(requestName){",
                  "    pm.expect(newName).to.be.eql(requestName);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Description was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newDescription = jsonData.description;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestDescription = requestBodyJson?.description;",
                  "    if(requestDescription){",
                  "    pm.expect(newDescription).to.be.eql(requestDescription);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Group was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newGroup = jsonData.group;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestGroup = requestBodyJson?.group;",
                  "    if(requestGroup){",
                  "    pm.expect(newGroup).to.be.eql(requestGroup);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Status was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newStatus = jsonData.status;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestStatus = requestBodyJson?.status;",
                  "    if(requestStatus){",
                  "    pm.expect(newStatus).to.be.eql(requestStatus);",
                  "    }",
                  "});",
                  ""
                ],
                "_lastExecutionId": "f796f5a5-3f2f-4491-8fe4-a234dfeb757b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2dbd9b18-c663-4dec-b05d-3c6af2bbb38e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPutSimple = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPutSimple\", requestBodyPutSimple);\r",
                  ""
                ],
                "_lastExecutionId": "96dc1ddf-c1f6-4a51-95bf-5afb240c9f2f"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "135389"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "format",
                "value": "full"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTQzMTEwNyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NCwiZXhwIjoxNzI0NTE2Mjk0fQ.tFqC__-Ngu-SbugAIIqNkoSs2Ar6afDI9gIoKuB3Wq0",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2a3621d4-6190-402c-a0e0-8ea5c75f520e",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "3300",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "\n{\n  \"name\": \"update put:id\",\n  \"description\": \"The authentication process fails\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 1,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-07-25 16:19:52\",\n  \"group\": \"user\"\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTQzMTEwNyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NCwiZXhwIjoxNzI0NTE2Mjk0fQ.tFqC__-Ngu-SbugAIIqNkoSs2Ar6afDI9gIoKuB3Wq0",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "64e4501e-9912-4a01-ad25-3256da66e04f",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:15 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2789"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"ae5-xA1H9OVdRH3xFWvhcPZBvVwcb8I\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              34,
              58,
              123,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              66,
              65,
              83,
              73,
              67,
              34,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              34,
              49,
              55,
              48,
              56,
              51,
              52,
              49,
              52,
              50,
              51,
              51,
              50,
              54,
              50,
              51,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              49,
              64,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              123,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              58,
              91,
              51,
              93,
              125,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              115,
              104,
              111,
              114,
              116,
              34,
              58,
              34,
              76,
              79,
              71,
              73,
              78,
              95,
              78,
              79,
              79,
              75,
              34,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              104,
              97,
              115,
              104,
              34,
              58,
              34,
              49,
              56,
              101,
              50,
              51,
              97,
              102,
              52,
              97,
              50,
              55,
              98,
              48,
              101,
              48,
              49,
              56,
              50,
              102,
              101,
              100,
              53,
              99,
              98,
              100,
              55,
              50,
              56,
              54,
              98,
              101,
              49,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              101,
              87,
              65,
              83,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              46,
              54,
              46,
              49,
              45,
              49,
              50,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              51,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              85,
              85,
              85,
              85,
              45,
              65,
              65,
              65,
              65,
              45,
              73,
              73,
              73,
              73,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              105,
              80,
              97,
              100,
              32,
              80,
              114,
              111,
              32,
              50,
              48,
              50,
              51,
              32,
              49,
              48,
              46,
              53,
              105,
              110,
              99,
              104,
              32,
              40,
              105,
              80,
              97,
              100,
              79,
              83,
              32,
              49,
              54,
              46,
              54,
              41,
              34,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              105,
              80,
              97,
              100,
              79,
              83,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              54,
              46,
              54,
              34,
              125,
              125,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              52,
              48,
              48,
              48,
              34,
              44,
              34,
              105,
              112,
              34,
              58,
              34,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              34,
              44,
              34,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              48,
              48,
              48,
              34,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              112,
              34,
              58,
              34,
              58,
              58,
              49,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              34,
              44,
              34,
              105,
              112,
              79,
              114,
              105,
              103,
              105,
              110,
              97,
              108,
              34,
              58,
              34,
              58,
              58,
              49,
              34,
              125,
              125,
              125,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              50,
              45,
              49,
              50,
              84,
              49,
              53,
              58,
              48,
              53,
              58,
              50,
              55,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              50,
              45,
              48,
              54,
              84,
              49,
              55,
              58,
              52,
              48,
              58,
              50,
              52,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              49,
              56,
              55,
              55,
              50,
              49,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              56,
              52,
              56,
              53,
              125,
              125,
              44,
              34,
              115,
              99,
              104,
              101,
              109,
              97,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              114,
              114,
              97,
              121,
              34,
              44,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              93,
              125,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              115,
              104,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              115,
              104,
              111,
              114,
              116,
              34,
              93,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              104,
              97,
              115,
              104,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              44,
              34,
              105,
              100,
              34,
              93,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              93,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              111,
              115,
              34,
              93,
              125,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              93,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              110,
              117,
              108,
              108,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              93,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              112,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              104,
              111,
              115,
              116,
              34,
              44,
              34,
              105,
              112,
              34,
              44,
              34,
              112,
              111,
              114,
              116,
              34,
              93,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              112,
              79,
              114,
              105,
              103,
              105,
              110,
              97,
              108,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              105,
              112,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              105,
              112,
              79,
              114,
              105,
              103,
              105,
              110,
              97,
              108,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              104,
              97,
              115,
              104,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              93,
              125,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              93,
              125,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              56,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              112,
              117,
              116,
              58,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              102,
              97,
              105,
              108,
              115,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              54,
              58,
              49,
              57,
              58,
              53,
              50,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              56,
              84,
              49,
              50,
              58,
              49,
              57,
              58,
              53,
              50,
              46,
              48,
              48,
              48,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 211,
          "responseSize": 2789
        },
        "id": "4fb6f3c5-0b27-42e3-a4b0-c59343d84918",
        "assertions": [
          {
            "assertion": "Successful PUT request",
            "skipped": false
          },
          {
            "assertion": "updated_at was updated correctly",
            "skipped": false
          },
          {
            "assertion": "created_at was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Name was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Description was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Group was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Status was updated correctly",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "73fdd13c-5526-49f4-aa86-644799ba6aee",
          "length": 30,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9dbab404-3152-483d-b960-2092e2869f70"
        },
        "item": {
          "id": "4fb6f3c5-0b27-42e3-a4b0-c59343d84918",
          "name": "[Update :id]/v1/event/:id",
          "request": {
            "description": {
              "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "format",
                  "value": "full"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "\n{\n  \"name\": \"update put:id\",\n  \"description\": \"The authentication process fails\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 1,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-07-25 16:19:52\",\n  \"group\": \"user\"\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4f3f0332-de03-4461-8488-c8abb89ce846",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Successful PUT request\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"updated_at was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newUpdatedAtS = jsonData.updated_at; // 2024-07-25T16:19:52.000Z",
                  "    let newUpdatedAt = new Date(newUpdatedAtS).getTime(); // Convertido a UTC en ms",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let updatedAtS = requestBodyJson?.updated_at;",
                  "    if (updatedAtS) {",
                  "        if (!updatedAtS.endsWith('Z') && updatedAtS.indexOf('T') === -1) {",
                  "            updatedAtS = updatedAtS.replace(' ', 'T') + 'Z'; ",
                  "        }",
                  "        let updatedAt = new Date(updatedAtS).getTime();",
                  "        pm.expect(updatedAt).to.eql(newUpdatedAt);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"created_at was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newCreatedAtS = jsonData.created_at;",
                  "    let newCreatedAt = new Date(newCreatedAtS).getTime();",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let createdAtS = requestBodyJson?.created_at;",
                  "    if (createdAtS) {",
                  "        if (!createdAtS.endsWith('Z') && createdAtS.indexOf('T') === -1) {",
                  "            createdAtS = createdAtS.replace(' ', 'T') + 'Z'; ",
                  "        }",
                  "        let createdAt = new Date(createdAtS).getTime();",
                  "        pm.expect(createdAt).to.eql(newCreatedAt);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Name was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newName = jsonData.name;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestName = requestBodyJson?.name;",
                  "    if(requestName){",
                  "    pm.expect(newName).to.be.eql(requestName);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Description was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newDescription = jsonData.description;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestDescription = requestBodyJson?.description;",
                  "    if(requestDescription){",
                  "    pm.expect(newDescription).to.be.eql(requestDescription);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Group was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newGroup = jsonData.group;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestGroup = requestBodyJson?.group;",
                  "    if(requestGroup){",
                  "    pm.expect(newGroup).to.be.eql(requestGroup);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Status was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newStatus = jsonData.status;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimple\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestStatus = requestBodyJson?.status;",
                  "    if(requestStatus){",
                  "    pm.expect(newStatus).to.be.eql(requestStatus);",
                  "    }",
                  "});",
                  ""
                ],
                "_lastExecutionId": "f796f5a5-3f2f-4491-8fe4-a234dfeb757b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2dbd9b18-c663-4dec-b05d-3c6af2bbb38e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPutSimple = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPutSimple\", requestBodyPutSimple);\r",
                  ""
                ],
                "_lastExecutionId": "96dc1ddf-c1f6-4a51-95bf-5afb240c9f2f"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "135389"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "format",
                "value": "full"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTQzMTEwNyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NCwiZXhwIjoxNzI0NTE2Mjk0fQ.tFqC__-Ngu-SbugAIIqNkoSs2Ar6afDI9gIoKuB3Wq0",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2a3621d4-6190-402c-a0e0-8ea5c75f520e",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "3300",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "\n{\n  \"name\": \"update put:id\",\n  \"description\": \"The authentication process fails\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 1,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-07-25 16:19:52\",\n  \"group\": \"user\"\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTQzMTEwNyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NCwiZXhwIjoxNzI0NTE2Mjk0fQ.tFqC__-Ngu-SbugAIIqNkoSs2Ar6afDI9gIoKuB3Wq0",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "64e4501e-9912-4a01-ad25-3256da66e04f",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:15 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2789"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"ae5-xA1H9OVdRH3xFWvhcPZBvVwcb8I\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              34,
              58,
              123,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              66,
              65,
              83,
              73,
              67,
              34,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              34,
              49,
              55,
              48,
              56,
              51,
              52,
              49,
              52,
              50,
              51,
              51,
              50,
              54,
              50,
              51,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              49,
              64,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              123,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              58,
              91,
              51,
              93,
              125,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              115,
              104,
              111,
              114,
              116,
              34,
              58,
              34,
              76,
              79,
              71,
              73,
              78,
              95,
              78,
              79,
              79,
              75,
              34,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              104,
              97,
              115,
              104,
              34,
              58,
              34,
              49,
              56,
              101,
              50,
              51,
              97,
              102,
              52,
              97,
              50,
              55,
              98,
              48,
              101,
              48,
              49,
              56,
              50,
              102,
              101,
              100,
              53,
              99,
              98,
              100,
              55,
              50,
              56,
              54,
              98,
              101,
              49,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              101,
              87,
              65,
              83,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              46,
              54,
              46,
              49,
              45,
              49,
              50,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              51,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              85,
              85,
              85,
              85,
              45,
              65,
              65,
              65,
              65,
              45,
              73,
              73,
              73,
              73,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              105,
              80,
              97,
              100,
              32,
              80,
              114,
              111,
              32,
              50,
              48,
              50,
              51,
              32,
              49,
              48,
              46,
              53,
              105,
              110,
              99,
              104,
              32,
              40,
              105,
              80,
              97,
              100,
              79,
              83,
              32,
              49,
              54,
              46,
              54,
              41,
              34,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              105,
              80,
              97,
              100,
              79,
              83,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              54,
              46,
              54,
              34,
              125,
              125,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              52,
              48,
              48,
              48,
              34,
              44,
              34,
              105,
              112,
              34,
              58,
              34,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              34,
              44,
              34,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              48,
              48,
              48,
              34,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              112,
              34,
              58,
              34,
              58,
              58,
              49,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              34,
              44,
              34,
              105,
              112,
              79,
              114,
              105,
              103,
              105,
              110,
              97,
              108,
              34,
              58,
              34,
              58,
              58,
              49,
              34,
              125,
              125,
              125,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              50,
              45,
              49,
              50,
              84,
              49,
              53,
              58,
              48,
              53,
              58,
              50,
              55,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              50,
              45,
              48,
              54,
              84,
              49,
              55,
              58,
              52,
              48,
              58,
              50,
              52,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              49,
              56,
              55,
              55,
              50,
              49,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              56,
              52,
              56,
              53,
              125,
              125,
              44,
              34,
              115,
              99,
              104,
              101,
              109,
              97,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              114,
              114,
              97,
              121,
              34,
              44,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              93,
              125,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              115,
              104,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              115,
              104,
              111,
              114,
              116,
              34,
              93,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              104,
              97,
              115,
              104,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              44,
              34,
              105,
              100,
              34,
              93,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              93,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              111,
              115,
              34,
              93,
              125,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              93,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              110,
              117,
              108,
              108,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              93,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              112,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              104,
              111,
              115,
              116,
              34,
              44,
              34,
              105,
              112,
              34,
              44,
              34,
              112,
              111,
              114,
              116,
              34,
              93,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              112,
              79,
              114,
              105,
              103,
              105,
              110,
              97,
              108,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              105,
              112,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              105,
              112,
              79,
              114,
              105,
              103,
              105,
              110,
              97,
              108,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              104,
              97,
              115,
              104,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              93,
              125,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              93,
              125,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              56,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              112,
              117,
              116,
              58,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              102,
              97,
              105,
              108,
              115,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              54,
              58,
              49,
              57,
              58,
              53,
              50,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              56,
              84,
              49,
              50,
              58,
              49,
              57,
              58,
              53,
              50,
              46,
              48,
              48,
              48,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 211,
          "responseSize": 2789
        },
        "id": "4fb6f3c5-0b27-42e3-a4b0-c59343d84918",
        "assertions": [
          {
            "assertion": "Successful PUT request",
            "skipped": false
          },
          {
            "assertion": "updated_at was updated correctly",
            "skipped": false
          },
          {
            "assertion": "created_at was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Name was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Description was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Group was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Status was updated correctly",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8ed5c083-0807-47c5-9507-7eb6a45eceb6",
          "length": 30,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ba650e84-ed9f-4b0b-bb0e-d46af5fd8969"
        },
        "item": {
          "id": "239f6e96-61ce-481b-b026-9372ce8019dd",
          "name": "[DELETE :id]/v1/event/:id",
          "request": {
            "description": {
              "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "84c90394-e048-4244-a1aa-ad54a2cb1c83",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Dynamic delete action for existent target with status code is 200\", function () {",
                  "    if(pm.response.responseSize) {",
                  "        let jsonData = pm.response.json(); ",
                  "        let id = pm.collectionVariables.get(\"eventId\");",
                  "        pm.response.to.have.status(200);",
                  "        ",
                  "        pm.expect(jsonData).to.be.an('object');",
                  "        pm.expect(jsonData.id).eq(id);",
                  "        pm.expect(jsonData.name).to.be.an('string');",
                  "        pm.expect(jsonData.description).to.be.an('string');",
                  "        pm.expect(jsonData.description.length > 1).eq(true);",
                  "        pm.expect(jsonData.description).to.not.be.empty;",
                  "    }else{",
                  "        pm.expect(pm.response.code).to.not.equal(200);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Dynamic delete action for not existent target with status code 404\", function () {",
                  "    if(!pm.response.responseSize) {",
                  "        pm.response.to.have.status(404);",
                  "    }else{",
                  "        pm.expect(pm.response.code).to.not.equal(404);",
                  "    }",
                  "});",
                  "",
                  "if(pm.response.responseSize) {",
                  "    let jsonData = pm.response.json(); ",
                  "    if(jsonData) {",
                  "        let iam_events_ids = pm.collectionVariables.get(\"iam_events_ids\");",
                  "        let list = JSON.parse(iam_events_ids);",
                  "        delete_id = jsonData.id;",
                  "        let res = list.filter(item => item != delete_id);",
                  "        iam_events_ids= JSON.stringify(res);",
                  "        pm.collectionVariables.set(\"iam_events_ids\", iam_events_ids);",
                  "    }",
                  "}",
                  "       ",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "46942b19-841c-4745-8de4-5c408361668b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "135389"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTUzNjQ2OCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NSwiZXhwIjoxNzI0NTE2Mjk1fQ.4ZkqQ5KR9rCfzLXAEC5W2uw6-7ZRkPrbRBblhEpdaYs",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7b57d749-3c10-4cdc-8ef7-9eadb63278e1",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTUzNjQ2OCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NSwiZXhwIjoxNzI0NTE2Mjk1fQ.4ZkqQ5KR9rCfzLXAEC5W2uw6-7ZRkPrbRBblhEpdaYs",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "a16b4aab-4afb-4451-9c8c-6a078a40a0e9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:15 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "111"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"6f-sza7hL9WqoCnWf6dGFvHVX3w/6s\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              56,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              112,
              117,
              116,
              58,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              102,
              97,
              105,
              108,
              115,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125
            ]
          },
          "cookie": [],
          "responseTime": 215,
          "responseSize": 111
        },
        "id": "239f6e96-61ce-481b-b026-9372ce8019dd",
        "assertions": [
          {
            "assertion": "Dynamic delete action for existent target with status code is 200",
            "skipped": false
          },
          {
            "assertion": "Dynamic delete action for not existent target with status code 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8ed5c083-0807-47c5-9507-7eb6a45eceb6",
          "length": 30,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ba650e84-ed9f-4b0b-bb0e-d46af5fd8969"
        },
        "item": {
          "id": "239f6e96-61ce-481b-b026-9372ce8019dd",
          "name": "[DELETE :id]/v1/event/:id",
          "request": {
            "description": {
              "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "84c90394-e048-4244-a1aa-ad54a2cb1c83",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Dynamic delete action for existent target with status code is 200\", function () {",
                  "    if(pm.response.responseSize) {",
                  "        let jsonData = pm.response.json(); ",
                  "        let id = pm.collectionVariables.get(\"eventId\");",
                  "        pm.response.to.have.status(200);",
                  "        ",
                  "        pm.expect(jsonData).to.be.an('object');",
                  "        pm.expect(jsonData.id).eq(id);",
                  "        pm.expect(jsonData.name).to.be.an('string');",
                  "        pm.expect(jsonData.description).to.be.an('string');",
                  "        pm.expect(jsonData.description.length > 1).eq(true);",
                  "        pm.expect(jsonData.description).to.not.be.empty;",
                  "    }else{",
                  "        pm.expect(pm.response.code).to.not.equal(200);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Dynamic delete action for not existent target with status code 404\", function () {",
                  "    if(!pm.response.responseSize) {",
                  "        pm.response.to.have.status(404);",
                  "    }else{",
                  "        pm.expect(pm.response.code).to.not.equal(404);",
                  "    }",
                  "});",
                  "",
                  "if(pm.response.responseSize) {",
                  "    let jsonData = pm.response.json(); ",
                  "    if(jsonData) {",
                  "        let iam_events_ids = pm.collectionVariables.get(\"iam_events_ids\");",
                  "        let list = JSON.parse(iam_events_ids);",
                  "        delete_id = jsonData.id;",
                  "        let res = list.filter(item => item != delete_id);",
                  "        iam_events_ids= JSON.stringify(res);",
                  "        pm.collectionVariables.set(\"iam_events_ids\", iam_events_ids);",
                  "    }",
                  "}",
                  "       ",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "46942b19-841c-4745-8de4-5c408361668b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "135389"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTUzNjQ2OCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NSwiZXhwIjoxNzI0NTE2Mjk1fQ.4ZkqQ5KR9rCfzLXAEC5W2uw6-7ZRkPrbRBblhEpdaYs",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7b57d749-3c10-4cdc-8ef7-9eadb63278e1",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTUzNjQ2OCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NSwiZXhwIjoxNzI0NTE2Mjk1fQ.4ZkqQ5KR9rCfzLXAEC5W2uw6-7ZRkPrbRBblhEpdaYs",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "a16b4aab-4afb-4451-9c8c-6a078a40a0e9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:15 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "111"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"6f-sza7hL9WqoCnWf6dGFvHVX3w/6s\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              56,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              112,
              117,
              116,
              58,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              102,
              97,
              105,
              108,
              115,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125
            ]
          },
          "cookie": [],
          "responseTime": 215,
          "responseSize": 111
        },
        "id": "239f6e96-61ce-481b-b026-9372ce8019dd",
        "assertions": [
          {
            "assertion": "Dynamic delete action for existent target with status code is 200",
            "skipped": false
          },
          {
            "assertion": "Dynamic delete action for not existent target with status code 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4ac86272-3c8a-4aee-897a-c2d435c61e6d",
          "length": 30,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a7b70eef-d359-4563-ac8f-5e226071bc8a"
        },
        "item": {
          "id": "377c0fba-7ddb-44c2-8726-fb775fff3908",
          "name": "[Delete 404]/v1/event/:id",
          "request": {
            "description": {
              "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event",
                "99999"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "533bef27-63c3-4ecf-a566-fbada62c9026",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Static delete action for not existent target with status code 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "_lastExecutionId": "8d1ed8c9-0982-44ea-9eba-413aa0e2102c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "99999"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTYwMzI2OSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NiwiZXhwIjoxNzI0NTE2Mjk2fQ.jb5ENCGGJ_7F3VMJTMFXJuRIhDXWTlcSoJPdHl0GcRY",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6c9784e6-acae-4ccb-9ca7-78e6f506aafd",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTYwMzI2OSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NiwiZXhwIjoxNzI0NTE2Mjk2fQ.jb5ENCGGJ_7F3VMJTMFXJuRIhDXWTlcSoJPdHl0GcRY",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7b476a74-0704-4803-8249-25d30aee3ba9",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:16 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "78"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"4e-yo1YlsVOQ7RZ89tQajJfOc2Tl6o\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              110,
              111,
              116,
              95,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              95,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              116,
              97,
              114,
              103,
              101,
              116,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 158,
          "responseSize": 78
        },
        "id": "377c0fba-7ddb-44c2-8726-fb775fff3908",
        "assertions": [
          {
            "assertion": "Static delete action for not existent target with status code 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4ac86272-3c8a-4aee-897a-c2d435c61e6d",
          "length": 30,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a7b70eef-d359-4563-ac8f-5e226071bc8a"
        },
        "item": {
          "id": "377c0fba-7ddb-44c2-8726-fb775fff3908",
          "name": "[Delete 404]/v1/event/:id",
          "request": {
            "description": {
              "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event",
                "99999"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "533bef27-63c3-4ecf-a566-fbada62c9026",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Static delete action for not existent target with status code 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "_lastExecutionId": "8d1ed8c9-0982-44ea-9eba-413aa0e2102c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "99999"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTYwMzI2OSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NiwiZXhwIjoxNzI0NTE2Mjk2fQ.jb5ENCGGJ_7F3VMJTMFXJuRIhDXWTlcSoJPdHl0GcRY",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6c9784e6-acae-4ccb-9ca7-78e6f506aafd",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTYwMzI2OSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NiwiZXhwIjoxNzI0NTE2Mjk2fQ.jb5ENCGGJ_7F3VMJTMFXJuRIhDXWTlcSoJPdHl0GcRY",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7b476a74-0704-4803-8249-25d30aee3ba9",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:16 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "78"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"4e-yo1YlsVOQ7RZ89tQajJfOc2Tl6o\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              110,
              111,
              116,
              95,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              95,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              116,
              97,
              114,
              103,
              101,
              116,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 158,
          "responseSize": 78
        },
        "id": "377c0fba-7ddb-44c2-8726-fb775fff3908",
        "assertions": [
          {
            "assertion": "Static delete action for not existent target with status code 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d65e9adb-3ac2-491c-8655-285ba000fd34",
          "length": 30,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "66456f53-b35f-4ea6-8e7f-584ade2d3613"
        },
        "item": {
          "id": "05819ff9-d71f-4344-a216-71f93a8391cc",
          "name": "[Get id deleted]/v1/event/:id",
          "request": {
            "description": {
              "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fc0cae36-3e3a-4635-abd1-80c9cfa89fb0",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "9bbd28fe-b594-4e82-aef3-e304bea7bccd"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "6f304919-26a1-4b00-81e5-06138e662ddb",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  ""
                ],
                "_lastExecutionId": "e7a434be-05ea-40bf-a6cd-58393c9ae555"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "135389"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTY1ODMzMiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NiwiZXhwIjoxNzI0NTE2Mjk2fQ.WvjFX84CLNH75IrKCB8Dw9R7ldi4hnIlFeWjeHILNRE",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c2f181ae-9d0e-4dd2-81f6-53feea4032d1",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTY1ODMzMiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NiwiZXhwIjoxNzI0NTE2Mjk2fQ.WvjFX84CLNH75IrKCB8Dw9R7ldi4hnIlFeWjeHILNRE",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "516c4066-07c1-410c-87cb-0a6e192e8f8a",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:17 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "78"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"4e-yo1YlsVOQ7RZ89tQajJfOc2Tl6o\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              110,
              111,
              116,
              95,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              95,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              116,
              97,
              114,
              103,
              101,
              116,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 161,
          "responseSize": 78
        },
        "id": "05819ff9-d71f-4344-a216-71f93a8391cc",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d65e9adb-3ac2-491c-8655-285ba000fd34",
          "length": 30,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "66456f53-b35f-4ea6-8e7f-584ade2d3613"
        },
        "item": {
          "id": "05819ff9-d71f-4344-a216-71f93a8391cc",
          "name": "[Get id deleted]/v1/event/:id",
          "request": {
            "description": {
              "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fc0cae36-3e3a-4635-abd1-80c9cfa89fb0",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "9bbd28fe-b594-4e82-aef3-e304bea7bccd"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "6f304919-26a1-4b00-81e5-06138e662ddb",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  ""
                ],
                "_lastExecutionId": "e7a434be-05ea-40bf-a6cd-58393c9ae555"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "135389"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTY1ODMzMiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NiwiZXhwIjoxNzI0NTE2Mjk2fQ.WvjFX84CLNH75IrKCB8Dw9R7ldi4hnIlFeWjeHILNRE",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c2f181ae-9d0e-4dd2-81f6-53feea4032d1",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTY1ODMzMiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NiwiZXhwIjoxNzI0NTE2Mjk2fQ.WvjFX84CLNH75IrKCB8Dw9R7ldi4hnIlFeWjeHILNRE",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "516c4066-07c1-410c-87cb-0a6e192e8f8a",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:17 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "78"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"4e-yo1YlsVOQ7RZ89tQajJfOc2Tl6o\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              110,
              111,
              116,
              95,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              95,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              116,
              97,
              114,
              103,
              101,
              116,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 161,
          "responseSize": 78
        },
        "id": "05819ff9-d71f-4344-a216-71f93a8391cc",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "893b3e1c-970e-41f9-852f-d571aa7d77fe",
          "length": 30,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8b950e7f-baff-4cf6-9852-b02c00fc51b1"
        },
        "item": {
          "id": "4fcfb597-b402-4f62-b8bf-50108ee3a2a5",
          "name": "[Create 1]/v1/event",
          "request": {
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test1\",\r\n  \"description\": \"Test1\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8eb247cb-3d41-4ae7-89b9-aa9b324ed210",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let eventId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                  "    //console.log(\"eventId: \"+ eventId);\r",
                  "    pm.expect(eventId).to.not.be.null;\r",
                  "    pm.expect(eventId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"name\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iam_events_ids\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "46c5320e-968e-4695-bb55-9f3c4f14bbe3"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "f50eae99-414c-48d3-b17b-a0c459b6b1d9",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "4a629083-99ed-4d51-ac4b-a3b727d37a04"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTcxODU1NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NywiZXhwIjoxNzI0NTE2Mjk3fQ.dk3l96kPzcyUTRjAJON306GQ-KLO8JlqmJIOi-n9QuQ",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1f0375e2-1c07-4d85-a07d-be583a9ac84d",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "118",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test1\",\r\n  \"description\": \"Test1\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTcxODU1NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NywiZXhwIjoxNzI0NTE2Mjk3fQ.dk3l96kPzcyUTRjAJON306GQ-KLO8JlqmJIOi-n9QuQ",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "0614dc00-2b8f-4cae-b064-8b4a50871048",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:17 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "182"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b6-PH+Gcx2cnNirbDv5z96u4NbK2XE\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              55,
              46,
              55,
              50,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              55,
              46,
              55,
              50,
              56,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              49,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 177,
          "responseSize": 182
        },
        "id": "4fcfb597-b402-4f62-b8bf-50108ee3a2a5",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Event ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "893b3e1c-970e-41f9-852f-d571aa7d77fe",
          "length": 30,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8b950e7f-baff-4cf6-9852-b02c00fc51b1"
        },
        "item": {
          "id": "4fcfb597-b402-4f62-b8bf-50108ee3a2a5",
          "name": "[Create 1]/v1/event",
          "request": {
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test1\",\r\n  \"description\": \"Test1\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8eb247cb-3d41-4ae7-89b9-aa9b324ed210",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let eventId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                  "    //console.log(\"eventId: \"+ eventId);\r",
                  "    pm.expect(eventId).to.not.be.null;\r",
                  "    pm.expect(eventId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"name\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iam_events_ids\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "46c5320e-968e-4695-bb55-9f3c4f14bbe3"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "f50eae99-414c-48d3-b17b-a0c459b6b1d9",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "4a629083-99ed-4d51-ac4b-a3b727d37a04"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTcxODU1NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NywiZXhwIjoxNzI0NTE2Mjk3fQ.dk3l96kPzcyUTRjAJON306GQ-KLO8JlqmJIOi-n9QuQ",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1f0375e2-1c07-4d85-a07d-be583a9ac84d",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "118",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test1\",\r\n  \"description\": \"Test1\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTcxODU1NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NywiZXhwIjoxNzI0NTE2Mjk3fQ.dk3l96kPzcyUTRjAJON306GQ-KLO8JlqmJIOi-n9QuQ",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "0614dc00-2b8f-4cae-b064-8b4a50871048",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:17 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "182"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b6-PH+Gcx2cnNirbDv5z96u4NbK2XE\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              55,
              46,
              55,
              50,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              55,
              46,
              55,
              50,
              56,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              49,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 177,
          "responseSize": 182
        },
        "id": "4fcfb597-b402-4f62-b8bf-50108ee3a2a5",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Event ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "284ccd16-fe26-4f72-bca2-8a2daeeb08fd",
          "length": 30,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "868cca18-2cc0-47a6-96d2-9302ad8f98d1"
        },
        "item": {
          "id": "50c8ab0b-e912-42b3-b3b5-7cb971b9cecf",
          "name": "[Create 2]/v1/event",
          "request": {
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d70def8-fa83-431c-b4aa-f542e80ab8c7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let eventId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                  "    //console.log(\"eventId: \"+ eventId);\r",
                  "    pm.expect(eventId).to.not.be.null;\r",
                  "    pm.expect(eventId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"name\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iam_events_ids\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "3e01e23c-bc01-4b4a-8389-00403c7a7097"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "3f1c0598-959b-407a-a1ee-3ee307e1b82b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "3dc293cf-29b9-49c8-9f23-0dd71c39d06b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTc4NzU3MCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NywiZXhwIjoxNzI0NTE2Mjk3fQ.S9jiLh5FqzDRy1iNPjqCBXuadrQsNvnFfNvkFmvHlQw",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0993a222-2949-48d8-96c0-11e37b248fb4",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTc4NzU3MCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NywiZXhwIjoxNzI0NTE2Mjk3fQ.S9jiLh5FqzDRy1iNPjqCBXuadrQsNvnFfNvkFmvHlQw",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "239f0433-b38a-409f-ad0b-a99f995b3d8b",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:18 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-MgcK199IRk7RxzOfo34HtiqvbAY\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              56,
              46,
              50,
              55,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              56,
              46,
              50,
              55,
              56,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 181,
          "responseSize": 183
        },
        "id": "50c8ab0b-e912-42b3-b3b5-7cb971b9cecf",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Event ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "284ccd16-fe26-4f72-bca2-8a2daeeb08fd",
          "length": 30,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "868cca18-2cc0-47a6-96d2-9302ad8f98d1"
        },
        "item": {
          "id": "50c8ab0b-e912-42b3-b3b5-7cb971b9cecf",
          "name": "[Create 2]/v1/event",
          "request": {
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d70def8-fa83-431c-b4aa-f542e80ab8c7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let eventId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                  "    //console.log(\"eventId: \"+ eventId);\r",
                  "    pm.expect(eventId).to.not.be.null;\r",
                  "    pm.expect(eventId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"name\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iam_events_ids\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "3e01e23c-bc01-4b4a-8389-00403c7a7097"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "3f1c0598-959b-407a-a1ee-3ee307e1b82b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "3dc293cf-29b9-49c8-9f23-0dd71c39d06b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTc4NzU3MCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NywiZXhwIjoxNzI0NTE2Mjk3fQ.S9jiLh5FqzDRy1iNPjqCBXuadrQsNvnFfNvkFmvHlQw",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0993a222-2949-48d8-96c0-11e37b248fb4",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTc4NzU3MCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5NywiZXhwIjoxNzI0NTE2Mjk3fQ.S9jiLh5FqzDRy1iNPjqCBXuadrQsNvnFfNvkFmvHlQw",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "239f0433-b38a-409f-ad0b-a99f995b3d8b",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:18 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-MgcK199IRk7RxzOfo34HtiqvbAY\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              56,
              46,
              50,
              55,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              56,
              46,
              50,
              55,
              56,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 181,
          "responseSize": 183
        },
        "id": "50c8ab0b-e912-42b3-b3b5-7cb971b9cecf",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Event ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8d140663-5294-483b-bf1c-b7b4788ffc03",
          "length": 30,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "27122d90-c54a-4ea4-9b89-ac547be59e4c"
        },
        "item": {
          "id": "09799d8e-ff6e-4fc1-a2ab-08063112865a",
          "name": "[Create 3]/v1/event",
          "request": {
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ae9c6fc5-808b-4e6e-90c2-e2bd9416b832",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let eventId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                  "    //console.log(\"eventId: \"+ eventId);\r",
                  "    pm.expect(eventId).to.not.be.null;\r",
                  "    pm.expect(eventId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"name\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iam_events_ids\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "6d793d0f-eb08-4587-b025-d8d9f7fc2b36"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ff767143-195b-42f1-a74d-c15c30a5cf19",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "9e7a0e09-9dee-4267-bde9-528c1da03a6e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTg0MDQzNCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5OCwiZXhwIjoxNzI0NTE2Mjk4fQ.tys--_WUeG_qnQ35rDzejd76S4N-j1XyPjao9rwD5ys",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "88113ec9-003b-47b2-9cba-39eaf9547bd2",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTg0MDQzNCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5OCwiZXhwIjoxNzI0NTE2Mjk4fQ.tys--_WUeG_qnQ35rDzejd76S4N-j1XyPjao9rwD5ys",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "13191801-2c59-48f0-af2b-56e7d4b5bbb6",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:19 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-2+Ed1YrXr3pSnvkM7RQihKKt7oA\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              56,
              46,
              57,
              53,
              52,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              56,
              46,
              57,
              53,
              52,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 316,
          "responseSize": 183
        },
        "id": "09799d8e-ff6e-4fc1-a2ab-08063112865a",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Event ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8d140663-5294-483b-bf1c-b7b4788ffc03",
          "length": 30,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "27122d90-c54a-4ea4-9b89-ac547be59e4c"
        },
        "item": {
          "id": "09799d8e-ff6e-4fc1-a2ab-08063112865a",
          "name": "[Create 3]/v1/event",
          "request": {
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ae9c6fc5-808b-4e6e-90c2-e2bd9416b832",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let eventId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                  "    //console.log(\"eventId: \"+ eventId);\r",
                  "    pm.expect(eventId).to.not.be.null;\r",
                  "    pm.expect(eventId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"name\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iam_events_ids\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "6d793d0f-eb08-4587-b025-d8d9f7fc2b36"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ff767143-195b-42f1-a74d-c15c30a5cf19",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "9e7a0e09-9dee-4267-bde9-528c1da03a6e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTg0MDQzNCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5OCwiZXhwIjoxNzI0NTE2Mjk4fQ.tys--_WUeG_qnQ35rDzejd76S4N-j1XyPjao9rwD5ys",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "88113ec9-003b-47b2-9cba-39eaf9547bd2",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTg0MDQzNCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5OCwiZXhwIjoxNzI0NTE2Mjk4fQ.tys--_WUeG_qnQ35rDzejd76S4N-j1XyPjao9rwD5ys",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "13191801-2c59-48f0-af2b-56e7d4b5bbb6",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:19 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-2+Ed1YrXr3pSnvkM7RQihKKt7oA\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              56,
              46,
              57,
              53,
              52,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              49,
              56,
              46,
              57,
              53,
              52,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 316,
          "responseSize": 183
        },
        "id": "09799d8e-ff6e-4fc1-a2ab-08063112865a",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Event ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "34e57a8d-dc05-4477-bd65-4ee05f7237ce",
          "length": 30,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "172e2e0b-b2c0-48e2-931c-08cc556ae3a4"
        },
        "item": {
          "id": "61665e84-8d43-4429-8f60-445a5159b8f1",
          "name": "[Update :list]/v1/event",
          "request": {
            "description": {
              "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "ql",
                  "value": "{\"id\":{\"in\":{{iam_events_ids}}}}"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "\n{\n  \"name\": \"OnlineTest\",\n  \"description\": \"Bulk action\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 3,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-04-19 06:19:50\",\n  \"group\": \"guess\"\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "da639eee-be63-4fa1-8096-28253f349dcf",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verifying that the names has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPut\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseName = jsonData.data.map(item => item.name);",
                  "    let requestName = requestBodyJson.name",
                  "    let allNamesMatch = responseName.every(name => name === requestName);",
                  "    pm.expect(allNamesMatch).to.be.true;  ",
                  "});",
                  "",
                  "pm.test(\"Verifying that the description has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPut\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseDescription = jsonData.data.map(item => item.description);",
                  "    let requestDescription = requestBodyJson.description",
                  "    let allDescriptionsMatch = responseDescription.every(description => description === requestDescription);",
                  "    pm.expect(allDescriptionsMatch).to.be.true;  ",
                  "});",
                  "",
                  "pm.test(\"Verifying that the Status has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPut\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseStatus = jsonData.data.map(item => item.status);",
                  "    let requestStatus = requestBodyJson.status",
                  "    let allStatusMatch = responseStatus.every(status => status === requestStatus);",
                  "    pm.expect(allStatusMatch).to.be.true;  ",
                  "});",
                  "",
                  "pm.test(\"Verifying that the Group has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPut\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseGroup = jsonData.data.map(item => item.group);",
                  "    let requestGroup = requestBodyJson.group",
                  "    let allStatusMatch = responseGroup.every(group => group === requestGroup);",
                  "    pm.expect(allStatusMatch).to.be.true;  ",
                  "});",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "   ",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "6f3abcd4-6df0-4a1c-b8b1-4d59259075c9"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "df09a970-dce9-4fa6-839b-82354082d187",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPut = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPut\", requestBodyPut);\r",
                  "\r",
                  "\r",
                  "/*let uri = pm.collectionVariables.get('base_url')\r",
                  "pm.sendRequest({\r",
                  "    url: uri + '/v1/event',\r",
                  "    method: 'POST',\r",
                  "    header: {\r",
                  "        'Content-Type': 'application/x-www-form-urlencoded'\r",
                  "    },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            \"name\": \"test3\",\r",
                  "            \"description\": \"Test3\",\r",
                  "            \"payload\": { \"name\":\"test\"},\r",
                  "            \"status\": 1,\r",
                  "            \"group\": \"user\"\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    console.log(\">>> CREATE_\");\r",
                  "    if (!res?.responseSize) return null;\r",
                  "    let jsonData = res.json();\r",
                  "    if (!jsonData) return null;\r",
                  "    jsonData?.id && pm.collectionVariables.set(\"eventId\", jsonData.id);\r",
                  "});*/\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9641b317-ea75-4aaf-b6b4-8a0210e572a2"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "ql",
                "value": "{%22id%22:{%22in%22:[135390,135391,135392]}}"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTkyMzE1MCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5OSwiZXhwIjoxNzI0NTE2Mjk5fQ.vyldy-5EBRITb6BdcMzjIIoNW4kpsvJwHrFDiTY8s6M",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3180e55b-4ded-4954-ba70-516f5d4c6187",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "3277",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "\n{\n  \"name\": \"OnlineTest\",\n  \"description\": \"Bulk action\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 3,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-04-19 06:19:50\",\n  \"group\": \"guess\"\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTkyMzE1MCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5OSwiZXhwIjoxNzI0NTE2Mjk5fQ.vyldy-5EBRITb6BdcMzjIIoNW4kpsvJwHrFDiTY8s6M",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "da7bb49b-1a8e-4e15-b4c5-5d982e7588b5",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:20 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "287"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"11f-Xonnd2EO25KHPveKntS3ESuJzxo\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              51,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 302,
          "responseSize": 287
        },
        "id": "61665e84-8d43-4429-8f60-445a5159b8f1",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verifying that the names has been updated",
            "skipped": false
          },
          {
            "assertion": "Verifying that the description has been updated",
            "skipped": false
          },
          {
            "assertion": "Verifying that the Status has been updated",
            "skipped": false
          },
          {
            "assertion": "Verifying that the Group has been updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "34e57a8d-dc05-4477-bd65-4ee05f7237ce",
          "length": 30,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "172e2e0b-b2c0-48e2-931c-08cc556ae3a4"
        },
        "item": {
          "id": "61665e84-8d43-4429-8f60-445a5159b8f1",
          "name": "[Update :list]/v1/event",
          "request": {
            "description": {
              "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "ql",
                  "value": "{\"id\":{\"in\":{{iam_events_ids}}}}"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "\n{\n  \"name\": \"OnlineTest\",\n  \"description\": \"Bulk action\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 3,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-04-19 06:19:50\",\n  \"group\": \"guess\"\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "da639eee-be63-4fa1-8096-28253f349dcf",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verifying that the names has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPut\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseName = jsonData.data.map(item => item.name);",
                  "    let requestName = requestBodyJson.name",
                  "    let allNamesMatch = responseName.every(name => name === requestName);",
                  "    pm.expect(allNamesMatch).to.be.true;  ",
                  "});",
                  "",
                  "pm.test(\"Verifying that the description has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPut\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseDescription = jsonData.data.map(item => item.description);",
                  "    let requestDescription = requestBodyJson.description",
                  "    let allDescriptionsMatch = responseDescription.every(description => description === requestDescription);",
                  "    pm.expect(allDescriptionsMatch).to.be.true;  ",
                  "});",
                  "",
                  "pm.test(\"Verifying that the Status has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPut\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseStatus = jsonData.data.map(item => item.status);",
                  "    let requestStatus = requestBodyJson.status",
                  "    let allStatusMatch = responseStatus.every(status => status === requestStatus);",
                  "    pm.expect(allStatusMatch).to.be.true;  ",
                  "});",
                  "",
                  "pm.test(\"Verifying that the Group has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPut\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseGroup = jsonData.data.map(item => item.group);",
                  "    let requestGroup = requestBodyJson.group",
                  "    let allStatusMatch = responseGroup.every(group => group === requestGroup);",
                  "    pm.expect(allStatusMatch).to.be.true;  ",
                  "});",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "   ",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "6f3abcd4-6df0-4a1c-b8b1-4d59259075c9"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "df09a970-dce9-4fa6-839b-82354082d187",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPut = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPut\", requestBodyPut);\r",
                  "\r",
                  "\r",
                  "/*let uri = pm.collectionVariables.get('base_url')\r",
                  "pm.sendRequest({\r",
                  "    url: uri + '/v1/event',\r",
                  "    method: 'POST',\r",
                  "    header: {\r",
                  "        'Content-Type': 'application/x-www-form-urlencoded'\r",
                  "    },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            \"name\": \"test3\",\r",
                  "            \"description\": \"Test3\",\r",
                  "            \"payload\": { \"name\":\"test\"},\r",
                  "            \"status\": 1,\r",
                  "            \"group\": \"user\"\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    console.log(\">>> CREATE_\");\r",
                  "    if (!res?.responseSize) return null;\r",
                  "    let jsonData = res.json();\r",
                  "    if (!jsonData) return null;\r",
                  "    jsonData?.id && pm.collectionVariables.set(\"eventId\", jsonData.id);\r",
                  "});*/\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9641b317-ea75-4aaf-b6b4-8a0210e572a2"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "ql",
                "value": "{%22id%22:{%22in%22:[135390,135391,135392]}}"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTkyMzE1MCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5OSwiZXhwIjoxNzI0NTE2Mjk5fQ.vyldy-5EBRITb6BdcMzjIIoNW4kpsvJwHrFDiTY8s6M",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3180e55b-4ded-4954-ba70-516f5d4c6187",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "3277",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "\n{\n  \"name\": \"OnlineTest\",\n  \"description\": \"Bulk action\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 3,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-04-19 06:19:50\",\n  \"group\": \"guess\"\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQyOTkyMzE1MCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDI5OSwiZXhwIjoxNzI0NTE2Mjk5fQ.vyldy-5EBRITb6BdcMzjIIoNW4kpsvJwHrFDiTY8s6M",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "da7bb49b-1a8e-4e15-b4c5-5d982e7588b5",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:20 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "287"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"11f-Xonnd2EO25KHPveKntS3ESuJzxo\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              51,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 302,
          "responseSize": 287
        },
        "id": "61665e84-8d43-4429-8f60-445a5159b8f1",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verifying that the names has been updated",
            "skipped": false
          },
          {
            "assertion": "Verifying that the description has been updated",
            "skipped": false
          },
          {
            "assertion": "Verifying that the Status has been updated",
            "skipped": false
          },
          {
            "assertion": "Verifying that the Group has been updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "808a9a4b-cab3-4f5b-b3b8-2e0cf544aacb",
          "length": 30,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "29ff8d11-6b3f-401a-8a9c-f616a8dec456"
        },
        "item": {
          "id": "d7077136-6666-4568-9fc4-6ff541ffa7ed",
          "name": "[Delete :list]/v1/event",
          "request": {
            "description": {
              "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "ql",
                  "value": "{\"id\":{\"in\":{{iam_events_ids}}}}"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5c23b3a3-b9c0-49c1-ab06-54ef15520eda",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "(()=>{",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let iam_events_ids = pm.collectionVariables.get(\"iam_events_ids\");",
                  "    let list = iam_events_ids ? JSON.parse(iam_events_ids) : null;",
                  "    if (!Array.isArray(list) || !list.length) return null;",
                  "    let ids = jsonData.data.map(item => item.id);",
                  "    let res = list.filter(item => !ids.includes(item));",
                  "    let values = JSON.stringify(res);",
                  "    pm.collectionVariables.set(\"iam_events_ids\", values);",
                  "})()",
                  ""
                ],
                "_lastExecutionId": "521d581e-8e42-4056-97dd-ddd057c7979b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "9c1a7ea8-29be-4db4-94d6-58ce28a81baa",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "758ef54c-301c-4eff-a9ec-5f3398e38567"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "ql",
                "value": "{%22id%22:{%22in%22:[135390,135391,135392]}}"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDA0MTYxMyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMCwiZXhwIjoxNzI0NTE2MzAwfQ.T3L5UmujpvhnHxx_cOTwKxqAX-F9mNDqPvTNs1LpAoI",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b5c40ad9-a6ce-4cf1-8b49-4cdc59d685c6",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDA0MTYxMyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMCwiZXhwIjoxNzI0NTE2MzAwfQ.T3L5UmujpvhnHxx_cOTwKxqAX-F9mNDqPvTNs1LpAoI",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "b60cdde2-5487-45ce-a949-1b810b7bbb46",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:21 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "287"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"11f-Xonnd2EO25KHPveKntS3ESuJzxo\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              51,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 431,
          "responseSize": 287
        },
        "id": "d7077136-6666-4568-9fc4-6ff541ffa7ed",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "808a9a4b-cab3-4f5b-b3b8-2e0cf544aacb",
          "length": 30,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "29ff8d11-6b3f-401a-8a9c-f616a8dec456"
        },
        "item": {
          "id": "d7077136-6666-4568-9fc4-6ff541ffa7ed",
          "name": "[Delete :list]/v1/event",
          "request": {
            "description": {
              "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "ql",
                  "value": "{\"id\":{\"in\":{{iam_events_ids}}}}"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5c23b3a3-b9c0-49c1-ab06-54ef15520eda",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "(()=>{",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let iam_events_ids = pm.collectionVariables.get(\"iam_events_ids\");",
                  "    let list = iam_events_ids ? JSON.parse(iam_events_ids) : null;",
                  "    if (!Array.isArray(list) || !list.length) return null;",
                  "    let ids = jsonData.data.map(item => item.id);",
                  "    let res = list.filter(item => !ids.includes(item));",
                  "    let values = JSON.stringify(res);",
                  "    pm.collectionVariables.set(\"iam_events_ids\", values);",
                  "})()",
                  ""
                ],
                "_lastExecutionId": "521d581e-8e42-4056-97dd-ddd057c7979b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "9c1a7ea8-29be-4db4-94d6-58ce28a81baa",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "758ef54c-301c-4eff-a9ec-5f3398e38567"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "ql",
                "value": "{%22id%22:{%22in%22:[135390,135391,135392]}}"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDA0MTYxMyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMCwiZXhwIjoxNzI0NTE2MzAwfQ.T3L5UmujpvhnHxx_cOTwKxqAX-F9mNDqPvTNs1LpAoI",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b5c40ad9-a6ce-4cf1-8b49-4cdc59d685c6",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDA0MTYxMyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMCwiZXhwIjoxNzI0NTE2MzAwfQ.T3L5UmujpvhnHxx_cOTwKxqAX-F9mNDqPvTNs1LpAoI",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "b60cdde2-5487-45ce-a949-1b810b7bbb46",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:21 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "287"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"11f-Xonnd2EO25KHPveKntS3ESuJzxo\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              51,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 431,
          "responseSize": 287
        },
        "id": "d7077136-6666-4568-9fc4-6ff541ffa7ed",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "dc760743-7203-4f90-907f-2161d10de9b5",
          "length": 30,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3f7c24d2-ec15-456f-802f-f8ee73b9cabf"
        },
        "item": {
          "id": "d76fa67c-b1f8-4136-a351-3d1cc16250ac",
          "name": "[clone non-existent id]/v1/event/:id",
          "request": {
            "url": {
              "path": [
                "v1",
                "event",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"name\": \"cloned\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9e52211b-d8bb-4ba6-be0d-4a0769fc088d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"event name was cloned correctly\", function () {\r",
                  "    if (!pm.response.responseSize) return null;\r",
                  "    let jsonData = pm.response.json();\r",
                  "    if (!jsonData) return null;\r",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPost\");\r",
                  "    if (!requestBody || requestBody.trim() === \"\") {\r",
                  "        requestBody = null;\r",
                  "    }\r",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;\r",
                  "    let cloneName = jsonData.name;\r",
                  "    let requestName = requestBodyJson ? requestBodyJson.name: null;\r",
                  "    if (requestName) {\r",
                  "        pm.expect(cloneName).to.be.eql(requestName);\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "6b3bb0eb-f5bf-4bcb-a0f4-ddbdd6268677"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "a40a516d-5aaf-4492-bd31-782bc5a5a860",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPost = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPost\", requestBodyPost);"
                ],
                "_lastExecutionId": "9555e266-5fa0-4283-b288-b83ca567366b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "135392"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDE0Njk1OSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMSwiZXhwIjoxNzI0NTE2MzAxfQ.Jqy0YFI1gVyXXxW78Im8RT9pIZP60kjMaaoS9ym04T8",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c9950fa5-d695-4311-943b-171df96e2108",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "23",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n \"name\": \"cloned\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDE0Njk1OSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMSwiZXhwIjoxNzI0NTE2MzAxfQ.Jqy0YFI1gVyXXxW78Im8RT9pIZP60kjMaaoS9ym04T8",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "5097b2cb-ff65-4455-8941-0682b6974323",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:22 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "120"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"78-vECpWuLXafRJ749hbS308oJBklo\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              50,
              46,
              50,
              53,
              52,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              50,
              46,
              50,
              53,
              52,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 436,
          "responseSize": 120
        },
        "id": "d76fa67c-b1f8-4136-a351-3d1cc16250ac",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "event name was cloned correctly",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "dc760743-7203-4f90-907f-2161d10de9b5",
          "length": 30,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3f7c24d2-ec15-456f-802f-f8ee73b9cabf"
        },
        "item": {
          "id": "d76fa67c-b1f8-4136-a351-3d1cc16250ac",
          "name": "[clone non-existent id]/v1/event/:id",
          "request": {
            "url": {
              "path": [
                "v1",
                "event",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"name\": \"cloned\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9e52211b-d8bb-4ba6-be0d-4a0769fc088d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"event name was cloned correctly\", function () {\r",
                  "    if (!pm.response.responseSize) return null;\r",
                  "    let jsonData = pm.response.json();\r",
                  "    if (!jsonData) return null;\r",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPost\");\r",
                  "    if (!requestBody || requestBody.trim() === \"\") {\r",
                  "        requestBody = null;\r",
                  "    }\r",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;\r",
                  "    let cloneName = jsonData.name;\r",
                  "    let requestName = requestBodyJson ? requestBodyJson.name: null;\r",
                  "    if (requestName) {\r",
                  "        pm.expect(cloneName).to.be.eql(requestName);\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "6b3bb0eb-f5bf-4bcb-a0f4-ddbdd6268677"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "a40a516d-5aaf-4492-bd31-782bc5a5a860",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPost = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPost\", requestBodyPost);"
                ],
                "_lastExecutionId": "9555e266-5fa0-4283-b288-b83ca567366b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "135392"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDE0Njk1OSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMSwiZXhwIjoxNzI0NTE2MzAxfQ.Jqy0YFI1gVyXXxW78Im8RT9pIZP60kjMaaoS9ym04T8",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c9950fa5-d695-4311-943b-171df96e2108",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "23",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n \"name\": \"cloned\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDE0Njk1OSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMSwiZXhwIjoxNzI0NTE2MzAxfQ.Jqy0YFI1gVyXXxW78Im8RT9pIZP60kjMaaoS9ym04T8",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "5097b2cb-ff65-4455-8941-0682b6974323",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:22 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "120"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"78-vECpWuLXafRJ749hbS308oJBklo\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              50,
              46,
              50,
              53,
              52,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              50,
              46,
              50,
              53,
              52,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 436,
          "responseSize": 120
        },
        "id": "d76fa67c-b1f8-4136-a351-3d1cc16250ac",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "event name was cloned correctly",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1053ffa7-b12d-4d70-9812-3b23c7db7ffd",
          "length": 30,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c1d6c227-f9b6-4a18-b91c-6aaba6565456"
        },
        "item": {
          "id": "3b461a94-881d-44d6-bbab-d99519b36697",
          "name": "[Create 4]/v1/event",
          "request": {
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d1353011-d2d3-4598-953c-68e157ba959c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let eventId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                  "    //console.log(\"eventId: \"+ eventId);\r",
                  "    pm.expect(eventId).to.not.be.null;\r",
                  "    pm.expect(eventId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"name\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iam_events_ids\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    \r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "ae13f096-ee19-4140-8ecf-7a4c3870549b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "c5115db0-e8c9-4bcf-a3d0-d898d3fa1d58",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "125b6b79-7467-4138-ac3c-8a9f2418d180"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDI1MTUyMiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMiwiZXhwIjoxNzI0NTE2MzAyfQ.iQPhPNE79UoOzAy87GyOeIB72x5duv9jpcGPWqZzqG4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b1866162-834e-4f06-bb93-3b3c58403bc4",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDI1MTUyMiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMiwiZXhwIjoxNzI0NTE2MzAyfQ.iQPhPNE79UoOzAy87GyOeIB72x5duv9jpcGPWqZzqG4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "b5501aeb-0870-494a-b793-5f9acda1ce5f",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:23 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-xZXY0A8uJPhKsuHDQynF0kJrzb8\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              51,
              46,
              49,
              53,
              52,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              51,
              46,
              49,
              53,
              52,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 204,
          "responseSize": 183
        },
        "id": "3b461a94-881d-44d6-bbab-d99519b36697",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Event ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1053ffa7-b12d-4d70-9812-3b23c7db7ffd",
          "length": 30,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c1d6c227-f9b6-4a18-b91c-6aaba6565456"
        },
        "item": {
          "id": "3b461a94-881d-44d6-bbab-d99519b36697",
          "name": "[Create 4]/v1/event",
          "request": {
            "url": {
              "path": [
                "v1",
                "event"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d1353011-d2d3-4598-953c-68e157ba959c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let eventId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"eventId\", eventId);\r",
                  "    //console.log(\"eventId: \"+ eventId);\r",
                  "    pm.expect(eventId).to.not.be.null;\r",
                  "    pm.expect(eventId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"name\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAt\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAt\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iam_events_ids\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    \r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "ae13f096-ee19-4140-8ecf-7a4c3870549b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "c5115db0-e8c9-4bcf-a3d0-d898d3fa1d58",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "125b6b79-7467-4138-ac3c-8a9f2418d180"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDI1MTUyMiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMiwiZXhwIjoxNzI0NTE2MzAyfQ.iQPhPNE79UoOzAy87GyOeIB72x5duv9jpcGPWqZzqG4",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b1866162-834e-4f06-bb93-3b3c58403bc4",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDI1MTUyMiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMiwiZXhwIjoxNzI0NTE2MzAyfQ.iQPhPNE79UoOzAy87GyOeIB72x5duv9jpcGPWqZzqG4",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "b5501aeb-0870-494a-b793-5f9acda1ce5f",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:23 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-xZXY0A8uJPhKsuHDQynF0kJrzb8\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              51,
              46,
              49,
              53,
              52,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              51,
              46,
              49,
              53,
              52,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 204,
          "responseSize": 183
        },
        "id": "3b461a94-881d-44d6-bbab-d99519b36697",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Event ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "19119420-d226-466c-93c8-13ae8001b791",
          "length": 30,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b7357482-b2af-417e-8f28-f3cec35f0a1a"
        },
        "item": {
          "id": "0af47a85-bb6a-4e77-9b45-7d251c1f0160",
          "name": "[Cloned]/v1/event/:id",
          "request": {
            "url": {
              "path": [
                "v1",
                "event",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"cloned\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "118c62c6-48a9-482a-87d2-164be184025e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"event name was cloned correctly\", function () {\r",
                  "    if (!pm.response.responseSize) return null;\r",
                  "    let jsonData = pm.response.json();\r",
                  "    if (!jsonData) return null;\r",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPost\");\r",
                  "    if (!requestBody || requestBody.trim() === \"\") {\r",
                  "        requestBody = null;\r",
                  "    }\r",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;\r",
                  "    let cloneName = jsonData.name;\r",
                  "    let originName = pm.collectionVariables.get(\"name\");\r",
                  "    let requestName = requestBodyJson ? requestBodyJson.name: null;\r",
                  "    if (!requestName) {\r",
                  "        pm.expect(cloneName).to.be.eql(originName);\r",
                  "    } else {\r",
                  "        pm.expect(cloneName).to.be.eql(requestName);\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "5a58d484-aef8-4d2e-9ecd-5f87aa9879a0"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "e7664ccc-fad0-4ff9-b486-66cd2589a65b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPost = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPost\", requestBodyPost);"
                ],
                "_lastExecutionId": "a5e98e20-6527-487e-90de-d180dacf20dd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "135394"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDMzNTg5OSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMywiZXhwIjoxNzI0NTE2MzAzfQ.W4HYwy2OhUzerGkorJ9UBITKu_dtB4dvr8VX_4HutHw",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a028a68a-8a38-4112-b2f4-c8466bd97645",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "24",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"cloned\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDMzNTg5OSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMywiZXhwIjoxNzI0NTE2MzAzfQ.W4HYwy2OhUzerGkorJ9UBITKu_dtB4dvr8VX_4HutHw",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "5db08b47-678d-47b4-ad44-0d4ceece0f31",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:23 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-CeGvlT9/Xa/4W7Gxu+llamSEckE\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              51,
              46,
              56,
              49,
              57,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              51,
              46,
              56,
              49,
              57,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125
            ]
          },
          "cookie": [],
          "responseTime": 224,
          "responseSize": 183
        },
        "id": "0af47a85-bb6a-4e77-9b45-7d251c1f0160",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "event name was cloned correctly",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "19119420-d226-466c-93c8-13ae8001b791",
          "length": 30,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b7357482-b2af-417e-8f28-f3cec35f0a1a"
        },
        "item": {
          "id": "0af47a85-bb6a-4e77-9b45-7d251c1f0160",
          "name": "[Cloned]/v1/event/:id",
          "request": {
            "url": {
              "path": [
                "v1",
                "event",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"cloned\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "118c62c6-48a9-482a-87d2-164be184025e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"event name was cloned correctly\", function () {\r",
                  "    if (!pm.response.responseSize) return null;\r",
                  "    let jsonData = pm.response.json();\r",
                  "    if (!jsonData) return null;\r",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPost\");\r",
                  "    if (!requestBody || requestBody.trim() === \"\") {\r",
                  "        requestBody = null;\r",
                  "    }\r",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;\r",
                  "    let cloneName = jsonData.name;\r",
                  "    let originName = pm.collectionVariables.get(\"name\");\r",
                  "    let requestName = requestBodyJson ? requestBodyJson.name: null;\r",
                  "    if (!requestName) {\r",
                  "        pm.expect(cloneName).to.be.eql(originName);\r",
                  "    } else {\r",
                  "        pm.expect(cloneName).to.be.eql(requestName);\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "5a58d484-aef8-4d2e-9ecd-5f87aa9879a0"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "e7664ccc-fad0-4ff9-b486-66cd2589a65b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPost = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPost\", requestBodyPost);"
                ],
                "_lastExecutionId": "a5e98e20-6527-487e-90de-d180dacf20dd"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "event",
              "135394"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDMzNTg5OSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMywiZXhwIjoxNzI0NTE2MzAzfQ.W4HYwy2OhUzerGkorJ9UBITKu_dtB4dvr8VX_4HutHw",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a028a68a-8a38-4112-b2f4-c8466bd97645",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "24",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"cloned\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDMzNTg5OSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwMywiZXhwIjoxNzI0NTE2MzAzfQ.W4HYwy2OhUzerGkorJ9UBITKu_dtB4dvr8VX_4HutHw",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "5db08b47-678d-47b4-ad44-0d4ceece0f31",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:23 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-CeGvlT9/Xa/4W7Gxu+llamSEckE\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              51,
              46,
              56,
              49,
              57,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              51,
              46,
              56,
              49,
              57,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              53,
              51,
              57,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125
            ]
          },
          "cookie": [],
          "responseTime": 224,
          "responseSize": 183
        },
        "id": "0af47a85-bb6a-4e77-9b45-7d251c1f0160",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "event name was cloned correctly",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1c7ff804-b65f-4fe6-94fa-4962f3c5acc2",
          "length": 30,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fba04631-346d-4b8f-b362-a8b9b7bc39ab"
        },
        "item": {
          "id": "a0b1b1f9-edaa-4142-9ea0-e4ac0b8fad23",
          "name": "[Create]/v1/action",
          "request": {
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"action.user:lock\",\r\n  \"description\": \"The process of blocking users involves temporarily or permanently disabling a user's account in a system. It is used to protect the security of a system against potential threats or security breaches, taking measures to prevent unauthorized access or malicious activities. Some possible reasons that would justify this block for security reasons include: Unauthorized access attempts, Violation of security policie, Malicious activity, Termination of employment or relationship with the organization, etc.\",\r\n  \"payload\": \"{\\\"example\\\":{\\\"date\\\":1713180784894,\\\"enterpriseId\\\":1,\\\"failure\\\":{\\\"count\\\":8,\\\"ko_last\\\":\\\"2024-04-15T11:33:04.000Z\\\",\\\"ko_start\\\":\\\"2024-04-15T11:32:58.000Z\\\",\\\"user_id\\\":134905,\\\"ko_diff\\\":0},\\\"fingerprint\\\":{\\\"components\\\":{\\\"useragent\\\":{\\\"browser\\\":{},\\\"device\\\":{\\\"family\\\":\\\"Other\\\",\\\"version\\\":\\\"0\\\",\\\"id\\\":\\\"UUIDE49283ED-12EA-D64D-6DDE-DDC26B30F948_ANTONIO.MEMBRIDES\\\",\\\"description\\\":\\\"Chrome - 110.0.0.0 / Windows - windows-10\\\"},\\\"os\\\":{},\\\"product\\\":{\\\"version\\\":\\\"2.0\\\"}},\\\"geoip\\\":{},\\\"server\\\":{},\\\"client\\\":{}}},\\\"flow\\\":\\\"171318078476991\\\",\\\"method\\\":\\\"BASIC\\\",\\\"products\\\":[4],\\\"userId\\\":134905,\\\"userStatus\\\":1,\\\"username\\\":\\\"tony@sita.aero\\\"},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"date\\\":{\\\"type\\\":\\\"integer\\\"},\\\"enterpriseId\\\":{\\\"type\\\":\\\"integer\\\"},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}}},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"browser\\\":{\\\"type\\\":\\\"object\\\"},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"family\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"os\\\":{\\\"type\\\":\\\"object\\\"},\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"version\\\":{\\\"type\\\":\\\"string\\\"}}}}},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\"},\\\"server\\\":{\\\"type\\\":\\\"object\\\"},\\\"client\\\":{\\\"type\\\":\\\"object\\\"}}}}},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]},\\\"userId\\\":{\\\"type\\\":\\\"integer\\\"},\\\"userStatus\\\":{\\\"type\\\":\\\"integer\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"}}}}\",\r\n  \"status\": 1,\r\n  \"group\": \"user\",\r\n  \"created_at\": \"2024-04-18 12:19:52\",\r\n  \"updated_at\": \"2024-04-19 06:19:50\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8574be0b-df06-455d-97ac-dc9eee5f6748",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "(()=>{\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let status = jsonData.status;\r",
                  "    let description = jsonData.description;\r",
                  "    let group = jsonData.group; \r",
                  "    pm.collectionVariables.set(\"statusAction\", status);     \r",
                  "    pm.collectionVariables.set(\"descriptionAction\", description);\r",
                  "    pm.collectionVariables.set(\"groupAction\", group);\r",
                  "})()\r",
                  "\r",
                  "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let actionId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                  "    pm.expect(actionId).to.not.be.null;\r",
                  "    pm.expect(actionId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"nameAction\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iamActionIds\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "000958d0-319b-4a65-8453-32e369c51c64"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDQwMzM3MiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNCwiZXhwIjoxNzI0NTE2MzA0fQ.CZpTS85_krv1O6uEXhw53VcAcEG0XSWqxh5nbVbhCQg",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fc815d72-983c-44b4-b5c6-8d01be0069c1",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "2540",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"action.user:lock\",\r\n  \"description\": \"The process of blocking users involves temporarily or permanently disabling a user's account in a system. It is used to protect the security of a system against potential threats or security breaches, taking measures to prevent unauthorized access or malicious activities. Some possible reasons that would justify this block for security reasons include: Unauthorized access attempts, Violation of security policie, Malicious activity, Termination of employment or relationship with the organization, etc.\",\r\n  \"payload\": \"{\\\"example\\\":{\\\"date\\\":1713180784894,\\\"enterpriseId\\\":1,\\\"failure\\\":{\\\"count\\\":8,\\\"ko_last\\\":\\\"2024-04-15T11:33:04.000Z\\\",\\\"ko_start\\\":\\\"2024-04-15T11:32:58.000Z\\\",\\\"user_id\\\":134905,\\\"ko_diff\\\":0},\\\"fingerprint\\\":{\\\"components\\\":{\\\"useragent\\\":{\\\"browser\\\":{},\\\"device\\\":{\\\"family\\\":\\\"Other\\\",\\\"version\\\":\\\"0\\\",\\\"id\\\":\\\"UUIDE49283ED-12EA-D64D-6DDE-DDC26B30F948_ANTONIO.MEMBRIDES\\\",\\\"description\\\":\\\"Chrome - 110.0.0.0 / Windows - windows-10\\\"},\\\"os\\\":{},\\\"product\\\":{\\\"version\\\":\\\"2.0\\\"}},\\\"geoip\\\":{},\\\"server\\\":{},\\\"client\\\":{}}},\\\"flow\\\":\\\"171318078476991\\\",\\\"method\\\":\\\"BASIC\\\",\\\"products\\\":[4],\\\"userId\\\":134905,\\\"userStatus\\\":1,\\\"username\\\":\\\"tony@sita.aero\\\"},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"date\\\":{\\\"type\\\":\\\"integer\\\"},\\\"enterpriseId\\\":{\\\"type\\\":\\\"integer\\\"},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}}},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"browser\\\":{\\\"type\\\":\\\"object\\\"},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"family\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"os\\\":{\\\"type\\\":\\\"object\\\"},\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"version\\\":{\\\"type\\\":\\\"string\\\"}}}}},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\"},\\\"server\\\":{\\\"type\\\":\\\"object\\\"},\\\"client\\\":{\\\"type\\\":\\\"object\\\"}}}}},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]},\\\"userId\\\":{\\\"type\\\":\\\"integer\\\"},\\\"userStatus\\\":{\\\"type\\\":\\\"integer\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"}}}}\",\r\n  \"status\": 1,\r\n  \"group\": \"user\",\r\n  \"created_at\": \"2024-04-18 12:19:52\",\r\n  \"updated_at\": \"2024-04-19 06:19:50\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDQwMzM3MiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNCwiZXhwIjoxNzI0NTE2MzA0fQ.CZpTS85_krv1O6uEXhw53VcAcEG0XSWqxh5nbVbhCQg",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c24a423b-4f89-4edc-b55c-dac9fd60a3bf",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:24 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2243"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"8c3-+Tpl4jOwLPwsMsmKF0f+JfKNego\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              49,
              55,
              49,
              51,
              49,
              56,
              48,
              55,
              56,
              52,
              56,
              57,
              52,
              44,
              34,
              101,
              110,
              116,
              101,
              114,
              112,
              114,
              105,
              115,
              101,
              73,
              100,
              34,
              58,
              49,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              56,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              53,
              84,
              49,
              49,
              58,
              51,
              51,
              58,
              48,
              52,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              53,
              84,
              49,
              49,
              58,
              51,
              50,
              58,
              53,
              56,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              48,
              53,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              48,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              98,
              114,
              111,
              119,
              115,
              101,
              114,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              102,
              97,
              109,
              105,
              108,
              121,
              34,
              58,
              34,
              79,
              116,
              104,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              48,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              85,
              85,
              73,
              68,
              69,
              52,
              57,
              50,
              56,
              51,
              69,
              68,
              45,
              49,
              50,
              69,
              65,
              45,
              68,
              54,
              52,
              68,
              45,
              54,
              68,
              68,
              69,
              45,
              68,
              68,
              67,
              50,
              54,
              66,
              51,
              48,
              70,
              57,
              52,
              56,
              95,
              65,
              78,
              84,
              79,
              78,
              73,
              79,
              46,
              77,
              69,
              77,
              66,
              82,
              73,
              68,
              69,
              83,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              104,
              114,
              111,
              109,
              101,
              32,
              45,
              32,
              49,
              49,
              48,
              46,
              48,
              46,
              48,
              46,
              48,
              32,
              47,
              32,
              87,
              105,
              110,
              100,
              111,
              119,
              115,
              32,
              45,
              32,
              119,
              105,
              110,
              100,
              111,
              119,
              115,
              45,
              49,
              48,
              34,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              50,
              46,
              48,
              34,
              125,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              125,
              125,
              125,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              34,
              49,
              55,
              49,
              51,
              49,
              56,
              48,
              55,
              56,
              52,
              55,
              54,
              57,
              57,
              49,
              34,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              66,
              65,
              83,
              73,
              67,
              34,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              91,
              52,
              93,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              48,
              53,
              44,
              34,
              117,
              115,
              101,
              114,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              111,
              110,
              121,
              64,
              115,
              105,
              116,
              97,
              46,
              97,
              101,
              114,
              111,
              34,
              125,
              44,
              34,
              115,
              99,
              104,
              101,
              109,
              97,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              101,
              110,
              116,
              101,
              114,
              112,
              114,
              105,
              115,
              101,
              73,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              125,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              98,
              114,
              111,
              119,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              102,
              97,
              109,
              105,
              108,
              121,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              125,
              125,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              125,
              125,
              125,
              125,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              114,
              114,
              97,
              121,
              34,
              44,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              93,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              125,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              117,
              115,
              101,
              114,
              58,
              108,
              111,
              99,
              107,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              98,
              108,
              111,
              99,
              107,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              114,
              115,
              32,
              105,
              110,
              118,
              111,
              108,
              118,
              101,
              115,
              32,
              116,
              101,
              109,
              112,
              111,
              114,
              97,
              114,
              105,
              108,
              121,
              32,
              111,
              114,
              32,
              112,
              101,
              114,
              109,
              97,
              110,
              101,
              110,
              116,
              108,
              121,
              32,
              100,
              105,
              115,
              97,
              98,
              108,
              105,
              110,
              103,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              39,
              115,
              32,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              32,
              105,
              110,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              46,
              32,
              73,
              116,
              32,
              105,
              115,
              32,
              117,
              115,
              101,
              100,
              32,
              116,
              111,
              32,
              112,
              114,
              111,
              116,
              101,
              99,
              116,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              97,
              103,
              97,
              105,
              110,
              115,
              116,
              32,
              112,
              111,
              116,
              101,
              110,
              116,
              105,
              97,
              108,
              32,
              116,
              104,
              114,
              101,
              97,
              116,
              115,
              32,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              98,
              114,
              101,
              97,
              99,
              104,
              101,
              115,
              44,
              32,
              116,
              97,
              107,
              105,
              110,
              103,
              32,
              109,
              101,
              97,
              115,
              117,
              114,
              101,
              115,
              32,
              116,
              111,
              32,
              112,
              114,
              101,
              118,
              101,
              110,
              116,
              32,
              117,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              111,
              114,
              32,
              109,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              105,
              101,
              115,
              46,
              32,
              83,
              111,
              109,
              101,
              32,
              112,
              111,
              115,
              115,
              105,
              98,
              108,
              101,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              119,
              111,
              117,
              108,
              100,
              32,
              106,
              117,
              115,
              116,
              105,
              102,
              121,
              32,
              116,
              104,
              105,
              115,
              32,
              98,
              108,
              111,
              99,
              107,
              32,
              102,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              105,
              110,
              99,
              108,
              117,
              100,
              101,
              58,
              32,
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              97,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              44,
              32,
              86,
              105,
              111,
              108,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              44,
              32,
              77,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              44,
              32,
              84,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              101,
              109,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              32,
              111,
              114,
              32,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              32,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              116,
              99,
              46,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              56,
              84,
              49,
              50,
              58,
              49,
              57,
              58,
              53,
              50,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              57,
              84,
              48,
              54,
              58,
              49,
              57,
              58,
              53,
              48,
              46,
              48,
              48,
              48,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 175,
          "responseSize": 2243
        },
        "id": "a0b1b1f9-edaa-4142-9ea0-e4ac0b8fad23",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Action ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1c7ff804-b65f-4fe6-94fa-4962f3c5acc2",
          "length": 30,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fba04631-346d-4b8f-b362-a8b9b7bc39ab"
        },
        "item": {
          "id": "a0b1b1f9-edaa-4142-9ea0-e4ac0b8fad23",
          "name": "[Create]/v1/action",
          "request": {
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"action.user:lock\",\r\n  \"description\": \"The process of blocking users involves temporarily or permanently disabling a user's account in a system. It is used to protect the security of a system against potential threats or security breaches, taking measures to prevent unauthorized access or malicious activities. Some possible reasons that would justify this block for security reasons include: Unauthorized access attempts, Violation of security policie, Malicious activity, Termination of employment or relationship with the organization, etc.\",\r\n  \"payload\": \"{\\\"example\\\":{\\\"date\\\":1713180784894,\\\"enterpriseId\\\":1,\\\"failure\\\":{\\\"count\\\":8,\\\"ko_last\\\":\\\"2024-04-15T11:33:04.000Z\\\",\\\"ko_start\\\":\\\"2024-04-15T11:32:58.000Z\\\",\\\"user_id\\\":134905,\\\"ko_diff\\\":0},\\\"fingerprint\\\":{\\\"components\\\":{\\\"useragent\\\":{\\\"browser\\\":{},\\\"device\\\":{\\\"family\\\":\\\"Other\\\",\\\"version\\\":\\\"0\\\",\\\"id\\\":\\\"UUIDE49283ED-12EA-D64D-6DDE-DDC26B30F948_ANTONIO.MEMBRIDES\\\",\\\"description\\\":\\\"Chrome - 110.0.0.0 / Windows - windows-10\\\"},\\\"os\\\":{},\\\"product\\\":{\\\"version\\\":\\\"2.0\\\"}},\\\"geoip\\\":{},\\\"server\\\":{},\\\"client\\\":{}}},\\\"flow\\\":\\\"171318078476991\\\",\\\"method\\\":\\\"BASIC\\\",\\\"products\\\":[4],\\\"userId\\\":134905,\\\"userStatus\\\":1,\\\"username\\\":\\\"tony@sita.aero\\\"},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"date\\\":{\\\"type\\\":\\\"integer\\\"},\\\"enterpriseId\\\":{\\\"type\\\":\\\"integer\\\"},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}}},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"browser\\\":{\\\"type\\\":\\\"object\\\"},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"family\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"os\\\":{\\\"type\\\":\\\"object\\\"},\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"version\\\":{\\\"type\\\":\\\"string\\\"}}}}},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\"},\\\"server\\\":{\\\"type\\\":\\\"object\\\"},\\\"client\\\":{\\\"type\\\":\\\"object\\\"}}}}},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]},\\\"userId\\\":{\\\"type\\\":\\\"integer\\\"},\\\"userStatus\\\":{\\\"type\\\":\\\"integer\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"}}}}\",\r\n  \"status\": 1,\r\n  \"group\": \"user\",\r\n  \"created_at\": \"2024-04-18 12:19:52\",\r\n  \"updated_at\": \"2024-04-19 06:19:50\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8574be0b-df06-455d-97ac-dc9eee5f6748",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "(()=>{\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let status = jsonData.status;\r",
                  "    let description = jsonData.description;\r",
                  "    let group = jsonData.group; \r",
                  "    pm.collectionVariables.set(\"statusAction\", status);     \r",
                  "    pm.collectionVariables.set(\"descriptionAction\", description);\r",
                  "    pm.collectionVariables.set(\"groupAction\", group);\r",
                  "})()\r",
                  "\r",
                  "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let actionId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                  "    pm.expect(actionId).to.not.be.null;\r",
                  "    pm.expect(actionId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"nameAction\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Event created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iamActionIds\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "000958d0-319b-4a65-8453-32e369c51c64"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDQwMzM3MiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNCwiZXhwIjoxNzI0NTE2MzA0fQ.CZpTS85_krv1O6uEXhw53VcAcEG0XSWqxh5nbVbhCQg",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fc815d72-983c-44b4-b5c6-8d01be0069c1",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "2540",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"action.user:lock\",\r\n  \"description\": \"The process of blocking users involves temporarily or permanently disabling a user's account in a system. It is used to protect the security of a system against potential threats or security breaches, taking measures to prevent unauthorized access or malicious activities. Some possible reasons that would justify this block for security reasons include: Unauthorized access attempts, Violation of security policie, Malicious activity, Termination of employment or relationship with the organization, etc.\",\r\n  \"payload\": \"{\\\"example\\\":{\\\"date\\\":1713180784894,\\\"enterpriseId\\\":1,\\\"failure\\\":{\\\"count\\\":8,\\\"ko_last\\\":\\\"2024-04-15T11:33:04.000Z\\\",\\\"ko_start\\\":\\\"2024-04-15T11:32:58.000Z\\\",\\\"user_id\\\":134905,\\\"ko_diff\\\":0},\\\"fingerprint\\\":{\\\"components\\\":{\\\"useragent\\\":{\\\"browser\\\":{},\\\"device\\\":{\\\"family\\\":\\\"Other\\\",\\\"version\\\":\\\"0\\\",\\\"id\\\":\\\"UUIDE49283ED-12EA-D64D-6DDE-DDC26B30F948_ANTONIO.MEMBRIDES\\\",\\\"description\\\":\\\"Chrome - 110.0.0.0 / Windows - windows-10\\\"},\\\"os\\\":{},\\\"product\\\":{\\\"version\\\":\\\"2.0\\\"}},\\\"geoip\\\":{},\\\"server\\\":{},\\\"client\\\":{}}},\\\"flow\\\":\\\"171318078476991\\\",\\\"method\\\":\\\"BASIC\\\",\\\"products\\\":[4],\\\"userId\\\":134905,\\\"userStatus\\\":1,\\\"username\\\":\\\"tony@sita.aero\\\"},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"date\\\":{\\\"type\\\":\\\"integer\\\"},\\\"enterpriseId\\\":{\\\"type\\\":\\\"integer\\\"},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}}},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"browser\\\":{\\\"type\\\":\\\"object\\\"},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"family\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}}},\\\"os\\\":{\\\"type\\\":\\\"object\\\"},\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"version\\\":{\\\"type\\\":\\\"string\\\"}}}}},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\"},\\\"server\\\":{\\\"type\\\":\\\"object\\\"},\\\"client\\\":{\\\"type\\\":\\\"object\\\"}}}}},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]},\\\"userId\\\":{\\\"type\\\":\\\"integer\\\"},\\\"userStatus\\\":{\\\"type\\\":\\\"integer\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"}}}}\",\r\n  \"status\": 1,\r\n  \"group\": \"user\",\r\n  \"created_at\": \"2024-04-18 12:19:52\",\r\n  \"updated_at\": \"2024-04-19 06:19:50\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDQwMzM3MiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNCwiZXhwIjoxNzI0NTE2MzA0fQ.CZpTS85_krv1O6uEXhw53VcAcEG0XSWqxh5nbVbhCQg",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "c24a423b-4f89-4edc-b55c-dac9fd60a3bf",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:24 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2243"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"8c3-+Tpl4jOwLPwsMsmKF0f+JfKNego\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              49,
              55,
              49,
              51,
              49,
              56,
              48,
              55,
              56,
              52,
              56,
              57,
              52,
              44,
              34,
              101,
              110,
              116,
              101,
              114,
              112,
              114,
              105,
              115,
              101,
              73,
              100,
              34,
              58,
              49,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              56,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              53,
              84,
              49,
              49,
              58,
              51,
              51,
              58,
              48,
              52,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              53,
              84,
              49,
              49,
              58,
              51,
              50,
              58,
              53,
              56,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              48,
              53,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              48,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              98,
              114,
              111,
              119,
              115,
              101,
              114,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              102,
              97,
              109,
              105,
              108,
              121,
              34,
              58,
              34,
              79,
              116,
              104,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              48,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              85,
              85,
              73,
              68,
              69,
              52,
              57,
              50,
              56,
              51,
              69,
              68,
              45,
              49,
              50,
              69,
              65,
              45,
              68,
              54,
              52,
              68,
              45,
              54,
              68,
              68,
              69,
              45,
              68,
              68,
              67,
              50,
              54,
              66,
              51,
              48,
              70,
              57,
              52,
              56,
              95,
              65,
              78,
              84,
              79,
              78,
              73,
              79,
              46,
              77,
              69,
              77,
              66,
              82,
              73,
              68,
              69,
              83,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              104,
              114,
              111,
              109,
              101,
              32,
              45,
              32,
              49,
              49,
              48,
              46,
              48,
              46,
              48,
              46,
              48,
              32,
              47,
              32,
              87,
              105,
              110,
              100,
              111,
              119,
              115,
              32,
              45,
              32,
              119,
              105,
              110,
              100,
              111,
              119,
              115,
              45,
              49,
              48,
              34,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              50,
              46,
              48,
              34,
              125,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              125,
              125,
              125,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              34,
              49,
              55,
              49,
              51,
              49,
              56,
              48,
              55,
              56,
              52,
              55,
              54,
              57,
              57,
              49,
              34,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              66,
              65,
              83,
              73,
              67,
              34,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              91,
              52,
              93,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              48,
              53,
              44,
              34,
              117,
              115,
              101,
              114,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              111,
              110,
              121,
              64,
              115,
              105,
              116,
              97,
              46,
              97,
              101,
              114,
              111,
              34,
              125,
              44,
              34,
              115,
              99,
              104,
              101,
              109,
              97,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              101,
              110,
              116,
              101,
              114,
              112,
              114,
              105,
              115,
              101,
              73,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              125,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              98,
              114,
              111,
              119,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              102,
              97,
              109,
              105,
              108,
              121,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              125,
              125,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              125,
              125,
              125,
              125,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              114,
              114,
              97,
              121,
              34,
              44,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              93,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              125,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              117,
              115,
              101,
              114,
              58,
              108,
              111,
              99,
              107,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              98,
              108,
              111,
              99,
              107,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              114,
              115,
              32,
              105,
              110,
              118,
              111,
              108,
              118,
              101,
              115,
              32,
              116,
              101,
              109,
              112,
              111,
              114,
              97,
              114,
              105,
              108,
              121,
              32,
              111,
              114,
              32,
              112,
              101,
              114,
              109,
              97,
              110,
              101,
              110,
              116,
              108,
              121,
              32,
              100,
              105,
              115,
              97,
              98,
              108,
              105,
              110,
              103,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              39,
              115,
              32,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              32,
              105,
              110,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              46,
              32,
              73,
              116,
              32,
              105,
              115,
              32,
              117,
              115,
              101,
              100,
              32,
              116,
              111,
              32,
              112,
              114,
              111,
              116,
              101,
              99,
              116,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              97,
              103,
              97,
              105,
              110,
              115,
              116,
              32,
              112,
              111,
              116,
              101,
              110,
              116,
              105,
              97,
              108,
              32,
              116,
              104,
              114,
              101,
              97,
              116,
              115,
              32,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              98,
              114,
              101,
              97,
              99,
              104,
              101,
              115,
              44,
              32,
              116,
              97,
              107,
              105,
              110,
              103,
              32,
              109,
              101,
              97,
              115,
              117,
              114,
              101,
              115,
              32,
              116,
              111,
              32,
              112,
              114,
              101,
              118,
              101,
              110,
              116,
              32,
              117,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              111,
              114,
              32,
              109,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              105,
              101,
              115,
              46,
              32,
              83,
              111,
              109,
              101,
              32,
              112,
              111,
              115,
              115,
              105,
              98,
              108,
              101,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              119,
              111,
              117,
              108,
              100,
              32,
              106,
              117,
              115,
              116,
              105,
              102,
              121,
              32,
              116,
              104,
              105,
              115,
              32,
              98,
              108,
              111,
              99,
              107,
              32,
              102,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              105,
              110,
              99,
              108,
              117,
              100,
              101,
              58,
              32,
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              97,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              44,
              32,
              86,
              105,
              111,
              108,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              44,
              32,
              77,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              44,
              32,
              84,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              101,
              109,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              32,
              111,
              114,
              32,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              32,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              116,
              99,
              46,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              56,
              84,
              49,
              50,
              58,
              49,
              57,
              58,
              53,
              50,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              57,
              84,
              48,
              54,
              58,
              49,
              57,
              58,
              53,
              48,
              46,
              48,
              48,
              48,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 175,
          "responseSize": 2243
        },
        "id": "a0b1b1f9-edaa-4142-9ea0-e4ac0b8fad23",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Action ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Event created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c14d408c-b6f2-4f17-812e-9f2347c793d6",
          "length": 30,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "98b12afa-91c7-41df-91e1-179bcdb31566"
        },
        "item": {
          "id": "0d7ff2ba-37bb-4b04-8e00-0a13bc301b06",
          "name": "[List]/v1/action",
          "request": {
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "2"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "861ad954-b97d-4beb-b8fe-45a723eb86e3",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "5ed8c0f0-5ae7-47ee-8bf4-a52841e5e740"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "page",
                "value": "2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDQ2NzYwOSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNCwiZXhwIjoxNzI0NTE2MzA0fQ.CpI4wCiLCWSgrX9GGchWaaER9lSbXrtI93LXa9D78pw",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0898b320-07f8-4990-8ed0-98baa508308a",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDQ2NzYwOSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNCwiZXhwIjoxNzI0NTE2MzA0fQ.CpI4wCiLCWSgrX9GGchWaaER9lSbXrtI93LXa9D78pw",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6825d96c-aaed-414b-ac32-4ec7395bd6f9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:25 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "6798"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"1a8e-gXbczUGKyq0wFxMp0oFQaOlL3oE\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              50,
              44,
              34,
              115,
              105,
              122,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              50,
              55,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              104,
              101,
              97,
              108,
              116,
              104,
              58,
              99,
              104,
              101,
              99,
              107,
              68,
              66,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              111,
              32,
              101,
              110,
              115,
              117,
              114,
              101,
              32,
              116,
              104,
              101,
              32,
              108,
              105,
              118,
              101,
              110,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              97,
              110,
              32,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              114,
              32,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              98,
              121,
              32,
              118,
              101,
              114,
              105,
              102,
              121,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              32,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              105,
              111,
              110,
              44,
              32,
              97,
              32,
              99,
              114,
              117,
              99,
              105,
              97,
              108,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              116,
              111,
              32,
              105,
              109,
              112,
              108,
              101,
              109,
              101,
              110,
              116,
              32,
              97,
              32,
              104,
              101,
              97,
              108,
              116,
              104,
              32,
              99,
              104,
              101,
              99,
              107,
              32,
              109,
              101,
              99,
              104,
              97,
              110,
              105,
              115,
              109,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              32,
              97,
              105,
              109,
              115,
              32,
              116,
              111,
              32,
              99,
              111,
              110,
              116,
              105,
              110,
              117,
              111,
              117,
              115,
              108,
              121,
              32,
              109,
              111,
              110,
              105,
              116,
              111,
              114,
              32,
              116,
              104,
              101,
              32,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              32,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              44,
              32,
              101,
              110,
              115,
              117,
              114,
              105,
              110,
              103,
              32,
              116,
              104,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              114,
              101,
              109,
              97,
              105,
              110,
              115,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              105,
              118,
              101,
              32,
              97,
              110,
              100,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              97,
              108,
              46,
              32,
              79,
              110,
              101,
              32,
              107,
              101,
              121,
              32,
              111,
              112,
              116,
              105,
              111,
              110,
              32,
              119,
              105,
              116,
              104,
              105,
              110,
              32,
              116,
              104,
              105,
              115,
              32,
              112,
              111,
              108,
              105,
              99,
              121,
              32,
              105,
              115,
              32,
              116,
              104,
              101,
              32,
              116,
              121,
              112,
              101,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              44,
              32,
              119,
              104,
              105,
              99,
              104,
              44,
              32,
              119,
              104,
              101,
              110,
              32,
              115,
              101,
              116,
              32,
              116,
              111,
              32,
              102,
              105,
              114,
              115,
              116,
              95,
              111,
              107,
              44,
              32,
              115,
              105,
              103,
              110,
              105,
              102,
              105,
              101,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              104,
              111,
              117,
              108,
              100,
              32,
              115,
              116,
              111,
              112,
              32,
              97,
              115,
              32,
              115,
              111,
              111,
              110,
              32,
              97,
              115,
              32,
              97,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              105,
              115,
              32,
              114,
              101,
              99,
              101,
              105,
              118,
              101,
              100,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              97,
              112,
              112,
              114,
              111,
              97,
              99,
              104,
              32,
              101,
              110,
              104,
              97,
              110,
              99,
              101,
              115,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              97,
              110,
              99,
              101,
              32,
              98,
              121,
              32,
              109,
              105,
              110,
              105,
              109,
              105,
              122,
              105,
              110,
              103,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              105,
              110,
              103,
              32,
              116,
              105,
              109,
              101,
              32,
              111,
              110,
              99,
              101,
              32,
              97,
              32,
              112,
              111,
              115,
              105,
              116,
              105,
              118,
              101,
              32,
              99,
              104,
              101,
              99,
              107,
              32,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              32,
              105,
              115,
              32,
              97,
              99,
              104,
              105,
              101,
              118,
              101,
              100,
              46,
              32,
              65,
              100,
              100,
              105,
              116,
              105,
              111,
              110,
              97,
              108,
              108,
              121,
              44,
              32,
              105,
              116,
              39,
              115,
              32,
              119,
              111,
              114,
              116,
              104,
              32,
              110,
              111,
              116,
              105,
              110,
              103,
              32,
              116,
              104,
              97,
              116,
              32,
              116,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              39,
              115,
              32,
              98,
              101,
              104,
              97,
              118,
              105,
              111,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              68,
              66,
              95,
              84,
              89,
              80,
              69,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              44,
              32,
              112,
              114,
              111,
              118,
              105,
              100,
              105,
              110,
              103,
              32,
              102,
              108,
              101,
              120,
              105,
              98,
              105,
              108,
              105,
              116,
              121,
              32,
              105,
              110,
              32,
              109,
              97,
              110,
              97,
              103,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              104,
              101,
              97,
              108,
              116,
              104,
              32,
              99,
              104,
              101,
              99,
              107,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              98,
              97,
              115,
              101,
              100,
              32,
              111,
              110,
              32,
              115,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              32,
              110,
              101,
              101,
              100,
              115,
              32,
              97,
              110,
              100,
              32,
              99,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              115,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              104,
              101,
              97,
              108,
              116,
              104,
              58,
              99,
              104,
              101,
              99,
              107,
              81,
              117,
              101,
              114,
              121,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              60,
              112,
              62,
              32,
              84,
              111,
              32,
              101,
              110,
              115,
              117,
              114,
              101,
              32,
              116,
              104,
              101,
              32,
              108,
              105,
              118,
              101,
              110,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              97,
              110,
              32,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              114,
              32,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              98,
              121,
              32,
              118,
              101,
              114,
              105,
              102,
              121,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              101,
              120,
              101,
              99,
              117,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              97,
              32,
              113,
              117,
              101,
              114,
              121,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              44,
              32,
              97,
              32,
              99,
              114,
              105,
              116,
              105,
              99,
              97,
              108,
              32,
              112,
              111,
              108,
              105,
              99,
              121,
              32,
              105,
              115,
              32,
              116,
              104,
              101,
              32,
              105,
              109,
              112,
              108,
              101,
              109,
              101,
              110,
              116,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              97,
              32,
              104,
              101,
              97,
              108,
              116,
              104,
              32,
              99,
              104,
              101,
              99,
              107,
              32,
              109,
              101,
              99,
              104,
              97,
              110,
              105,
              115,
              109,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              111,
              108,
              105,
              99,
              121,
              32,
              97,
              105,
              109,
              115,
              32,
              116,
              111,
              32,
              109,
              111,
              110,
              105,
              116,
              111,
              114,
              32,
              116,
              104,
              101,
              32,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              32,
              113,
              117,
              101,
              114,
              121,
              32,
              101,
              120,
              101,
              99,
              117,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              110,
              115,
              117,
              114,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              39,
              115,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              97,
              108,
              32,
              115,
              116,
              97,
              116,
              117,
              115,
              32,
              97,
              110,
              100,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              105,
              118,
              101,
              110,
              101,
              115,
              115,
              46,
              32,
              75,
              101,
              121,
              32,
              111,
              112,
              116,
              105,
              111,
              110,
              115,
              32,
              119,
              105,
              116,
              104,
              105,
              110,
              32,
              116,
              104,
              105,
              115,
              32,
              112,
              111,
              108,
              105,
              99,
              121,
              32,
              105,
              110,
              99,
              108,
              117,
              100,
              101,
              58,
              32,
              60,
              47,
              112,
              62,
              32,
              60,
              117,
              108,
              62,
              32,
              60,
              108,
              105,
              62,
              32,
              116,
              121,
              112,
              101,
              58,
              32,
              87,
              104,
              101,
              110,
              32,
              115,
              101,
              116,
              32,
              116,
              111,
              32,
              102,
              105,
              114,
              115,
              116,
              95,
              111,
              107,
              44,
              32,
              116,
              104,
              105,
              115,
              32,
              105,
              110,
              100,
              105,
              99,
              97,
              116,
              101,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              116,
              111,
              112,
              115,
              32,
              117,
              112,
              111,
              110,
              32,
              111,
              98,
              116,
              97,
              105,
              110,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              102,
              105,
              114,
              115,
              116,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              97,
              112,
              112,
              114,
              111,
              97,
              99,
              104,
              32,
              101,
              110,
              104,
              97,
              110,
              99,
              101,
              115,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              97,
              110,
              99,
              101,
              32,
              98,
              121,
              32,
              114,
              101,
              100,
              117,
              99,
              105,
              110,
              103,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              105,
              110,
              103,
              32,
              116,
              105,
              109,
              101,
              32,
              111,
              110,
              99,
              101,
              32,
              97,
              32,
              112,
              111,
              115,
              105,
              116,
              105,
              118,
              101,
              32,
              99,
              104,
              101,
              99,
              107,
              32,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              32,
              105,
              115,
              32,
              97,
              99,
              104,
              105,
              101,
              118,
              101,
              100,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              81,
              85,
              69,
              82,
              89,
              95,
              84,
              89,
              80,
              69,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              46,
              32,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              58,
              32,
              68,
              101,
              102,
              105,
              110,
              101,
              115,
              32,
              97,
              32,
              108,
              111,
              103,
              105,
              99,
              97,
              108,
              32,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              118,
              97,
              108,
              117,
              97,
              116,
              101,
              100,
              32,
              105,
              110,
              32,
              116,
              101,
              120,
              116,
              32,
              102,
              111,
              114,
              109,
              97,
              116,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              81,
              85,
              69,
              82,
              89,
              95,
              69,
              88,
              80,
              82,
              69,
              83,
              83,
              73,
              79,
              78,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              46,
              32,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              32,
              109,
              111,
              100,
              101,
              58,
              32,
              73,
              110,
              100,
              105,
              99,
              97,
              116,
              101,
              115,
              32,
              97,
              32,
              115,
              116,
              114,
              105,
              99,
              116,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              114,
              101,
              103,
              97,
              114,
              100,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              100,
              101,
              102,
              105,
              110,
              101,
              100,
              32,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              118,
              97,
              108,
              117,
              97,
              116,
              101,
              100,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              81,
              85,
              69,
              82,
              89,
              95,
              77,
              79,
              68,
              69,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              46,
              32,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              115,
              99,
              104,
              101,
              109,
              97,
              58,
              32,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              101,
              115,
              32,
              116,
              104,
              101,
              32,
              100,
              101,
              102,
              97,
              117,
              108,
              116,
              32,
              115,
              99,
              104,
              101,
              109,
              97,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              117,
              115,
              101,
              100,
              32,
              119,
              105,
              116,
              104,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              113,
              117,
              101,
              114,
              121,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              105,
              110,
              103,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              81,
              85,
              69,
              82,
              89,
              95,
              83,
              67,
              72,
              69,
              77,
              65,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              46,
              32,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              108,
              105,
              115,
              116,
              58,
              32,
              82,
              101,
              112,
              114,
              101,
              115,
              101,
              110,
              116,
              115,
              32,
              97,
              32,
              100,
              101,
              102,
              97,
              117,
              108,
              116,
              32,
              108,
              105,
              115,
              116,
              32,
              111,
              102,
              32,
              116,
              97,
              98,
              108,
              101,
              115,
              32,
              116,
              111,
              32,
              118,
              101,
              114,
              105,
              102,
              121,
              32,
              119,
              105,
              116,
              104,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              113,
              117,
              101,
              114,
              121,
              46,
              32,
              73,
              116,
              32,
              99,
              97,
              110,
              32,
              97,
              108,
              115,
              111,
              32,
              102,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              32,
              97,
              115,
              32,
              97,
              32,
              108,
              105,
              115,
              116,
              32,
              111,
              102,
              32,
              118,
              97,
              108,
              117,
              101,
              115,
              32,
              116,
              111,
              32,
              101,
              118,
              97,
              108,
              117,
              97,
              116,
              101,
              32,
              105,
              102,
              32,
              116,
              104,
              101,
              32,
              100,
              101,
              102,
              97,
              117,
              108,
              116,
              32,
              83,
              81,
              76,
              32,
              105,
              115,
              32,
              99,
              104,
              97,
              110,
              103,
              101,
              100,
              44,
              32,
              97,
              110,
              100,
              32,
              116,
              104,
              101,
              32,
              101,
              118,
              97,
              108,
              117,
              97,
              116,
              105,
              111,
              110,
              32,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              81,
              85,
              69,
              82,
              89,
              95,
              76,
              73,
              83,
              84,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              46,
              32,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              115,
              113,
              108,
              58,
              32,
              68,
              101,
              110,
              111,
              116,
              101,
              115,
              32,
              116,
              104,
              101,
              32,
              83,
              81,
              76,
              32,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              117,
              115,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              116,
              104,
              101,
              32,
              113,
              117,
              101,
              114,
              121,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              105,
              110,
              103,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              81,
              85,
              69,
              82,
              89,
              95,
              83,
              81,
              76,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              46,
              32,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              47,
              117,
              108,
              62,
              32,
              60,
              112,
              62,
              84,
              104,
              101,
              115,
              101,
              32,
              111,
              112,
              116,
              105,
              111,
              110,
              115,
              32,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              32,
              97,
              32,
              114,
              111,
              98,
              117,
              115,
              116,
              32,
              102,
              114,
              97,
              109,
              101,
              119,
              111,
              114,
              107,
              32,
              102,
              111,
              114,
              32,
              101,
              118,
              97,
              108,
              117,
              97,
              116,
              105,
              110,
              103,
              32,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              32,
              113,
              117,
              101,
              114,
              121,
              32,
              101,
              120,
              101,
              99,
              117,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              110,
              115,
              117,
              114,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              39,
              115,
              32,
              99,
              111,
              110,
              116,
              105,
              110,
              117,
              111,
              117,
              115,
              32,
              102,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              97,
              108,
              105,
              116,
              121,
              32,
              97,
              110,
              100,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              97,
              110,
              99,
              101,
              46,
              60,
              47,
              112,
              62,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              111,
              108,
              105,
              99,
              121,
              58,
              99,
              104,
              101,
              99,
              107,
              80,
              101,
              114,
              109,
              105,
              115,
              105,
              111,
              110,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              60,
              112,
              62,
              84,
              104,
              101,
              32,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              111,
              98,
              106,
              101,
              99,
              116,
              32,
              100,
              101,
              102,
              105,
              110,
              101,
              115,
              32,
              116,
              104,
              101,
              32,
              105,
              110,
              112,
              117,
              116,
              32,
              118,
              97,
              108,
              117,
              101,
              115,
              32,
              102,
              111,
              114,
              32,
              116,
              104,
              101,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              111,
              108,
              105,
              99,
              121,
              58,
              99,
              104,
              101,
              99,
              107,
              80,
              101,
              114,
              109,
              105,
              115,
              105,
              111,
              110,
              32,
              112,
              111,
              108,
              105,
              99,
              121,
              44,
              32,
              119,
              104,
              105,
              99,
              104,
              32,
              105,
              115,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              105,
              98,
              108,
              101,
              32,
              102,
              111,
              114,
              32,
              118,
              101,
              114,
              105,
              102,
              121,
              105,
              110,
              103,
              32,
              105,
              102,
              32,
              97,
              110,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              101,
              100,
              32,
              117,
              115,
              101,
              114,
              32,
              104,
              97,
              115,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              111,
              32,
              97,
              32,
              115,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              46,
              32,
              66,
              101,
              108,
              111,
              119,
              44,
              32,
              101,
              97,
              99,
              104,
              32,
              115,
              101,
              116,
              32,
              111,
              102,
              32,
              118,
              97,
              108,
              117,
              101,
              115,
              32,
              105,
              110,
              32,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              105,
              115,
              32,
              100,
              101,
              115,
              99,
              114,
              105,
              98,
              101,
              100,
              58,
              60,
              47,
              112,
              62,
              32,
              60,
              117,
              108,
              62,
              32,
              60,
              108,
              105,
              62,
              116,
              111,
              107,
              101,
              110,
              68,
              97,
              116,
              97,
              58,
              32,
              67,
              111,
              110,
              116,
              97,
              105,
              110,
              115,
              32,
              105,
              110,
              102,
              111,
              114,
              109,
              97,
              116,
              105,
              111,
              110,
              32,
              97,
              98,
              111,
              117,
              116,
              32,
              116,
              104,
              101,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              111,
              107,
              101,
              110,
              44,
              32,
              115,
              117,
              99,
              104,
              32,
              97,
              115,
              32,
              116,
              104,
              101,
              32,
              117,
              115,
              101,
              114,
              32,
              97,
              110,
              100,
              32,
              116,
              104,
              101,
              32,
              102,
              108,
              111,
              119,
              32,
              116,
              121,
              112,
              101,
              46,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              117,
              115,
              101,
              114,
              58,
              32,
              68,
              101,
              102,
              105,
              110,
              101,
              115,
              32,
              116,
              104,
              101,
              32,
              117,
              115,
              101,
              114,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              105,
              114,
              32,
              105,
              100,
              101,
              110,
              116,
              105,
              102,
              105,
              101,
              114,
              32,
              40,
              117,
              115,
              101,
              114,
              73,
              100,
              41,
              46,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              58,
              32,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              101,
              115,
              32,
              116,
              104,
              101,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              105,
              110,
              32,
              97,
              32,
              114,
              101,
              103,
              117,
              108,
              97,
              114,
              32,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              32,
              102,
              111,
              114,
              109,
              97,
              116,
              44,
              32,
              105,
              116,
              32,
              99,
              111,
              117,
              108,
              100,
              32,
              98,
              101,
              32,
              97,
              108,
              115,
              111,
              32,
              97,
              32,
              115,
              101,
              116,
              32,
              111,
              102,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              105,
              111,
              110,
              115,
              32,
              105,
              110,
              32,
              97,
              114,
              114,
              97,
              121,
              32,
              102,
              111,
              114,
              109,
              97,
              116,
              46,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              109,
              111,
              100,
              101,
              58,
              32,
              83,
              101,
              116,
              32,
              116,
              111,
              32,
              39,
              82,
              69,
              71,
              69,
              88,
              80,
              39,
              44,
              32,
              105,
              110,
              100,
              105,
              99,
              97,
              116,
              105,
              110,
              103,
              32,
              116,
              104,
              97,
              116,
              32,
              97,
              32,
              114,
              101,
              103,
              117,
              108,
              97,
              114,
              32,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              45,
              98,
              97,
              115,
              101,
              100,
              32,
              115,
              101,
              97,
              114,
              99,
              104,
              32,
              119,
              105,
              108,
              108,
              32,
              98,
              101,
              32,
              117,
              115,
              101,
              100,
              46,
              32,
              83,
              101,
              116,
              32,
              116,
              111,
              32,
              39,
              83,
              69,
              65,
              82,
              67,
              72,
              39,
              44,
              32,
              105,
              110,
              100,
              105,
              99,
              97,
              116,
              105,
              110,
              103,
              32,
              97,
              32,
              115,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              32,
              115,
              101,
              97,
              114,
              99,
              104,
              32,
              109,
              111,
              100,
              101,
              32,
              105,
              110,
              116,
              111,
              32,
              97,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              97,
              114,
              114,
              97,
              121,
              46,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              114,
              101,
              115,
              117,
              108,
              116,
              58,
              32,
              68,
              101,
              102,
              105,
              110,
              101,
              115,
              32,
              116,
              104,
              101,
              32,
              100,
              101,
              115,
              105,
              114,
              101,
              100,
              32,
              114,
              101,
              115,
              117,
              108,
              116,
              32,
              116,
              121,
              112,
              101,
              46,
              32,
              83,
              101,
              116,
              32,
              39,
              110,
              97,
              109,
              101,
              39,
              32,
              116,
              111,
              32,
              103,
              101,
              116,
              32,
              116,
              104,
              101,
              32,
              115,
              117,
              98,
              115,
              101,
              116,
              32,
              111,
              102,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              97,
              115,
              32,
              97,
              32,
              115,
              116,
              114,
              105,
              110,
              103,
              32,
              108,
              105,
              115,
              116,
              44,
              32,
              111,
              114,
              32,
              115,
              101,
              116,
              32,
              39,
              99,
              111,
              117,
              110,
              116,
              39,
              32,
              116,
              111,
              32,
              104,
              97,
              118,
              101,
              32,
              116,
              104,
              101,
              32,
              116,
              111,
              116,
              97,
              108,
              32,
              111,
              102,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              32,
              97,
              115,
              32,
              97,
              32,
              110,
              117,
              109,
              98,
              101,
              114,
              46,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              115,
              116,
              114,
              105,
              99,
              116,
              58,
              32,
              83,
              101,
              116,
              32,
              116,
              111,
              32,
              116,
              114,
              117,
              101,
              44,
              32,
              105,
              110,
              100,
              105,
              99,
              97,
              116,
              105,
              110,
              103,
              32,
              97,
              32,
              115,
              116,
              114,
              105,
              99,
              116,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              32,
              99,
              104,
              101,
              99,
              107,
              46,
              32,
              73,
              116,
              32,
              105,
              115,
              32,
              118,
              97,
              108,
              105,
              100,
              32,
              115,
              112,
              101,
              99,
              105,
              97,
              108,
              108,
              121,
              32,
              102,
              111,
              114,
              32,
              116,
              104,
              101,
              32,
              109,
              111,
              100,
              101,
              32,
              115,
              101,
              116,
              32,
              105,
              110,
              32,
              39,
              83,
              69,
              65,
              82,
              67,
              72,
              39,
              32,
              118,
              97,
              108,
              117,
              101,
              44,
              32,
              105,
              110,
              32,
              116,
              104,
              97,
              116,
              32,
              99,
              97,
              115,
              101,
              32,
              116,
              104,
              101,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              119,
              105,
              108,
              108,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              101,
              32,
              116,
              104,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              116,
              111,
              116,
              97,
              108,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              115,
              117,
              98,
              115,
              101,
              116,
              32,
              111,
              102,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              102,
              111,
              117,
              110,
              100,
              32,
              109,
              117,
              115,
              116,
              32,
              98,
              101,
              32,
              116,
              104,
              101,
              32,
              115,
              97,
              109,
              101,
              32,
              97,
              115,
              32,
              116,
              104,
              101,
              32,
              116,
              111,
              116,
              97,
              108,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              46,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              47,
              117,
              108,
              62,
              32,
              60,
              112,
              62,
              84,
              104,
              105,
              115,
              32,
              112,
              111,
              108,
              105,
              99,
              121,
              32,
              105,
              115,
              32,
              99,
              114,
              117,
              99,
              105,
              97,
              108,
              32,
              102,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              97,
              110,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              32,
              105,
              110,
              32,
              97,
              32,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              46,
              32,
              66,
              121,
              32,
              118,
              101,
              114,
              105,
              102,
              121,
              105,
              110,
              103,
              32,
              105,
              102,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              32,
              104,
              97,
              115,
              32,
              116,
              104,
              101,
              32,
              110,
              101,
              99,
              101,
              115,
              115,
              97,
              114,
              121,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              115,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              44,
              32,
              105,
              116,
              32,
              101,
              110,
              115,
              117,
              114,
              101,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              97,
              114,
              101,
              32,
              117,
              112,
              104,
              101,
              108,
              100,
              46,
              32,
              73,
              116,
              115,
              32,
              105,
              109,
              112,
              97,
              99,
              116,
              32,
              111,
              110,
              32,
              97,
              32,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              32,
              108,
              105,
              101,
              115,
              32,
              105,
              110,
              32,
              112,
              114,
              111,
              116,
              101,
              99,
              116,
              105,
              110,
              103,
              32,
              115,
              101,
              110,
              115,
              105,
              116,
              105,
              118,
              101,
              32,
              100,
              97,
              116,
              97,
              44,
              32,
              112,
              114,
              101,
              118,
              101,
              110,
              116,
              105,
              110,
              103,
              32,
              117,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              44,
              32,
              97,
              110,
              100,
              32,
              99,
              111,
              109,
              112,
              108,
              121,
              105,
              110,
              103,
              32,
              119,
              105,
              116,
              104,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              114,
              101,
              103,
              117,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              44,
              32,
              116,
              104,
              101,
              114,
              101,
              98,
              121,
              32,
              99,
              111,
              110,
              116,
              114,
              105,
              98,
              117,
              116,
              105,
              110,
              103,
              32,
              116,
              111,
              32,
              116,
              104,
              101,
              32,
              105,
              110,
              116,
              101,
              103,
              114,
              105,
              116,
              121,
              32,
              97,
              110,
              100,
              32,
              99,
              111,
              110,
              102,
              105,
              100,
              101,
              110,
              116,
              105,
              97,
              108,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              105,
              110,
              102,
              111,
              114,
              109,
              97,
              116,
              105,
              111,
              110,
              46,
              32,
              65,
              100,
              100,
              105,
              116,
              105,
              111,
              110,
              97,
              108,
              108,
              121,
              44,
              32,
              98,
              121,
              32,
              101,
              102,
              102,
              105,
              99,
              105,
              101,
              110,
              116,
              108,
              121,
              32,
              117,
              115,
              105,
              110,
              103,
              32,
              116,
              104,
              105,
              115,
              32,
              116,
              121,
              112,
              101,
              32,
              111,
              102,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              44,
              32,
              116,
              104,
              101,
              32,
              111,
              118,
              101,
              114,
              97,
              108,
              108,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              105,
              115,
              32,
              115,
              116,
              114,
              101,
              110,
              103,
              116,
              104,
              101,
              110,
              101,
              100,
              44,
              32,
              101,
              110,
              115,
              117,
              114,
              105,
              110,
              103,
              32,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              108,
              101,
              100,
              32,
              97,
              110,
              100,
              32,
              97,
              112,
              112,
              114,
              111,
              112,
              114,
              105,
              97,
              116,
              101,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              111,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              46,
              60,
              47,
              112,
              62,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              48,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              117,
              115,
              101,
              114,
              58,
              108,
              111,
              99,
              107,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              98,
              108,
              111,
              99,
              107,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              114,
              115,
              32,
              105,
              110,
              118,
              111,
              108,
              118,
              101,
              115,
              32,
              116,
              101,
              109,
              112,
              111,
              114,
              97,
              114,
              105,
              108,
              121,
              32,
              111,
              114,
              32,
              112,
              101,
              114,
              109,
              97,
              110,
              101,
              110,
              116,
              108,
              121,
              32,
              100,
              105,
              115,
              97,
              98,
              108,
              105,
              110,
              103,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              39,
              115,
              32,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              32,
              105,
              110,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              46,
              32,
              73,
              116,
              32,
              105,
              115,
              32,
              117,
              115,
              101,
              100,
              32,
              116,
              111,
              32,
              112,
              114,
              111,
              116,
              101,
              99,
              116,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              97,
              103,
              97,
              105,
              110,
              115,
              116,
              32,
              112,
              111,
              116,
              101,
              110,
              116,
              105,
              97,
              108,
              32,
              116,
              104,
              114,
              101,
              97,
              116,
              115,
              32,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              98,
              114,
              101,
              97,
              99,
              104,
              101,
              115,
              44,
              32,
              116,
              97,
              107,
              105,
              110,
              103,
              32,
              109,
              101,
              97,
              115,
              117,
              114,
              101,
              115,
              32,
              116,
              111,
              32,
              112,
              114,
              101,
              118,
              101,
              110,
              116,
              32,
              117,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              111,
              114,
              32,
              109,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              105,
              101,
              115,
              46,
              32,
              83,
              111,
              109,
              101,
              32,
              112,
              111,
              115,
              115,
              105,
              98,
              108,
              101,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              119,
              111,
              117,
              108,
              100,
              32,
              106,
              117,
              115,
              116,
              105,
              102,
              121,
              32,
              116,
              104,
              105,
              115,
              32,
              98,
              108,
              111,
              99,
              107,
              32,
              102,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              105,
              110,
              99,
              108,
              117,
              100,
              101,
              58,
              32,
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              97,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              44,
              32,
              86,
              105,
              111,
              108,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              44,
              32,
              77,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              44,
              32,
              84,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              101,
              109,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              32,
              111,
              114,
              32,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              32,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              116,
              99,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              48,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              105,
              116,
              111,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              117,
              115,
              101,
              114,
              58,
              108,
              111,
              99,
              107,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              98,
              108,
              111,
              99,
              107,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              114,
              115,
              32,
              105,
              110,
              118,
              111,
              108,
              118,
              101,
              115,
              32,
              116,
              101,
              109,
              112,
              111,
              114,
              97,
              114,
              105,
              108,
              121,
              32,
              111,
              114,
              32,
              112,
              101,
              114,
              109,
              97,
              110,
              101,
              110,
              116,
              108,
              121,
              32,
              100,
              105,
              115,
              97,
              98,
              108,
              105,
              110,
              103,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              39,
              115,
              32,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              32,
              105,
              110,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              46,
              32,
              73,
              116,
              32,
              105,
              115,
              32,
              117,
              115,
              101,
              100,
              32,
              116,
              111,
              32,
              112,
              114,
              111,
              116,
              101,
              99,
              116,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              97,
              103,
              97,
              105,
              110,
              115,
              116,
              32,
              112,
              111,
              116,
              101,
              110,
              116,
              105,
              97,
              108,
              32,
              116,
              104,
              114,
              101,
              97,
              116,
              115,
              32,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              98,
              114,
              101,
              97,
              99,
              104,
              101,
              115,
              44,
              32,
              116,
              97,
              107,
              105,
              110,
              103,
              32,
              109,
              101,
              97,
              115,
              117,
              114,
              101,
              115,
              32,
              116,
              111,
              32,
              112,
              114,
              101,
              118,
              101,
              110,
              116,
              32,
              117,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              111,
              114,
              32,
              109,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              105,
              101,
              115,
              46,
              32,
              83,
              111,
              109,
              101,
              32,
              112,
              111,
              115,
              115,
              105,
              98,
              108,
              101,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              119,
              111,
              117,
              108,
              100,
              32,
              106,
              117,
              115,
              116,
              105,
              102,
              121,
              32,
              116,
              104,
              105,
              115,
              32,
              98,
              108,
              111,
              99,
              107,
              32,
              102,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              105,
              110,
              99,
              108,
              117,
              100,
              101,
              58,
              32,
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              97,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              44,
              32,
              86,
              105,
              111,
              108,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              44,
              32,
              77,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              44,
              32,
              84,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              101,
              109,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              32,
              111,
              114,
              32,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              32,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              116,
              99,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              49,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              117,
              115,
              101,
              114,
              58,
              108,
              111,
              99,
              107,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              98,
              108,
              111,
              99,
              107,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              114,
              115,
              32,
              105,
              110,
              118,
              111,
              108,
              118,
              101,
              115,
              32,
              116,
              101,
              109,
              112,
              111,
              114,
              97,
              114,
              105,
              108,
              121,
              32,
              111,
              114,
              32,
              112,
              101,
              114,
              109,
              97,
              110,
              101,
              110,
              116,
              108,
              121,
              32,
              100,
              105,
              115,
              97,
              98,
              108,
              105,
              110,
              103,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              39,
              115,
              32,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              32,
              105,
              110,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              46,
              32,
              73,
              116,
              32,
              105,
              115,
              32,
              117,
              115,
              101,
              100,
              32,
              116,
              111,
              32,
              112,
              114,
              111,
              116,
              101,
              99,
              116,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              97,
              103,
              97,
              105,
              110,
              115,
              116,
              32,
              112,
              111,
              116,
              101,
              110,
              116,
              105,
              97,
              108,
              32,
              116,
              104,
              114,
              101,
              97,
              116,
              115,
              32,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              98,
              114,
              101,
              97,
              99,
              104,
              101,
              115,
              44,
              32,
              116,
              97,
              107,
              105,
              110,
              103,
              32,
              109,
              101,
              97,
              115,
              117,
              114,
              101,
              115,
              32,
              116,
              111,
              32,
              112,
              114,
              101,
              118,
              101,
              110,
              116,
              32,
              117,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              111,
              114,
              32,
              109,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              105,
              101,
              115,
              46,
              32,
              83,
              111,
              109,
              101,
              32,
              112,
              111,
              115,
              115,
              105,
              98,
              108,
              101,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              119,
              111,
              117,
              108,
              100,
              32,
              106,
              117,
              115,
              116,
              105,
              102,
              121,
              32,
              116,
              104,
              105,
              115,
              32,
              98,
              108,
              111,
              99,
              107,
              32,
              102,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              105,
              110,
              99,
              108,
              117,
              100,
              101,
              58,
              32,
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              97,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              44,
              32,
              86,
              105,
              111,
              108,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              44,
              32,
              77,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              44,
              32,
              84,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              101,
              109,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              32,
              111,
              114,
              32,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              32,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              116,
              99,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              49,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              50,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              50,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              50,
              56,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 200,
          "responseSize": 6798
        },
        "id": "0d7ff2ba-37bb-4b04-8e00-0a13bc301b06",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c14d408c-b6f2-4f17-812e-9f2347c793d6",
          "length": 30,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "98b12afa-91c7-41df-91e1-179bcdb31566"
        },
        "item": {
          "id": "0d7ff2ba-37bb-4b04-8e00-0a13bc301b06",
          "name": "[List]/v1/action",
          "request": {
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "2"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "861ad954-b97d-4beb-b8fe-45a723eb86e3",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "5ed8c0f0-5ae7-47ee-8bf4-a52841e5e740"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "page",
                "value": "2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDQ2NzYwOSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNCwiZXhwIjoxNzI0NTE2MzA0fQ.CpI4wCiLCWSgrX9GGchWaaER9lSbXrtI93LXa9D78pw",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0898b320-07f8-4990-8ed0-98baa508308a",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDQ2NzYwOSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNCwiZXhwIjoxNzI0NTE2MzA0fQ.CpI4wCiLCWSgrX9GGchWaaER9lSbXrtI93LXa9D78pw",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "6825d96c-aaed-414b-ac32-4ec7395bd6f9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:25 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "6798"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"1a8e-gXbczUGKyq0wFxMp0oFQaOlL3oE\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              50,
              44,
              34,
              115,
              105,
              122,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              50,
              55,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              104,
              101,
              97,
              108,
              116,
              104,
              58,
              99,
              104,
              101,
              99,
              107,
              68,
              66,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              111,
              32,
              101,
              110,
              115,
              117,
              114,
              101,
              32,
              116,
              104,
              101,
              32,
              108,
              105,
              118,
              101,
              110,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              97,
              110,
              32,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              114,
              32,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              98,
              121,
              32,
              118,
              101,
              114,
              105,
              102,
              121,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              32,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              105,
              111,
              110,
              44,
              32,
              97,
              32,
              99,
              114,
              117,
              99,
              105,
              97,
              108,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              116,
              111,
              32,
              105,
              109,
              112,
              108,
              101,
              109,
              101,
              110,
              116,
              32,
              97,
              32,
              104,
              101,
              97,
              108,
              116,
              104,
              32,
              99,
              104,
              101,
              99,
              107,
              32,
              109,
              101,
              99,
              104,
              97,
              110,
              105,
              115,
              109,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              32,
              97,
              105,
              109,
              115,
              32,
              116,
              111,
              32,
              99,
              111,
              110,
              116,
              105,
              110,
              117,
              111,
              117,
              115,
              108,
              121,
              32,
              109,
              111,
              110,
              105,
              116,
              111,
              114,
              32,
              116,
              104,
              101,
              32,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              32,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              44,
              32,
              101,
              110,
              115,
              117,
              114,
              105,
              110,
              103,
              32,
              116,
              104,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              114,
              101,
              109,
              97,
              105,
              110,
              115,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              105,
              118,
              101,
              32,
              97,
              110,
              100,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              97,
              108,
              46,
              32,
              79,
              110,
              101,
              32,
              107,
              101,
              121,
              32,
              111,
              112,
              116,
              105,
              111,
              110,
              32,
              119,
              105,
              116,
              104,
              105,
              110,
              32,
              116,
              104,
              105,
              115,
              32,
              112,
              111,
              108,
              105,
              99,
              121,
              32,
              105,
              115,
              32,
              116,
              104,
              101,
              32,
              116,
              121,
              112,
              101,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              44,
              32,
              119,
              104,
              105,
              99,
              104,
              44,
              32,
              119,
              104,
              101,
              110,
              32,
              115,
              101,
              116,
              32,
              116,
              111,
              32,
              102,
              105,
              114,
              115,
              116,
              95,
              111,
              107,
              44,
              32,
              115,
              105,
              103,
              110,
              105,
              102,
              105,
              101,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              104,
              111,
              117,
              108,
              100,
              32,
              115,
              116,
              111,
              112,
              32,
              97,
              115,
              32,
              115,
              111,
              111,
              110,
              32,
              97,
              115,
              32,
              97,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              105,
              115,
              32,
              114,
              101,
              99,
              101,
              105,
              118,
              101,
              100,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              97,
              112,
              112,
              114,
              111,
              97,
              99,
              104,
              32,
              101,
              110,
              104,
              97,
              110,
              99,
              101,
              115,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              97,
              110,
              99,
              101,
              32,
              98,
              121,
              32,
              109,
              105,
              110,
              105,
              109,
              105,
              122,
              105,
              110,
              103,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              105,
              110,
              103,
              32,
              116,
              105,
              109,
              101,
              32,
              111,
              110,
              99,
              101,
              32,
              97,
              32,
              112,
              111,
              115,
              105,
              116,
              105,
              118,
              101,
              32,
              99,
              104,
              101,
              99,
              107,
              32,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              32,
              105,
              115,
              32,
              97,
              99,
              104,
              105,
              101,
              118,
              101,
              100,
              46,
              32,
              65,
              100,
              100,
              105,
              116,
              105,
              111,
              110,
              97,
              108,
              108,
              121,
              44,
              32,
              105,
              116,
              39,
              115,
              32,
              119,
              111,
              114,
              116,
              104,
              32,
              110,
              111,
              116,
              105,
              110,
              103,
              32,
              116,
              104,
              97,
              116,
              32,
              116,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              39,
              115,
              32,
              98,
              101,
              104,
              97,
              118,
              105,
              111,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              68,
              66,
              95,
              84,
              89,
              80,
              69,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              44,
              32,
              112,
              114,
              111,
              118,
              105,
              100,
              105,
              110,
              103,
              32,
              102,
              108,
              101,
              120,
              105,
              98,
              105,
              108,
              105,
              116,
              121,
              32,
              105,
              110,
              32,
              109,
              97,
              110,
              97,
              103,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              104,
              101,
              97,
              108,
              116,
              104,
              32,
              99,
              104,
              101,
              99,
              107,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              98,
              97,
              115,
              101,
              100,
              32,
              111,
              110,
              32,
              115,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              32,
              110,
              101,
              101,
              100,
              115,
              32,
              97,
              110,
              100,
              32,
              99,
              111,
              110,
              102,
              105,
              103,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              115,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              104,
              101,
              97,
              108,
              116,
              104,
              58,
              99,
              104,
              101,
              99,
              107,
              81,
              117,
              101,
              114,
              121,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              60,
              112,
              62,
              32,
              84,
              111,
              32,
              101,
              110,
              115,
              117,
              114,
              101,
              32,
              116,
              104,
              101,
              32,
              108,
              105,
              118,
              101,
              110,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              97,
              110,
              32,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              114,
              32,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              98,
              121,
              32,
              118,
              101,
              114,
              105,
              102,
              121,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              101,
              120,
              101,
              99,
              117,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              97,
              32,
              113,
              117,
              101,
              114,
              121,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              44,
              32,
              97,
              32,
              99,
              114,
              105,
              116,
              105,
              99,
              97,
              108,
              32,
              112,
              111,
              108,
              105,
              99,
              121,
              32,
              105,
              115,
              32,
              116,
              104,
              101,
              32,
              105,
              109,
              112,
              108,
              101,
              109,
              101,
              110,
              116,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              97,
              32,
              104,
              101,
              97,
              108,
              116,
              104,
              32,
              99,
              104,
              101,
              99,
              107,
              32,
              109,
              101,
              99,
              104,
              97,
              110,
              105,
              115,
              109,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              111,
              108,
              105,
              99,
              121,
              32,
              97,
              105,
              109,
              115,
              32,
              116,
              111,
              32,
              109,
              111,
              110,
              105,
              116,
              111,
              114,
              32,
              116,
              104,
              101,
              32,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              32,
              113,
              117,
              101,
              114,
              121,
              32,
              101,
              120,
              101,
              99,
              117,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              110,
              115,
              117,
              114,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              39,
              115,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              97,
              108,
              32,
              115,
              116,
              97,
              116,
              117,
              115,
              32,
              97,
              110,
              100,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              105,
              118,
              101,
              110,
              101,
              115,
              115,
              46,
              32,
              75,
              101,
              121,
              32,
              111,
              112,
              116,
              105,
              111,
              110,
              115,
              32,
              119,
              105,
              116,
              104,
              105,
              110,
              32,
              116,
              104,
              105,
              115,
              32,
              112,
              111,
              108,
              105,
              99,
              121,
              32,
              105,
              110,
              99,
              108,
              117,
              100,
              101,
              58,
              32,
              60,
              47,
              112,
              62,
              32,
              60,
              117,
              108,
              62,
              32,
              60,
              108,
              105,
              62,
              32,
              116,
              121,
              112,
              101,
              58,
              32,
              87,
              104,
              101,
              110,
              32,
              115,
              101,
              116,
              32,
              116,
              111,
              32,
              102,
              105,
              114,
              115,
              116,
              95,
              111,
              107,
              44,
              32,
              116,
              104,
              105,
              115,
              32,
              105,
              110,
              100,
              105,
              99,
              97,
              116,
              101,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              115,
              116,
              111,
              112,
              115,
              32,
              117,
              112,
              111,
              110,
              32,
              111,
              98,
              116,
              97,
              105,
              110,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              102,
              105,
              114,
              115,
              116,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              97,
              112,
              112,
              114,
              111,
              97,
              99,
              104,
              32,
              101,
              110,
              104,
              97,
              110,
              99,
              101,
              115,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              97,
              110,
              99,
              101,
              32,
              98,
              121,
              32,
              114,
              101,
              100,
              117,
              99,
              105,
              110,
              103,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              105,
              110,
              103,
              32,
              116,
              105,
              109,
              101,
              32,
              111,
              110,
              99,
              101,
              32,
              97,
              32,
              112,
              111,
              115,
              105,
              116,
              105,
              118,
              101,
              32,
              99,
              104,
              101,
              99,
              107,
              32,
              111,
              117,
              116,
              99,
              111,
              109,
              101,
              32,
              105,
              115,
              32,
              97,
              99,
              104,
              105,
              101,
              118,
              101,
              100,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              81,
              85,
              69,
              82,
              89,
              95,
              84,
              89,
              80,
              69,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              46,
              32,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              58,
              32,
              68,
              101,
              102,
              105,
              110,
              101,
              115,
              32,
              97,
              32,
              108,
              111,
              103,
              105,
              99,
              97,
              108,
              32,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              118,
              97,
              108,
              117,
              97,
              116,
              101,
              100,
              32,
              105,
              110,
              32,
              116,
              101,
              120,
              116,
              32,
              102,
              111,
              114,
              109,
              97,
              116,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              81,
              85,
              69,
              82,
              89,
              95,
              69,
              88,
              80,
              82,
              69,
              83,
              83,
              73,
              79,
              78,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              46,
              32,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              32,
              109,
              111,
              100,
              101,
              58,
              32,
              73,
              110,
              100,
              105,
              99,
              97,
              116,
              101,
              115,
              32,
              97,
              32,
              115,
              116,
              114,
              105,
              99,
              116,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              114,
              101,
              103,
              97,
              114,
              100,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              100,
              101,
              102,
              105,
              110,
              101,
              100,
              32,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              118,
              97,
              108,
              117,
              97,
              116,
              101,
              100,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              81,
              85,
              69,
              82,
              89,
              95,
              77,
              79,
              68,
              69,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              46,
              32,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              115,
              99,
              104,
              101,
              109,
              97,
              58,
              32,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              101,
              115,
              32,
              116,
              104,
              101,
              32,
              100,
              101,
              102,
              97,
              117,
              108,
              116,
              32,
              115,
              99,
              104,
              101,
              109,
              97,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              117,
              115,
              101,
              100,
              32,
              119,
              105,
              116,
              104,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              113,
              117,
              101,
              114,
              121,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              105,
              110,
              103,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              81,
              85,
              69,
              82,
              89,
              95,
              83,
              67,
              72,
              69,
              77,
              65,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              46,
              32,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              108,
              105,
              115,
              116,
              58,
              32,
              82,
              101,
              112,
              114,
              101,
              115,
              101,
              110,
              116,
              115,
              32,
              97,
              32,
              100,
              101,
              102,
              97,
              117,
              108,
              116,
              32,
              108,
              105,
              115,
              116,
              32,
              111,
              102,
              32,
              116,
              97,
              98,
              108,
              101,
              115,
              32,
              116,
              111,
              32,
              118,
              101,
              114,
              105,
              102,
              121,
              32,
              119,
              105,
              116,
              104,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              113,
              117,
              101,
              114,
              121,
              46,
              32,
              73,
              116,
              32,
              99,
              97,
              110,
              32,
              97,
              108,
              115,
              111,
              32,
              102,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              32,
              97,
              115,
              32,
              97,
              32,
              108,
              105,
              115,
              116,
              32,
              111,
              102,
              32,
              118,
              97,
              108,
              117,
              101,
              115,
              32,
              116,
              111,
              32,
              101,
              118,
              97,
              108,
              117,
              97,
              116,
              101,
              32,
              105,
              102,
              32,
              116,
              104,
              101,
              32,
              100,
              101,
              102,
              97,
              117,
              108,
              116,
              32,
              83,
              81,
              76,
              32,
              105,
              115,
              32,
              99,
              104,
              97,
              110,
              103,
              101,
              100,
              44,
              32,
              97,
              110,
              100,
              32,
              116,
              104,
              101,
              32,
              101,
              118,
              97,
              108,
              117,
              97,
              116,
              105,
              111,
              110,
              32,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              32,
              105,
              115,
              32,
              109,
              111,
              100,
              105,
              102,
              105,
              101,
              100,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              81,
              85,
              69,
              82,
              89,
              95,
              76,
              73,
              83,
              84,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              46,
              32,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              115,
              113,
              108,
              58,
              32,
              68,
              101,
              110,
              111,
              116,
              101,
              115,
              32,
              116,
              104,
              101,
              32,
              83,
              81,
              76,
              32,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              117,
              115,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              116,
              104,
              101,
              32,
              113,
              117,
              101,
              114,
              121,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              105,
              110,
              103,
              46,
              32,
              84,
              104,
              105,
              115,
              32,
              112,
              97,
              114,
              97,
              109,
              101,
              116,
              101,
              114,
              32,
              99,
              97,
              110,
              32,
              98,
              101,
              32,
              111,
              118,
              101,
              114,
              114,
              105,
              100,
              100,
              101,
              110,
              32,
              98,
              121,
              32,
              116,
              104,
              101,
              32,
              72,
              69,
              65,
              76,
              84,
              72,
              95,
              67,
              72,
              69,
              67,
              75,
              95,
              81,
              85,
              69,
              82,
              89,
              95,
              83,
              81,
              76,
              32,
              101,
              110,
              118,
              105,
              114,
              111,
              110,
              109,
              101,
              110,
              116,
              32,
              118,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              46,
              32,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              47,
              117,
              108,
              62,
              32,
              60,
              112,
              62,
              84,
              104,
              101,
              115,
              101,
              32,
              111,
              112,
              116,
              105,
              111,
              110,
              115,
              32,
              112,
              114,
              111,
              118,
              105,
              100,
              101,
              32,
              97,
              32,
              114,
              111,
              98,
              117,
              115,
              116,
              32,
              102,
              114,
              97,
              109,
              101,
              119,
              111,
              114,
              107,
              32,
              102,
              111,
              114,
              32,
              101,
              118,
              97,
              108,
              117,
              97,
              116,
              105,
              110,
              103,
              32,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              32,
              113,
              117,
              101,
              114,
              121,
              32,
              101,
              120,
              101,
              99,
              117,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              110,
              115,
              117,
              114,
              105,
              110,
              103,
              32,
              116,
              104,
              101,
              32,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              39,
              115,
              32,
              99,
              111,
              110,
              116,
              105,
              110,
              117,
              111,
              117,
              115,
              32,
              102,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              97,
              108,
              105,
              116,
              121,
              32,
              97,
              110,
              100,
              32,
              112,
              101,
              114,
              102,
              111,
              114,
              109,
              97,
              110,
              99,
              101,
              46,
              60,
              47,
              112,
              62,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              111,
              108,
              105,
              99,
              121,
              58,
              99,
              104,
              101,
              99,
              107,
              80,
              101,
              114,
              109,
              105,
              115,
              105,
              111,
              110,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              60,
              112,
              62,
              84,
              104,
              101,
              32,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              111,
              98,
              106,
              101,
              99,
              116,
              32,
              100,
              101,
              102,
              105,
              110,
              101,
              115,
              32,
              116,
              104,
              101,
              32,
              105,
              110,
              112,
              117,
              116,
              32,
              118,
              97,
              108,
              117,
              101,
              115,
              32,
              102,
              111,
              114,
              32,
              116,
              104,
              101,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              111,
              108,
              105,
              99,
              121,
              58,
              99,
              104,
              101,
              99,
              107,
              80,
              101,
              114,
              109,
              105,
              115,
              105,
              111,
              110,
              32,
              112,
              111,
              108,
              105,
              99,
              121,
              44,
              32,
              119,
              104,
              105,
              99,
              104,
              32,
              105,
              115,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              105,
              98,
              108,
              101,
              32,
              102,
              111,
              114,
              32,
              118,
              101,
              114,
              105,
              102,
              121,
              105,
              110,
              103,
              32,
              105,
              102,
              32,
              97,
              110,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              101,
              100,
              32,
              117,
              115,
              101,
              114,
              32,
              104,
              97,
              115,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              111,
              32,
              97,
              32,
              115,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              46,
              32,
              66,
              101,
              108,
              111,
              119,
              44,
              32,
              101,
              97,
              99,
              104,
              32,
              115,
              101,
              116,
              32,
              111,
              102,
              32,
              118,
              97,
              108,
              117,
              101,
              115,
              32,
              105,
              110,
              32,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              105,
              115,
              32,
              100,
              101,
              115,
              99,
              114,
              105,
              98,
              101,
              100,
              58,
              60,
              47,
              112,
              62,
              32,
              60,
              117,
              108,
              62,
              32,
              60,
              108,
              105,
              62,
              116,
              111,
              107,
              101,
              110,
              68,
              97,
              116,
              97,
              58,
              32,
              67,
              111,
              110,
              116,
              97,
              105,
              110,
              115,
              32,
              105,
              110,
              102,
              111,
              114,
              109,
              97,
              116,
              105,
              111,
              110,
              32,
              97,
              98,
              111,
              117,
              116,
              32,
              116,
              104,
              101,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              111,
              107,
              101,
              110,
              44,
              32,
              115,
              117,
              99,
              104,
              32,
              97,
              115,
              32,
              116,
              104,
              101,
              32,
              117,
              115,
              101,
              114,
              32,
              97,
              110,
              100,
              32,
              116,
              104,
              101,
              32,
              102,
              108,
              111,
              119,
              32,
              116,
              121,
              112,
              101,
              46,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              117,
              115,
              101,
              114,
              58,
              32,
              68,
              101,
              102,
              105,
              110,
              101,
              115,
              32,
              116,
              104,
              101,
              32,
              117,
              115,
              101,
              114,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              105,
              114,
              32,
              105,
              100,
              101,
              110,
              116,
              105,
              102,
              105,
              101,
              114,
              32,
              40,
              117,
              115,
              101,
              114,
              73,
              100,
              41,
              46,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              58,
              32,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              101,
              115,
              32,
              116,
              104,
              101,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              105,
              110,
              32,
              97,
              32,
              114,
              101,
              103,
              117,
              108,
              97,
              114,
              32,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              32,
              102,
              111,
              114,
              109,
              97,
              116,
              44,
              32,
              105,
              116,
              32,
              99,
              111,
              117,
              108,
              100,
              32,
              98,
              101,
              32,
              97,
              108,
              115,
              111,
              32,
              97,
              32,
              115,
              101,
              116,
              32,
              111,
              102,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              105,
              111,
              110,
              115,
              32,
              105,
              110,
              32,
              97,
              114,
              114,
              97,
              121,
              32,
              102,
              111,
              114,
              109,
              97,
              116,
              46,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              109,
              111,
              100,
              101,
              58,
              32,
              83,
              101,
              116,
              32,
              116,
              111,
              32,
              39,
              82,
              69,
              71,
              69,
              88,
              80,
              39,
              44,
              32,
              105,
              110,
              100,
              105,
              99,
              97,
              116,
              105,
              110,
              103,
              32,
              116,
              104,
              97,
              116,
              32,
              97,
              32,
              114,
              101,
              103,
              117,
              108,
              97,
              114,
              32,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              105,
              111,
              110,
              45,
              98,
              97,
              115,
              101,
              100,
              32,
              115,
              101,
              97,
              114,
              99,
              104,
              32,
              119,
              105,
              108,
              108,
              32,
              98,
              101,
              32,
              117,
              115,
              101,
              100,
              46,
              32,
              83,
              101,
              116,
              32,
              116,
              111,
              32,
              39,
              83,
              69,
              65,
              82,
              67,
              72,
              39,
              44,
              32,
              105,
              110,
              100,
              105,
              99,
              97,
              116,
              105,
              110,
              103,
              32,
              97,
              32,
              115,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              32,
              115,
              101,
              97,
              114,
              99,
              104,
              32,
              109,
              111,
              100,
              101,
              32,
              105,
              110,
              116,
              111,
              32,
              97,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              97,
              114,
              114,
              97,
              121,
              46,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              114,
              101,
              115,
              117,
              108,
              116,
              58,
              32,
              68,
              101,
              102,
              105,
              110,
              101,
              115,
              32,
              116,
              104,
              101,
              32,
              100,
              101,
              115,
              105,
              114,
              101,
              100,
              32,
              114,
              101,
              115,
              117,
              108,
              116,
              32,
              116,
              121,
              112,
              101,
              46,
              32,
              83,
              101,
              116,
              32,
              39,
              110,
              97,
              109,
              101,
              39,
              32,
              116,
              111,
              32,
              103,
              101,
              116,
              32,
              116,
              104,
              101,
              32,
              115,
              117,
              98,
              115,
              101,
              116,
              32,
              111,
              102,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              97,
              115,
              32,
              97,
              32,
              115,
              116,
              114,
              105,
              110,
              103,
              32,
              108,
              105,
              115,
              116,
              44,
              32,
              111,
              114,
              32,
              115,
              101,
              116,
              32,
              39,
              99,
              111,
              117,
              110,
              116,
              39,
              32,
              116,
              111,
              32,
              104,
              97,
              118,
              101,
              32,
              116,
              104,
              101,
              32,
              116,
              111,
              116,
              97,
              108,
              32,
              111,
              102,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              32,
              97,
              115,
              32,
              97,
              32,
              110,
              117,
              109,
              98,
              101,
              114,
              46,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              108,
              105,
              62,
              115,
              116,
              114,
              105,
              99,
              116,
              58,
              32,
              83,
              101,
              116,
              32,
              116,
              111,
              32,
              116,
              114,
              117,
              101,
              44,
              32,
              105,
              110,
              100,
              105,
              99,
              97,
              116,
              105,
              110,
              103,
              32,
              97,
              32,
              115,
              116,
              114,
              105,
              99,
              116,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              32,
              99,
              104,
              101,
              99,
              107,
              46,
              32,
              73,
              116,
              32,
              105,
              115,
              32,
              118,
              97,
              108,
              105,
              100,
              32,
              115,
              112,
              101,
              99,
              105,
              97,
              108,
              108,
              121,
              32,
              102,
              111,
              114,
              32,
              116,
              104,
              101,
              32,
              109,
              111,
              100,
              101,
              32,
              115,
              101,
              116,
              32,
              105,
              110,
              32,
              39,
              83,
              69,
              65,
              82,
              67,
              72,
              39,
              32,
              118,
              97,
              108,
              117,
              101,
              44,
              32,
              105,
              110,
              32,
              116,
              104,
              97,
              116,
              32,
              99,
              97,
              115,
              101,
              32,
              116,
              104,
              101,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              119,
              105,
              108,
              108,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              101,
              32,
              116,
              104,
              97,
              116,
              32,
              116,
              104,
              101,
              32,
              116,
              111,
              116,
              97,
              108,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              115,
              117,
              98,
              115,
              101,
              116,
              32,
              111,
              102,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              102,
              111,
              117,
              110,
              100,
              32,
              109,
              117,
              115,
              116,
              32,
              98,
              101,
              32,
              116,
              104,
              101,
              32,
              115,
              97,
              109,
              101,
              32,
              97,
              115,
              32,
              116,
              104,
              101,
              32,
              116,
              111,
              116,
              97,
              108,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              46,
              60,
              47,
              108,
              105,
              62,
              32,
              60,
              47,
              117,
              108,
              62,
              32,
              60,
              112,
              62,
              84,
              104,
              105,
              115,
              32,
              112,
              111,
              108,
              105,
              99,
              121,
              32,
              105,
              115,
              32,
              99,
              114,
              117,
              99,
              105,
              97,
              108,
              32,
              102,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              97,
              110,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              32,
              105,
              110,
              32,
              97,
              32,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              46,
              32,
              66,
              121,
              32,
              118,
              101,
              114,
              105,
              102,
              121,
              105,
              110,
              103,
              32,
              105,
              102,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              32,
              104,
              97,
              115,
              32,
              116,
              104,
              101,
              32,
              110,
              101,
              99,
              101,
              115,
              115,
              97,
              114,
              121,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              115,
              32,
              116,
              111,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              115,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              44,
              32,
              105,
              116,
              32,
              101,
              110,
              115,
              117,
              114,
              101,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              115,
              32,
              97,
              114,
              101,
              32,
              117,
              112,
              104,
              101,
              108,
              100,
              46,
              32,
              73,
              116,
              115,
              32,
              105,
              109,
              112,
              97,
              99,
              116,
              32,
              111,
              110,
              32,
              97,
              32,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              32,
              108,
              105,
              101,
              115,
              32,
              105,
              110,
              32,
              112,
              114,
              111,
              116,
              101,
              99,
              116,
              105,
              110,
              103,
              32,
              115,
              101,
              110,
              115,
              105,
              116,
              105,
              118,
              101,
              32,
              100,
              97,
              116,
              97,
              44,
              32,
              112,
              114,
              101,
              118,
              101,
              110,
              116,
              105,
              110,
              103,
              32,
              117,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              44,
              32,
              97,
              110,
              100,
              32,
              99,
              111,
              109,
              112,
              108,
              121,
              105,
              110,
              103,
              32,
              119,
              105,
              116,
              104,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              114,
              101,
              103,
              117,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              44,
              32,
              116,
              104,
              101,
              114,
              101,
              98,
              121,
              32,
              99,
              111,
              110,
              116,
              114,
              105,
              98,
              117,
              116,
              105,
              110,
              103,
              32,
              116,
              111,
              32,
              116,
              104,
              101,
              32,
              105,
              110,
              116,
              101,
              103,
              114,
              105,
              116,
              121,
              32,
              97,
              110,
              100,
              32,
              99,
              111,
              110,
              102,
              105,
              100,
              101,
              110,
              116,
              105,
              97,
              108,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              105,
              110,
              102,
              111,
              114,
              109,
              97,
              116,
              105,
              111,
              110,
              46,
              32,
              65,
              100,
              100,
              105,
              116,
              105,
              111,
              110,
              97,
              108,
              108,
              121,
              44,
              32,
              98,
              121,
              32,
              101,
              102,
              102,
              105,
              99,
              105,
              101,
              110,
              116,
              108,
              121,
              32,
              117,
              115,
              105,
              110,
              103,
              32,
              116,
              104,
              105,
              115,
              32,
              116,
              121,
              112,
              101,
              32,
              111,
              102,
              32,
              112,
              101,
              114,
              109,
              105,
              115,
              115,
              105,
              111,
              110,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              44,
              32,
              116,
              104,
              101,
              32,
              111,
              118,
              101,
              114,
              97,
              108,
              108,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              105,
              115,
              32,
              115,
              116,
              114,
              101,
              110,
              103,
              116,
              104,
              101,
              110,
              101,
              100,
              44,
              32,
              101,
              110,
              115,
              117,
              114,
              105,
              110,
              103,
              32,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              108,
              101,
              100,
              32,
              97,
              110,
              100,
              32,
              97,
              112,
              112,
              114,
              111,
              112,
              114,
              105,
              97,
              116,
              101,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              111,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              115,
              46,
              60,
              47,
              112,
              62,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              112,
              111,
              108,
              105,
              99,
              121,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              48,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              117,
              115,
              101,
              114,
              58,
              108,
              111,
              99,
              107,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              98,
              108,
              111,
              99,
              107,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              114,
              115,
              32,
              105,
              110,
              118,
              111,
              108,
              118,
              101,
              115,
              32,
              116,
              101,
              109,
              112,
              111,
              114,
              97,
              114,
              105,
              108,
              121,
              32,
              111,
              114,
              32,
              112,
              101,
              114,
              109,
              97,
              110,
              101,
              110,
              116,
              108,
              121,
              32,
              100,
              105,
              115,
              97,
              98,
              108,
              105,
              110,
              103,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              39,
              115,
              32,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              32,
              105,
              110,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              46,
              32,
              73,
              116,
              32,
              105,
              115,
              32,
              117,
              115,
              101,
              100,
              32,
              116,
              111,
              32,
              112,
              114,
              111,
              116,
              101,
              99,
              116,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              97,
              103,
              97,
              105,
              110,
              115,
              116,
              32,
              112,
              111,
              116,
              101,
              110,
              116,
              105,
              97,
              108,
              32,
              116,
              104,
              114,
              101,
              97,
              116,
              115,
              32,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              98,
              114,
              101,
              97,
              99,
              104,
              101,
              115,
              44,
              32,
              116,
              97,
              107,
              105,
              110,
              103,
              32,
              109,
              101,
              97,
              115,
              117,
              114,
              101,
              115,
              32,
              116,
              111,
              32,
              112,
              114,
              101,
              118,
              101,
              110,
              116,
              32,
              117,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              111,
              114,
              32,
              109,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              105,
              101,
              115,
              46,
              32,
              83,
              111,
              109,
              101,
              32,
              112,
              111,
              115,
              115,
              105,
              98,
              108,
              101,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              119,
              111,
              117,
              108,
              100,
              32,
              106,
              117,
              115,
              116,
              105,
              102,
              121,
              32,
              116,
              104,
              105,
              115,
              32,
              98,
              108,
              111,
              99,
              107,
              32,
              102,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              105,
              110,
              99,
              108,
              117,
              100,
              101,
              58,
              32,
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              97,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              44,
              32,
              86,
              105,
              111,
              108,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              44,
              32,
              77,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              44,
              32,
              84,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              101,
              109,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              32,
              111,
              114,
              32,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              32,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              116,
              99,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              48,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              105,
              116,
              111,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              117,
              115,
              101,
              114,
              58,
              108,
              111,
              99,
              107,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              98,
              108,
              111,
              99,
              107,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              114,
              115,
              32,
              105,
              110,
              118,
              111,
              108,
              118,
              101,
              115,
              32,
              116,
              101,
              109,
              112,
              111,
              114,
              97,
              114,
              105,
              108,
              121,
              32,
              111,
              114,
              32,
              112,
              101,
              114,
              109,
              97,
              110,
              101,
              110,
              116,
              108,
              121,
              32,
              100,
              105,
              115,
              97,
              98,
              108,
              105,
              110,
              103,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              39,
              115,
              32,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              32,
              105,
              110,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              46,
              32,
              73,
              116,
              32,
              105,
              115,
              32,
              117,
              115,
              101,
              100,
              32,
              116,
              111,
              32,
              112,
              114,
              111,
              116,
              101,
              99,
              116,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              97,
              103,
              97,
              105,
              110,
              115,
              116,
              32,
              112,
              111,
              116,
              101,
              110,
              116,
              105,
              97,
              108,
              32,
              116,
              104,
              114,
              101,
              97,
              116,
              115,
              32,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              98,
              114,
              101,
              97,
              99,
              104,
              101,
              115,
              44,
              32,
              116,
              97,
              107,
              105,
              110,
              103,
              32,
              109,
              101,
              97,
              115,
              117,
              114,
              101,
              115,
              32,
              116,
              111,
              32,
              112,
              114,
              101,
              118,
              101,
              110,
              116,
              32,
              117,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              111,
              114,
              32,
              109,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              105,
              101,
              115,
              46,
              32,
              83,
              111,
              109,
              101,
              32,
              112,
              111,
              115,
              115,
              105,
              98,
              108,
              101,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              119,
              111,
              117,
              108,
              100,
              32,
              106,
              117,
              115,
              116,
              105,
              102,
              121,
              32,
              116,
              104,
              105,
              115,
              32,
              98,
              108,
              111,
              99,
              107,
              32,
              102,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              105,
              110,
              99,
              108,
              117,
              100,
              101,
              58,
              32,
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              97,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              44,
              32,
              86,
              105,
              111,
              108,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              44,
              32,
              77,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              44,
              32,
              84,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              101,
              109,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              32,
              111,
              114,
              32,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              32,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              116,
              99,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              49,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              117,
              115,
              101,
              114,
              58,
              108,
              111,
              99,
              107,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              98,
              108,
              111,
              99,
              107,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              114,
              115,
              32,
              105,
              110,
              118,
              111,
              108,
              118,
              101,
              115,
              32,
              116,
              101,
              109,
              112,
              111,
              114,
              97,
              114,
              105,
              108,
              121,
              32,
              111,
              114,
              32,
              112,
              101,
              114,
              109,
              97,
              110,
              101,
              110,
              116,
              108,
              121,
              32,
              100,
              105,
              115,
              97,
              98,
              108,
              105,
              110,
              103,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              39,
              115,
              32,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              32,
              105,
              110,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              46,
              32,
              73,
              116,
              32,
              105,
              115,
              32,
              117,
              115,
              101,
              100,
              32,
              116,
              111,
              32,
              112,
              114,
              111,
              116,
              101,
              99,
              116,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              97,
              103,
              97,
              105,
              110,
              115,
              116,
              32,
              112,
              111,
              116,
              101,
              110,
              116,
              105,
              97,
              108,
              32,
              116,
              104,
              114,
              101,
              97,
              116,
              115,
              32,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              98,
              114,
              101,
              97,
              99,
              104,
              101,
              115,
              44,
              32,
              116,
              97,
              107,
              105,
              110,
              103,
              32,
              109,
              101,
              97,
              115,
              117,
              114,
              101,
              115,
              32,
              116,
              111,
              32,
              112,
              114,
              101,
              118,
              101,
              110,
              116,
              32,
              117,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              111,
              114,
              32,
              109,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              105,
              101,
              115,
              46,
              32,
              83,
              111,
              109,
              101,
              32,
              112,
              111,
              115,
              115,
              105,
              98,
              108,
              101,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              119,
              111,
              117,
              108,
              100,
              32,
              106,
              117,
              115,
              116,
              105,
              102,
              121,
              32,
              116,
              104,
              105,
              115,
              32,
              98,
              108,
              111,
              99,
              107,
              32,
              102,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              105,
              110,
              99,
              108,
              117,
              100,
              101,
              58,
              32,
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              97,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              44,
              32,
              86,
              105,
              111,
              108,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              44,
              32,
              77,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              44,
              32,
              84,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              101,
              109,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              32,
              111,
              114,
              32,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              32,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              116,
              99,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              49,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              50,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              50,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              50,
              56,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 200,
          "responseSize": 6798
        },
        "id": "0d7ff2ba-37bb-4b04-8e00-0a13bc301b06",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e0f1ccae-a051-4839-9009-8fc8bfba33c6",
          "length": 30,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "166c122b-c784-4999-9d60-31724a586ca6"
        },
        "item": {
          "id": "918f0280-fe8d-4d85-aaea-fe1e8103719a",
          "name": "[List :id]/v1/action/:id",
          "request": {
            "description": {
              "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action",
                "{{idAction}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "format",
                  "value": "full"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "867e5d0d-2958-4374-aa36-a3fffb8c957a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verifying Name is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('name');",
                  "    let currentName = jsonData.name;",
                  "    pm.expect(currentName).to.be.an('string');",
                  "    pm.expect(currentName.length > 1).eq(true);",
                  "    let expectedName = pm.collectionVariables.get(\"nameAction\");",
                  "    pm.expect(currentName).to.eql(expectedName);",
                  "});",
                  "",
                  "pm.test(\"Verifying Description is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('description');",
                  "    let currentDescription = jsonData.description;",
                  "    let expectedDescription = pm.collectionVariables.get(\"descriptionAction\");",
                  "    pm.expect(currentDescription).to.eql(expectedDescription);",
                  "});",
                  "",
                  "pm.test(\"Verifying Id is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    let currentID = jsonData.id;",
                  "    pm.expect(currentID).to.not.be.null;",
                  "    pm.expect(currentID).to.not.be.undefined;",
                  "    let expectedId = pm.collectionVariables.get(\"idAction\");",
                  "    pm.expect(currentID).to.eql(expectedId);",
                  "});",
                  "",
                  "pm.test(\"Verifying created_at is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('created_at');",
                  "    let currentCreatedAt = new Date(jsonData.created_at).toISOString().slice(0, 19) + 'Z';",
                  "    let iso8601Regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$/;",
                  "    pm.expect(currentCreatedAt).to.match(iso8601Regex);",
                  "    let expectedCreatedAt = pm.collectionVariables.get(\"createdAtAction\");",
                  "    expectedCreatedAt = new Date(expectedCreatedAt).toISOString().slice(0, 19) + 'Z';",
                  "    pm.expect(currentCreatedAt).to.eql(expectedCreatedAt);",
                  "});",
                  "",
                  "pm.test(\"Verifying updated_at is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('updated_at');",
                  "    let currentUpdatedAt = new Date(jsonData.updated_at).toISOString().slice(0, 19) + 'Z';",
                  "    let expectedUpdatedAt = pm.collectionVariables.get(\"updatedAtAction\");",
                  "    expectedUpdatedAt = new Date(expectedUpdatedAt).toISOString().slice(0, 19) + 'Z';",
                  "    pm.expect(currentUpdatedAt).to.eql(expectedUpdatedAt);",
                  "});",
                  "",
                  "pm.test(\"Verifying Status is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    let currentStatus = jsonData.status;",
                  "    let expectedStatus = parseInt(pm.collectionVariables.get(\"statusAction\"));",
                  "    if(currentStatus || currentStatus == 0){",
                  "        pm.expect(currentStatus).to.eql(expectedStatus);",
                  "    }",
                  "    else{        ",
                  "        pm.expect(currentStatus).to.eql(1);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Verifying Group is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('group');",
                  "    let currentGroup = jsonData.group;",
                  "    let expectedGroup = pm.collectionVariables.get(\"groupAction\");",
                  "    if(expectedGroup){",
                  "        pm.expect(currentGroup).to.eql(expectedGroup.toString());",
                  "    }",
                  "});",
                  ""
                ],
                "_lastExecutionId": "c0b9eae2-3d5a-4f5f-8b6d-ee050fd51a3c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d791ef86-3ef5-4634-bdae-0effa12e3a57",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9753d9b4-9bfb-4c63-a16d-967f1147c877"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "134943"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "format",
                "value": "full"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDUyNDM0NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNSwiZXhwIjoxNzI0NTE2MzA1fQ.0D1E7h3_V3lXsc7v1tWZc3ApVNsqYTGVKbQFIkiiTB8",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9115e53e-fe01-4dfd-92bf-04834fd4b673",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDUyNDM0NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNSwiZXhwIjoxNzI0NTE2MzA1fQ.0D1E7h3_V3lXsc7v1tWZc3ApVNsqYTGVKbQFIkiiTB8",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3e9e0ceb-8988-467e-bb7d-2b0b9a0d9cd0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:25 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2243"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"8c3-Ivyl1YFzqXQ1KkqcBaY6ySLr9do\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              49,
              55,
              49,
              51,
              49,
              56,
              48,
              55,
              56,
              52,
              56,
              57,
              52,
              44,
              34,
              101,
              110,
              116,
              101,
              114,
              112,
              114,
              105,
              115,
              101,
              73,
              100,
              34,
              58,
              49,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              56,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              53,
              84,
              49,
              49,
              58,
              51,
              51,
              58,
              48,
              52,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              53,
              84,
              49,
              49,
              58,
              51,
              50,
              58,
              53,
              56,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              48,
              53,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              48,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              98,
              114,
              111,
              119,
              115,
              101,
              114,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              102,
              97,
              109,
              105,
              108,
              121,
              34,
              58,
              34,
              79,
              116,
              104,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              48,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              85,
              85,
              73,
              68,
              69,
              52,
              57,
              50,
              56,
              51,
              69,
              68,
              45,
              49,
              50,
              69,
              65,
              45,
              68,
              54,
              52,
              68,
              45,
              54,
              68,
              68,
              69,
              45,
              68,
              68,
              67,
              50,
              54,
              66,
              51,
              48,
              70,
              57,
              52,
              56,
              95,
              65,
              78,
              84,
              79,
              78,
              73,
              79,
              46,
              77,
              69,
              77,
              66,
              82,
              73,
              68,
              69,
              83,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              104,
              114,
              111,
              109,
              101,
              32,
              45,
              32,
              49,
              49,
              48,
              46,
              48,
              46,
              48,
              46,
              48,
              32,
              47,
              32,
              87,
              105,
              110,
              100,
              111,
              119,
              115,
              32,
              45,
              32,
              119,
              105,
              110,
              100,
              111,
              119,
              115,
              45,
              49,
              48,
              34,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              50,
              46,
              48,
              34,
              125,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              125,
              125,
              125,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              34,
              49,
              55,
              49,
              51,
              49,
              56,
              48,
              55,
              56,
              52,
              55,
              54,
              57,
              57,
              49,
              34,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              66,
              65,
              83,
              73,
              67,
              34,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              91,
              52,
              93,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              48,
              53,
              44,
              34,
              117,
              115,
              101,
              114,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              111,
              110,
              121,
              64,
              115,
              105,
              116,
              97,
              46,
              97,
              101,
              114,
              111,
              34,
              125,
              44,
              34,
              115,
              99,
              104,
              101,
              109,
              97,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              101,
              110,
              116,
              101,
              114,
              112,
              114,
              105,
              115,
              101,
              73,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              125,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              98,
              114,
              111,
              119,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              102,
              97,
              109,
              105,
              108,
              121,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              125,
              125,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              125,
              125,
              125,
              125,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              114,
              114,
              97,
              121,
              34,
              44,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              93,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              125,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              117,
              115,
              101,
              114,
              58,
              108,
              111,
              99,
              107,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              98,
              108,
              111,
              99,
              107,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              114,
              115,
              32,
              105,
              110,
              118,
              111,
              108,
              118,
              101,
              115,
              32,
              116,
              101,
              109,
              112,
              111,
              114,
              97,
              114,
              105,
              108,
              121,
              32,
              111,
              114,
              32,
              112,
              101,
              114,
              109,
              97,
              110,
              101,
              110,
              116,
              108,
              121,
              32,
              100,
              105,
              115,
              97,
              98,
              108,
              105,
              110,
              103,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              39,
              115,
              32,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              32,
              105,
              110,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              46,
              32,
              73,
              116,
              32,
              105,
              115,
              32,
              117,
              115,
              101,
              100,
              32,
              116,
              111,
              32,
              112,
              114,
              111,
              116,
              101,
              99,
              116,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              97,
              103,
              97,
              105,
              110,
              115,
              116,
              32,
              112,
              111,
              116,
              101,
              110,
              116,
              105,
              97,
              108,
              32,
              116,
              104,
              114,
              101,
              97,
              116,
              115,
              32,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              98,
              114,
              101,
              97,
              99,
              104,
              101,
              115,
              44,
              32,
              116,
              97,
              107,
              105,
              110,
              103,
              32,
              109,
              101,
              97,
              115,
              117,
              114,
              101,
              115,
              32,
              116,
              111,
              32,
              112,
              114,
              101,
              118,
              101,
              110,
              116,
              32,
              117,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              111,
              114,
              32,
              109,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              105,
              101,
              115,
              46,
              32,
              83,
              111,
              109,
              101,
              32,
              112,
              111,
              115,
              115,
              105,
              98,
              108,
              101,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              119,
              111,
              117,
              108,
              100,
              32,
              106,
              117,
              115,
              116,
              105,
              102,
              121,
              32,
              116,
              104,
              105,
              115,
              32,
              98,
              108,
              111,
              99,
              107,
              32,
              102,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              105,
              110,
              99,
              108,
              117,
              100,
              101,
              58,
              32,
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              97,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              44,
              32,
              86,
              105,
              111,
              108,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              44,
              32,
              77,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              44,
              32,
              84,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              101,
              109,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              32,
              111,
              114,
              32,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              32,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              116,
              99,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              57,
              84,
              48,
              54,
              58,
              49,
              57,
              58,
              53,
              48,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              56,
              84,
              49,
              50,
              58,
              49,
              57,
              58,
              53,
              50,
              46,
              48,
              48,
              48,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 172,
          "responseSize": 2243
        },
        "id": "918f0280-fe8d-4d85-aaea-fe1e8103719a",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verifying Name is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Description is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Id is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying created_at is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying updated_at is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Status is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Group is the created one",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e0f1ccae-a051-4839-9009-8fc8bfba33c6",
          "length": 30,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "166c122b-c784-4999-9d60-31724a586ca6"
        },
        "item": {
          "id": "918f0280-fe8d-4d85-aaea-fe1e8103719a",
          "name": "[List :id]/v1/action/:id",
          "request": {
            "description": {
              "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action",
                "{{idAction}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "format",
                  "value": "full"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "867e5d0d-2958-4374-aa36-a3fffb8c957a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verifying Name is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('name');",
                  "    let currentName = jsonData.name;",
                  "    pm.expect(currentName).to.be.an('string');",
                  "    pm.expect(currentName.length > 1).eq(true);",
                  "    let expectedName = pm.collectionVariables.get(\"nameAction\");",
                  "    pm.expect(currentName).to.eql(expectedName);",
                  "});",
                  "",
                  "pm.test(\"Verifying Description is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('description');",
                  "    let currentDescription = jsonData.description;",
                  "    let expectedDescription = pm.collectionVariables.get(\"descriptionAction\");",
                  "    pm.expect(currentDescription).to.eql(expectedDescription);",
                  "});",
                  "",
                  "pm.test(\"Verifying Id is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    let currentID = jsonData.id;",
                  "    pm.expect(currentID).to.not.be.null;",
                  "    pm.expect(currentID).to.not.be.undefined;",
                  "    let expectedId = pm.collectionVariables.get(\"idAction\");",
                  "    pm.expect(currentID).to.eql(expectedId);",
                  "});",
                  "",
                  "pm.test(\"Verifying created_at is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('created_at');",
                  "    let currentCreatedAt = new Date(jsonData.created_at).toISOString().slice(0, 19) + 'Z';",
                  "    let iso8601Regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$/;",
                  "    pm.expect(currentCreatedAt).to.match(iso8601Regex);",
                  "    let expectedCreatedAt = pm.collectionVariables.get(\"createdAtAction\");",
                  "    expectedCreatedAt = new Date(expectedCreatedAt).toISOString().slice(0, 19) + 'Z';",
                  "    pm.expect(currentCreatedAt).to.eql(expectedCreatedAt);",
                  "});",
                  "",
                  "pm.test(\"Verifying updated_at is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('updated_at');",
                  "    let currentUpdatedAt = new Date(jsonData.updated_at).toISOString().slice(0, 19) + 'Z';",
                  "    let expectedUpdatedAt = pm.collectionVariables.get(\"updatedAtAction\");",
                  "    expectedUpdatedAt = new Date(expectedUpdatedAt).toISOString().slice(0, 19) + 'Z';",
                  "    pm.expect(currentUpdatedAt).to.eql(expectedUpdatedAt);",
                  "});",
                  "",
                  "pm.test(\"Verifying Status is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    let currentStatus = jsonData.status;",
                  "    let expectedStatus = parseInt(pm.collectionVariables.get(\"statusAction\"));",
                  "    if(currentStatus || currentStatus == 0){",
                  "        pm.expect(currentStatus).to.eql(expectedStatus);",
                  "    }",
                  "    else{        ",
                  "        pm.expect(currentStatus).to.eql(1);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Verifying Group is the created one\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('group');",
                  "    let currentGroup = jsonData.group;",
                  "    let expectedGroup = pm.collectionVariables.get(\"groupAction\");",
                  "    if(expectedGroup){",
                  "        pm.expect(currentGroup).to.eql(expectedGroup.toString());",
                  "    }",
                  "});",
                  ""
                ],
                "_lastExecutionId": "c0b9eae2-3d5a-4f5f-8b6d-ee050fd51a3c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d791ef86-3ef5-4634-bdae-0effa12e3a57",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9753d9b4-9bfb-4c63-a16d-967f1147c877"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "134943"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "format",
                "value": "full"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDUyNDM0NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNSwiZXhwIjoxNzI0NTE2MzA1fQ.0D1E7h3_V3lXsc7v1tWZc3ApVNsqYTGVKbQFIkiiTB8",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9115e53e-fe01-4dfd-92bf-04834fd4b673",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDUyNDM0NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNSwiZXhwIjoxNzI0NTE2MzA1fQ.0D1E7h3_V3lXsc7v1tWZc3ApVNsqYTGVKbQFIkiiTB8",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "3e9e0ceb-8988-467e-bb7d-2b0b9a0d9cd0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:25 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2243"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"8c3-Ivyl1YFzqXQ1KkqcBaY6ySLr9do\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              49,
              55,
              49,
              51,
              49,
              56,
              48,
              55,
              56,
              52,
              56,
              57,
              52,
              44,
              34,
              101,
              110,
              116,
              101,
              114,
              112,
              114,
              105,
              115,
              101,
              73,
              100,
              34,
              58,
              49,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              56,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              53,
              84,
              49,
              49,
              58,
              51,
              51,
              58,
              48,
              52,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              53,
              84,
              49,
              49,
              58,
              51,
              50,
              58,
              53,
              56,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              48,
              53,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              48,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              98,
              114,
              111,
              119,
              115,
              101,
              114,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              102,
              97,
              109,
              105,
              108,
              121,
              34,
              58,
              34,
              79,
              116,
              104,
              101,
              114,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              48,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              85,
              85,
              73,
              68,
              69,
              52,
              57,
              50,
              56,
              51,
              69,
              68,
              45,
              49,
              50,
              69,
              65,
              45,
              68,
              54,
              52,
              68,
              45,
              54,
              68,
              68,
              69,
              45,
              68,
              68,
              67,
              50,
              54,
              66,
              51,
              48,
              70,
              57,
              52,
              56,
              95,
              65,
              78,
              84,
              79,
              78,
              73,
              79,
              46,
              77,
              69,
              77,
              66,
              82,
              73,
              68,
              69,
              83,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              67,
              104,
              114,
              111,
              109,
              101,
              32,
              45,
              32,
              49,
              49,
              48,
              46,
              48,
              46,
              48,
              46,
              48,
              32,
              47,
              32,
              87,
              105,
              110,
              100,
              111,
              119,
              115,
              32,
              45,
              32,
              119,
              105,
              110,
              100,
              111,
              119,
              115,
              45,
              49,
              48,
              34,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              50,
              46,
              48,
              34,
              125,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              125,
              125,
              125,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              34,
              49,
              55,
              49,
              51,
              49,
              56,
              48,
              55,
              56,
              52,
              55,
              54,
              57,
              57,
              49,
              34,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              66,
              65,
              83,
              73,
              67,
              34,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              91,
              52,
              93,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              48,
              53,
              44,
              34,
              117,
              115,
              101,
              114,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              111,
              110,
              121,
              64,
              115,
              105,
              116,
              97,
              46,
              97,
              101,
              114,
              111,
              34,
              125,
              44,
              34,
              115,
              99,
              104,
              101,
              109,
              97,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              101,
              110,
              116,
              101,
              114,
              112,
              114,
              105,
              115,
              101,
              73,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              125,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              98,
              114,
              111,
              119,
              115,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              102,
              97,
              109,
              105,
              108,
              121,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              125,
              125,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              125,
              125,
              125,
              125,
              125,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              114,
              114,
              97,
              121,
              34,
              44,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              93,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              125,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              111,
              110,
              46,
              117,
              115,
              101,
              114,
              58,
              108,
              111,
              99,
              107,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              111,
              102,
              32,
              98,
              108,
              111,
              99,
              107,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              114,
              115,
              32,
              105,
              110,
              118,
              111,
              108,
              118,
              101,
              115,
              32,
              116,
              101,
              109,
              112,
              111,
              114,
              97,
              114,
              105,
              108,
              121,
              32,
              111,
              114,
              32,
              112,
              101,
              114,
              109,
              97,
              110,
              101,
              110,
              116,
              108,
              121,
              32,
              100,
              105,
              115,
              97,
              98,
              108,
              105,
              110,
              103,
              32,
              97,
              32,
              117,
              115,
              101,
              114,
              39,
              115,
              32,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              32,
              105,
              110,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              46,
              32,
              73,
              116,
              32,
              105,
              115,
              32,
              117,
              115,
              101,
              100,
              32,
              116,
              111,
              32,
              112,
              114,
              111,
              116,
              101,
              99,
              116,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              111,
              102,
              32,
              97,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              32,
              97,
              103,
              97,
              105,
              110,
              115,
              116,
              32,
              112,
              111,
              116,
              101,
              110,
              116,
              105,
              97,
              108,
              32,
              116,
              104,
              114,
              101,
              97,
              116,
              115,
              32,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              98,
              114,
              101,
              97,
              99,
              104,
              101,
              115,
              44,
              32,
              116,
              97,
              107,
              105,
              110,
              103,
              32,
              109,
              101,
              97,
              115,
              117,
              114,
              101,
              115,
              32,
              116,
              111,
              32,
              112,
              114,
              101,
              118,
              101,
              110,
              116,
              32,
              117,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              111,
              114,
              32,
              109,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              105,
              101,
              115,
              46,
              32,
              83,
              111,
              109,
              101,
              32,
              112,
              111,
              115,
              115,
              105,
              98,
              108,
              101,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              116,
              104,
              97,
              116,
              32,
              119,
              111,
              117,
              108,
              100,
              32,
              106,
              117,
              115,
              116,
              105,
              102,
              121,
              32,
              116,
              104,
              105,
              115,
              32,
              98,
              108,
              111,
              99,
              107,
              32,
              102,
              111,
              114,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              114,
              101,
              97,
              115,
              111,
              110,
              115,
              32,
              105,
              110,
              99,
              108,
              117,
              100,
              101,
              58,
              32,
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              32,
              97,
              99,
              99,
              101,
              115,
              115,
              32,
              97,
              116,
              116,
              101,
              109,
              112,
              116,
              115,
              44,
              32,
              86,
              105,
              111,
              108,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              115,
              101,
              99,
              117,
              114,
              105,
              116,
              121,
              32,
              112,
              111,
              108,
              105,
              99,
              105,
              101,
              44,
              32,
              77,
              97,
              108,
              105,
              99,
              105,
              111,
              117,
              115,
              32,
              97,
              99,
              116,
              105,
              118,
              105,
              116,
              121,
              44,
              32,
              84,
              101,
              114,
              109,
              105,
              110,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              101,
              109,
              112,
              108,
              111,
              121,
              109,
              101,
              110,
              116,
              32,
              111,
              114,
              32,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              32,
              111,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              44,
              32,
              101,
              116,
              99,
              46,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              57,
              84,
              48,
              54,
              58,
              49,
              57,
              58,
              53,
              48,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              56,
              84,
              49,
              50,
              58,
              49,
              57,
              58,
              53,
              50,
              46,
              48,
              48,
              48,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 172,
          "responseSize": 2243
        },
        "id": "918f0280-fe8d-4d85-aaea-fe1e8103719a",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verifying Name is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Description is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Id is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying created_at is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying updated_at is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Status is the created one",
            "skipped": false
          },
          {
            "assertion": "Verifying Group is the created one",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d9cbd276-1571-4927-ae46-11f561b4dc3c",
          "length": 30,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b66cb3fa-89c3-4082-9474-a0cbb87d781b"
        },
        "item": {
          "id": "de96f4b8-ebc2-4eba-b801-0d30bf9c0913",
          "name": "[Update :id]/v1/action/:id",
          "request": {
            "description": {
              "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action",
                "{{idAction}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "format",
                  "value": "full"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "\n{\n  \"name\": \"update put:id\",\n  \"description\": \"The authentication process fails\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 1,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-07-25 16:19:52\",\n  \"group\": \"user\"\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "49802296-17cd-4c27-91a6-ccc7c099c7af",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Successful PUT request\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"updated_at was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newUpdatedAtS = jsonData.updated_at;",
                  "    let newUpdatedAt = new Date(newUpdatedAtS).getTime();",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let updatedAtS = requestBodyJson?.updated_at;",
                  "    if (updatedAtS) {",
                  "        if (!updatedAtS.endsWith('Z') && updatedAtS.indexOf('T') === -1) {",
                  "            updatedAtS = updatedAtS.replace(' ', 'T') + 'Z';",
                  "        }",
                  "        let updatedAt = new Date(updatedAtS).getTime();",
                  "        pm.expect(updatedAt).to.eql(newUpdatedAt);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"created_at was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newCreatedAtS = jsonData.created_at;",
                  "    let newCreatedAt = new Date(newCreatedAtS).getTime();",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let createdAtS = requestBodyJson?.created_at;",
                  "    if (createdAtS) {",
                  "        if (!createdAtS.endsWith('Z') && createdAtS.indexOf('T') === -1) {",
                  "            createdAtS = createdAtS.replace(' ', 'T') + 'Z';",
                  "        }",
                  "        let createdAt = new Date(createdAtS).getTime();",
                  "        pm.expect(createdAt).to.eql(newCreatedAt);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Name was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newName = jsonData.name;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestName = requestBodyJson?.name;",
                  "    if(requestName){",
                  "    pm.expect(newName).to.be.eql(requestName);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Description was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newDescription = jsonData.description;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestDescription = requestBodyJson?.description;",
                  "    if(requestDescription){",
                  "    pm.expect(newDescription).to.be.eql(requestDescription);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Group was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newGroup = jsonData.group;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestGroup = requestBodyJson?.group;",
                  "    if(requestGroup){",
                  "    pm.expect(newGroup).to.be.eql(requestGroup);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Status was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newStatus = jsonData.status;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestStatus = requestBodyJson?.status;",
                  "    if(requestStatus){",
                  "    pm.expect(newStatus).to.be.eql(requestStatus);",
                  "    }",
                  "});",
                  ""
                ],
                "_lastExecutionId": "f76e6ed6-db6f-49e4-991d-9c5055ef152a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "9d99fca8-ea6d-4715-9001-782d1be3b1f5",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPutSimple = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPutSimpleAction\", requestBodyPutSimple);\r",
                  ""
                ],
                "_lastExecutionId": "bc8ca81c-aebf-4904-9184-1537d57d4c39"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "134943"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "format",
                "value": "full"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDU4MzU2NSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNSwiZXhwIjoxNzI0NTE2MzA1fQ.KSxDP9CnSweodCXS6u7D3p3vDAi7nfjZcoLlMh-4lCs",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "93ce7baf-829e-4fc6-b50e-fa856363d672",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "3300",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "\n{\n  \"name\": \"update put:id\",\n  \"description\": \"The authentication process fails\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 1,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-07-25 16:19:52\",\n  \"group\": \"user\"\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDU4MzU2NSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNSwiZXhwIjoxNzI0NTE2MzA1fQ.KSxDP9CnSweodCXS6u7D3p3vDAi7nfjZcoLlMh-4lCs",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7979f312-d57a-4f5c-9649-4d80c5c14ff0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:26 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2789"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"ae5-XDbPe0CV6OOGEkbaacKzXLOfCrA\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              34,
              58,
              123,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              66,
              65,
              83,
              73,
              67,
              34,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              34,
              49,
              55,
              48,
              56,
              51,
              52,
              49,
              52,
              50,
              51,
              51,
              50,
              54,
              50,
              51,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              49,
              64,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              123,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              58,
              91,
              51,
              93,
              125,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              115,
              104,
              111,
              114,
              116,
              34,
              58,
              34,
              76,
              79,
              71,
              73,
              78,
              95,
              78,
              79,
              79,
              75,
              34,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              104,
              97,
              115,
              104,
              34,
              58,
              34,
              49,
              56,
              101,
              50,
              51,
              97,
              102,
              52,
              97,
              50,
              55,
              98,
              48,
              101,
              48,
              49,
              56,
              50,
              102,
              101,
              100,
              53,
              99,
              98,
              100,
              55,
              50,
              56,
              54,
              98,
              101,
              49,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              101,
              87,
              65,
              83,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              46,
              54,
              46,
              49,
              45,
              49,
              50,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              51,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              85,
              85,
              85,
              85,
              45,
              65,
              65,
              65,
              65,
              45,
              73,
              73,
              73,
              73,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              105,
              80,
              97,
              100,
              32,
              80,
              114,
              111,
              32,
              50,
              48,
              50,
              51,
              32,
              49,
              48,
              46,
              53,
              105,
              110,
              99,
              104,
              32,
              40,
              105,
              80,
              97,
              100,
              79,
              83,
              32,
              49,
              54,
              46,
              54,
              41,
              34,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              105,
              80,
              97,
              100,
              79,
              83,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              54,
              46,
              54,
              34,
              125,
              125,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              52,
              48,
              48,
              48,
              34,
              44,
              34,
              105,
              112,
              34,
              58,
              34,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              34,
              44,
              34,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              48,
              48,
              48,
              34,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              112,
              34,
              58,
              34,
              58,
              58,
              49,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              34,
              44,
              34,
              105,
              112,
              79,
              114,
              105,
              103,
              105,
              110,
              97,
              108,
              34,
              58,
              34,
              58,
              58,
              49,
              34,
              125,
              125,
              125,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              50,
              45,
              49,
              50,
              84,
              49,
              53,
              58,
              48,
              53,
              58,
              50,
              55,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              50,
              45,
              48,
              54,
              84,
              49,
              55,
              58,
              52,
              48,
              58,
              50,
              52,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              49,
              56,
              55,
              55,
              50,
              49,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              56,
              52,
              56,
              53,
              125,
              125,
              44,
              34,
              115,
              99,
              104,
              101,
              109,
              97,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              114,
              114,
              97,
              121,
              34,
              44,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              93,
              125,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              115,
              104,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              115,
              104,
              111,
              114,
              116,
              34,
              93,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              104,
              97,
              115,
              104,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              44,
              34,
              105,
              100,
              34,
              93,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              93,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              111,
              115,
              34,
              93,
              125,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              93,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              110,
              117,
              108,
              108,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              93,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              112,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              104,
              111,
              115,
              116,
              34,
              44,
              34,
              105,
              112,
              34,
              44,
              34,
              112,
              111,
              114,
              116,
              34,
              93,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              112,
              79,
              114,
              105,
              103,
              105,
              110,
              97,
              108,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              105,
              112,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              105,
              112,
              79,
              114,
              105,
              103,
              105,
              110,
              97,
              108,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              104,
              97,
              115,
              104,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              93,
              125,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              93,
              125,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              112,
              117,
              116,
              58,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              102,
              97,
              105,
              108,
              115,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              54,
              58,
              49,
              57,
              58,
              53,
              50,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              56,
              84,
              49,
              50,
              58,
              49,
              57,
              58,
              53,
              50,
              46,
              48,
              48,
              48,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 154,
          "responseSize": 2789
        },
        "id": "de96f4b8-ebc2-4eba-b801-0d30bf9c0913",
        "assertions": [
          {
            "assertion": "Successful PUT request",
            "skipped": false
          },
          {
            "assertion": "updated_at was updated correctly",
            "skipped": false
          },
          {
            "assertion": "created_at was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Name was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Description was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Group was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Status was updated correctly",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d9cbd276-1571-4927-ae46-11f561b4dc3c",
          "length": 30,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b66cb3fa-89c3-4082-9474-a0cbb87d781b"
        },
        "item": {
          "id": "de96f4b8-ebc2-4eba-b801-0d30bf9c0913",
          "name": "[Update :id]/v1/action/:id",
          "request": {
            "description": {
              "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action",
                "{{idAction}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "format",
                  "value": "full"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "\n{\n  \"name\": \"update put:id\",\n  \"description\": \"The authentication process fails\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 1,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-07-25 16:19:52\",\n  \"group\": \"user\"\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "49802296-17cd-4c27-91a6-ccc7c099c7af",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Successful PUT request\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"updated_at was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newUpdatedAtS = jsonData.updated_at;",
                  "    let newUpdatedAt = new Date(newUpdatedAtS).getTime();",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let updatedAtS = requestBodyJson?.updated_at;",
                  "    if (updatedAtS) {",
                  "        if (!updatedAtS.endsWith('Z') && updatedAtS.indexOf('T') === -1) {",
                  "            updatedAtS = updatedAtS.replace(' ', 'T') + 'Z';",
                  "        }",
                  "        let updatedAt = new Date(updatedAtS).getTime();",
                  "        pm.expect(updatedAt).to.eql(newUpdatedAt);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"created_at was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newCreatedAtS = jsonData.created_at;",
                  "    let newCreatedAt = new Date(newCreatedAtS).getTime();",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let createdAtS = requestBodyJson?.created_at;",
                  "    if (createdAtS) {",
                  "        if (!createdAtS.endsWith('Z') && createdAtS.indexOf('T') === -1) {",
                  "            createdAtS = createdAtS.replace(' ', 'T') + 'Z';",
                  "        }",
                  "        let createdAt = new Date(createdAtS).getTime();",
                  "        pm.expect(createdAt).to.eql(newCreatedAt);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Name was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newName = jsonData.name;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestName = requestBodyJson?.name;",
                  "    if(requestName){",
                  "    pm.expect(newName).to.be.eql(requestName);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Description was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newDescription = jsonData.description;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestDescription = requestBodyJson?.description;",
                  "    if(requestDescription){",
                  "    pm.expect(newDescription).to.be.eql(requestDescription);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Group was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newGroup = jsonData.group;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestGroup = requestBodyJson?.group;",
                  "    if(requestGroup){",
                  "    pm.expect(newGroup).to.be.eql(requestGroup);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Status was updated correctly\", function () {",
                  "    let jsonData = pm.response.json();",
                  "    let newStatus = jsonData.status;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutSimpleAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let requestStatus = requestBodyJson?.status;",
                  "    if(requestStatus){",
                  "    pm.expect(newStatus).to.be.eql(requestStatus);",
                  "    }",
                  "});",
                  ""
                ],
                "_lastExecutionId": "f76e6ed6-db6f-49e4-991d-9c5055ef152a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "9d99fca8-ea6d-4715-9001-782d1be3b1f5",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPutSimple = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPutSimpleAction\", requestBodyPutSimple);\r",
                  ""
                ],
                "_lastExecutionId": "bc8ca81c-aebf-4904-9184-1537d57d4c39"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "134943"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "format",
                "value": "full"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDU4MzU2NSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNSwiZXhwIjoxNzI0NTE2MzA1fQ.KSxDP9CnSweodCXS6u7D3p3vDAi7nfjZcoLlMh-4lCs",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "93ce7baf-829e-4fc6-b50e-fa856363d672",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "3300",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "\n{\n  \"name\": \"update put:id\",\n  \"description\": \"The authentication process fails\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 1,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-07-25 16:19:52\",\n  \"group\": \"user\"\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDU4MzU2NSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNSwiZXhwIjoxNzI0NTE2MzA1fQ.KSxDP9CnSweodCXS6u7D3p3vDAi7nfjZcoLlMh-4lCs",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "7979f312-d57a-4f5c-9649-4d80c5c14ff0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:26 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2789"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"ae5-XDbPe0CV6OOGEkbaacKzXLOfCrA\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              34,
              58,
              123,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              66,
              65,
              83,
              73,
              67,
              34,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              34,
              49,
              55,
              48,
              56,
              51,
              52,
              49,
              52,
              50,
              51,
              51,
              50,
              54,
              50,
              51,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              49,
              64,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              123,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              58,
              91,
              51,
              93,
              125,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              115,
              104,
              111,
              114,
              116,
              34,
              58,
              34,
              76,
              79,
              71,
              73,
              78,
              95,
              78,
              79,
              79,
              75,
              34,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              104,
              97,
              115,
              104,
              34,
              58,
              34,
              49,
              56,
              101,
              50,
              51,
              97,
              102,
              52,
              97,
              50,
              55,
              98,
              48,
              101,
              48,
              49,
              56,
              50,
              102,
              101,
              100,
              53,
              99,
              98,
              100,
              55,
              50,
              56,
              54,
              98,
              101,
              49,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              101,
              87,
              65,
              83,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              51,
              46,
              54,
              46,
              49,
              45,
              49,
              50,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              51,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              85,
              85,
              85,
              85,
              45,
              65,
              65,
              65,
              65,
              45,
              73,
              73,
              73,
              73,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              105,
              80,
              97,
              100,
              32,
              80,
              114,
              111,
              32,
              50,
              48,
              50,
              51,
              32,
              49,
              48,
              46,
              53,
              105,
              110,
              99,
              104,
              32,
              40,
              105,
              80,
              97,
              100,
              79,
              83,
              32,
              49,
              54,
              46,
              54,
              41,
              34,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              105,
              80,
              97,
              100,
              79,
              83,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              54,
              46,
              54,
              34,
              125,
              125,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              52,
              48,
              48,
              48,
              34,
              44,
              34,
              105,
              112,
              34,
              58,
              34,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              34,
              44,
              34,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              48,
              48,
              48,
              34,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              105,
              112,
              34,
              58,
              34,
              58,
              58,
              49,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              34,
              44,
              34,
              105,
              112,
              79,
              114,
              105,
              103,
              105,
              110,
              97,
              108,
              34,
              58,
              34,
              58,
              58,
              49,
              34,
              125,
              125,
              125,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              50,
              45,
              49,
              50,
              84,
              49,
              53,
              58,
              48,
              53,
              58,
              50,
              55,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              50,
              45,
              48,
              54,
              84,
              49,
              55,
              58,
              52,
              48,
              58,
              50,
              52,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              49,
              56,
              55,
              55,
              50,
              49,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              56,
              52,
              56,
              53,
              125,
              125,
              44,
              34,
              115,
              99,
              104,
              101,
              109,
              97,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              114,
              114,
              97,
              121,
              34,
              44,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              93,
              125,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              115,
              104,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              115,
              104,
              111,
              114,
              116,
              34,
              93,
              125,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              104,
              97,
              115,
              104,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              44,
              34,
              105,
              100,
              34,
              93,
              125,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              93,
              125,
              44,
              34,
              111,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              34,
              44,
              34,
              100,
              101,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              111,
              115,
              34,
              93,
              125,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              93,
              125,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              110,
              117,
              108,
              108,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              99,
              111,
              117,
              110,
              116,
              114,
              121,
              34,
              93,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              112,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              104,
              111,
              115,
              116,
              34,
              44,
              34,
              105,
              112,
              34,
              44,
              34,
              112,
              111,
              114,
              116,
              34,
              93,
              125,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              105,
              112,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              105,
              112,
              79,
              114,
              105,
              103,
              105,
              110,
              97,
              108,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              105,
              112,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              105,
              112,
              79,
              114,
              105,
              103,
              105,
              110,
              97,
              108,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              117,
              115,
              101,
              114,
              97,
              103,
              101,
              110,
              116,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              72,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              44,
              34,
              103,
              101,
              111,
              105,
              112,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              101,
              114,
              34,
              44,
              34,
              99,
              108,
              105,
              101,
              110,
              116,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              104,
              97,
              115,
              104,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              111,
              110,
              101,
              110,
              116,
              115,
              34,
              93,
              125,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              105,
              110,
              116,
              101,
              103,
              101,
              114,
              34,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              99,
              111,
              117,
              110,
              116,
              34,
              44,
              34,
              107,
              111,
              95,
              108,
              97,
              115,
              116,
              34,
              44,
              34,
              107,
              111,
              95,
              115,
              116,
              97,
              114,
              116,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              44,
              34,
              107,
              111,
              95,
              100,
              105,
              102,
              102,
              34,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              34,
              58,
              91,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              44,
              34,
              102,
              108,
              111,
              119,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              44,
              34,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              115,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              44,
              34,
              102,
              105,
              110,
              103,
              101,
              114,
              112,
              114,
              105,
              110,
              116,
              34,
              44,
              34,
              102,
              97,
              105,
              108,
              117,
              114,
              101,
              34,
              93,
              125,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              112,
              117,
              116,
              58,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              102,
              97,
              105,
              108,
              115,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              55,
              45,
              50,
              53,
              84,
              49,
              54,
              58,
              49,
              57,
              58,
              53,
              50,
              46,
              48,
              48,
              48,
              90,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              52,
              45,
              49,
              56,
              84,
              49,
              50,
              58,
              49,
              57,
              58,
              53,
              50,
              46,
              48,
              48,
              48,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 154,
          "responseSize": 2789
        },
        "id": "de96f4b8-ebc2-4eba-b801-0d30bf9c0913",
        "assertions": [
          {
            "assertion": "Successful PUT request",
            "skipped": false
          },
          {
            "assertion": "updated_at was updated correctly",
            "skipped": false
          },
          {
            "assertion": "created_at was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Name was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Description was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Group was updated correctly",
            "skipped": false
          },
          {
            "assertion": "Status was updated correctly",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4c2ce43b-fde1-4375-99f2-02eccbb5afa6",
          "length": 30,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "88695d93-b8ee-467b-b509-d2874ddc9741"
        },
        "item": {
          "id": "64307d41-cf27-48a6-a0d6-be665713697b",
          "name": "[DELETE :id]/v1/action/:id",
          "request": {
            "description": {
              "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action",
                "{{idAction}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e3ca140f-345e-45a7-8b88-a28e981cd8d8",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Dynamic delete action for existent target with status code is 200\", function () {",
                  "    if(pm.response.responseSize) {",
                  "        let jsonData = pm.response.json(); ",
                  "        let id = pm.collectionVariables.get(\"idAction\");",
                  "        pm.response.to.have.status(200);",
                  "        pm.expect(jsonData).to.be.an('object');",
                  "        pm.expect(jsonData.id).eq(id);",
                  "        pm.expect(jsonData.name).to.be.an('string');",
                  "        pm.expect(jsonData.description).to.be.an('string');",
                  "        pm.expect(jsonData.description.length > 1).eq(true);",
                  "        pm.expect(jsonData.description).to.not.be.empty;",
                  "    }else{",
                  "        pm.expect(pm.response.code).to.not.equal(200);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Dynamic delete action for not existent target with status code 404\", function () {",
                  "    if(!pm.response.responseSize) {",
                  "        pm.response.to.have.status(404);",
                  "    }else{",
                  "        pm.expect(pm.response.code).to.not.equal(404);",
                  "    }",
                  "});",
                  "",
                  "if(pm.response.responseSize) {",
                  "    let jsonData = pm.response.json(); ",
                  "    if(jsonData) {",
                  "        let iamActionIds = pm.collectionVariables.get(\"iamActionIds\");",
                  "        let list = JSON.parse(iamActionIds);",
                  "        delete_id = jsonData.id;",
                  "        let res = list.filter(item => item != delete_id);",
                  "        iamActionIds= JSON.stringify(res);",
                  "        pm.collectionVariables.set(\"iamActionIds\", iamActionIds);",
                  "    }",
                  "}",
                  "       ",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "ae9abf86-c564-4e3a-a37a-a0ebe28e0700"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "134943"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDYzMzk3MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNiwiZXhwIjoxNzI0NTE2MzA2fQ.gw2c907JuN_iVMhcukMf91I_2MqmM-qlnSL3jGU_SRo",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "51cdcfb1-a282-46e5-87e4-a8093c3d0b03",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDYzMzk3MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNiwiZXhwIjoxNzI0NTE2MzA2fQ.gw2c907JuN_iVMhcukMf91I_2MqmM-qlnSL3jGU_SRo",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "4b5c5531-9ee5-4909-a5db-312291296219",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:26 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "111"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"6f-rIeiuOUVC5JqQhmw+oGNQ3yD/nU\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              112,
              117,
              116,
              58,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              102,
              97,
              105,
              108,
              115,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125
            ]
          },
          "cookie": [],
          "responseTime": 159,
          "responseSize": 111
        },
        "id": "64307d41-cf27-48a6-a0d6-be665713697b",
        "assertions": [
          {
            "assertion": "Dynamic delete action for existent target with status code is 200",
            "skipped": false
          },
          {
            "assertion": "Dynamic delete action for not existent target with status code 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4c2ce43b-fde1-4375-99f2-02eccbb5afa6",
          "length": 30,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "88695d93-b8ee-467b-b509-d2874ddc9741"
        },
        "item": {
          "id": "64307d41-cf27-48a6-a0d6-be665713697b",
          "name": "[DELETE :id]/v1/action/:id",
          "request": {
            "description": {
              "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action",
                "{{idAction}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e3ca140f-345e-45a7-8b88-a28e981cd8d8",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Dynamic delete action for existent target with status code is 200\", function () {",
                  "    if(pm.response.responseSize) {",
                  "        let jsonData = pm.response.json(); ",
                  "        let id = pm.collectionVariables.get(\"idAction\");",
                  "        pm.response.to.have.status(200);",
                  "        pm.expect(jsonData).to.be.an('object');",
                  "        pm.expect(jsonData.id).eq(id);",
                  "        pm.expect(jsonData.name).to.be.an('string');",
                  "        pm.expect(jsonData.description).to.be.an('string');",
                  "        pm.expect(jsonData.description.length > 1).eq(true);",
                  "        pm.expect(jsonData.description).to.not.be.empty;",
                  "    }else{",
                  "        pm.expect(pm.response.code).to.not.equal(200);",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Dynamic delete action for not existent target with status code 404\", function () {",
                  "    if(!pm.response.responseSize) {",
                  "        pm.response.to.have.status(404);",
                  "    }else{",
                  "        pm.expect(pm.response.code).to.not.equal(404);",
                  "    }",
                  "});",
                  "",
                  "if(pm.response.responseSize) {",
                  "    let jsonData = pm.response.json(); ",
                  "    if(jsonData) {",
                  "        let iamActionIds = pm.collectionVariables.get(\"iamActionIds\");",
                  "        let list = JSON.parse(iamActionIds);",
                  "        delete_id = jsonData.id;",
                  "        let res = list.filter(item => item != delete_id);",
                  "        iamActionIds= JSON.stringify(res);",
                  "        pm.collectionVariables.set(\"iamActionIds\", iamActionIds);",
                  "    }",
                  "}",
                  "       ",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "ae9abf86-c564-4e3a-a37a-a0ebe28e0700"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "134943"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDYzMzk3MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNiwiZXhwIjoxNzI0NTE2MzA2fQ.gw2c907JuN_iVMhcukMf91I_2MqmM-qlnSL3jGU_SRo",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "51cdcfb1-a282-46e5-87e4-a8093c3d0b03",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDYzMzk3MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNiwiZXhwIjoxNzI0NTE2MzA2fQ.gw2c907JuN_iVMhcukMf91I_2MqmM-qlnSL3jGU_SRo",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "4b5c5531-9ee5-4909-a5db-312291296219",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:26 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "111"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"6f-rIeiuOUVC5JqQhmw+oGNQ3yD/nU\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              32,
              112,
              117,
              116,
              58,
              105,
              100,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              32,
              102,
              97,
              105,
              108,
              115,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              125
            ]
          },
          "cookie": [],
          "responseTime": 159,
          "responseSize": 111
        },
        "id": "64307d41-cf27-48a6-a0d6-be665713697b",
        "assertions": [
          {
            "assertion": "Dynamic delete action for existent target with status code is 200",
            "skipped": false
          },
          {
            "assertion": "Dynamic delete action for not existent target with status code 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c3590c13-1f38-4bb4-9c00-1c1b77e29472",
          "length": 30,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b33f918a-f947-46b2-87ba-5ab29580f9ea"
        },
        "item": {
          "id": "1c26b126-104b-4971-928a-10d5fd52b2d7",
          "name": "[Delete 404]/v1/action/:id",
          "request": {
            "description": {
              "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action",
                "99999"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5efdec0c-7fbf-49c2-bd18-13200407a1fe",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Static delete action for not existent target with status code 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "_lastExecutionId": "cf0a74f9-7c3f-4453-9d55-88a99927a7ef"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "99999"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDY5NTk2NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNywiZXhwIjoxNzI0NTE2MzA3fQ.r5CcZqglRmExMHOYh_9lruc8tC7pKWcfQmM5wbTRmUk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fa6f2220-09ec-4866-a144-466bd69e9b3f",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDY5NTk2NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNywiZXhwIjoxNzI0NTE2MzA3fQ.r5CcZqglRmExMHOYh_9lruc8tC7pKWcfQmM5wbTRmUk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "caccdf82-7eec-4a02-a84d-f963324d7f48",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:27 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "78"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"4e-yo1YlsVOQ7RZ89tQajJfOc2Tl6o\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              110,
              111,
              116,
              95,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              95,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              116,
              97,
              114,
              103,
              101,
              116,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 159,
          "responseSize": 78
        },
        "id": "1c26b126-104b-4971-928a-10d5fd52b2d7",
        "assertions": [
          {
            "assertion": "Static delete action for not existent target with status code 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c3590c13-1f38-4bb4-9c00-1c1b77e29472",
          "length": 30,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b33f918a-f947-46b2-87ba-5ab29580f9ea"
        },
        "item": {
          "id": "1c26b126-104b-4971-928a-10d5fd52b2d7",
          "name": "[Delete 404]/v1/action/:id",
          "request": {
            "description": {
              "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action",
                "99999"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5efdec0c-7fbf-49c2-bd18-13200407a1fe",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Static delete action for not existent target with status code 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ],
                "_lastExecutionId": "cf0a74f9-7c3f-4453-9d55-88a99927a7ef"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "99999"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDY5NTk2NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNywiZXhwIjoxNzI0NTE2MzA3fQ.r5CcZqglRmExMHOYh_9lruc8tC7pKWcfQmM5wbTRmUk",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fa6f2220-09ec-4866-a144-466bd69e9b3f",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDY5NTk2NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNywiZXhwIjoxNzI0NTE2MzA3fQ.r5CcZqglRmExMHOYh_9lruc8tC7pKWcfQmM5wbTRmUk",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "caccdf82-7eec-4a02-a84d-f963324d7f48",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:27 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "78"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"4e-yo1YlsVOQ7RZ89tQajJfOc2Tl6o\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              110,
              111,
              116,
              95,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              95,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              116,
              97,
              114,
              103,
              101,
              116,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 159,
          "responseSize": 78
        },
        "id": "1c26b126-104b-4971-928a-10d5fd52b2d7",
        "assertions": [
          {
            "assertion": "Static delete action for not existent target with status code 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "127ea853-d5e9-4b78-9ad2-b45b140419a7",
          "length": 30,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "753a1b27-c119-4675-b58c-963a35adecc2"
        },
        "item": {
          "id": "c76d5485-d724-4583-ba61-f77d9f5eaac6",
          "name": "[Get id deleted]/v1/action/:id",
          "request": {
            "description": {
              "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action",
                "{{idAction}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a6a2903-2b00-42fe-8aaa-abc233c1f5b6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "5935ae31-d1fc-43de-9f63-8d145eee0931"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "e58d40bd-95a5-4c8e-8165-0337aec079d7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  ""
                ],
                "_lastExecutionId": "4703a892-e207-464c-8369-29f33687583b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "134943"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDc2Mzc4NSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNywiZXhwIjoxNzI0NTE2MzA3fQ.87zRO3LTAML0Hhir7XT0-iklVd41cPDd8GtRsAQoZnQ",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ec9a5693-99b8-4d23-89bf-6d85ff47e3a3",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDc2Mzc4NSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNywiZXhwIjoxNzI0NTE2MzA3fQ.87zRO3LTAML0Hhir7XT0-iklVd41cPDd8GtRsAQoZnQ",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "a739991b-c345-441a-9553-7325149a9137",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:28 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "78"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"4e-yo1YlsVOQ7RZ89tQajJfOc2Tl6o\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              110,
              111,
              116,
              95,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              95,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              116,
              97,
              114,
              103,
              101,
              116,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 174,
          "responseSize": 78
        },
        "id": "c76d5485-d724-4583-ba61-f77d9f5eaac6",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "127ea853-d5e9-4b78-9ad2-b45b140419a7",
          "length": 30,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "753a1b27-c119-4675-b58c-963a35adecc2"
        },
        "item": {
          "id": "c76d5485-d724-4583-ba61-f77d9f5eaac6",
          "name": "[Get id deleted]/v1/action/:id",
          "request": {
            "description": {
              "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action",
                "{{idAction}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a6a2903-2b00-42fe-8aaa-abc233c1f5b6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "5935ae31-d1fc-43de-9f63-8d145eee0931"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "e58d40bd-95a5-4c8e-8165-0337aec079d7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "\r",
                  ""
                ],
                "_lastExecutionId": "4703a892-e207-464c-8369-29f33687583b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "134943"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDc2Mzc4NSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNywiZXhwIjoxNzI0NTE2MzA3fQ.87zRO3LTAML0Hhir7XT0-iklVd41cPDd8GtRsAQoZnQ",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ec9a5693-99b8-4d23-89bf-6d85ff47e3a3",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDc2Mzc4NSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwNywiZXhwIjoxNzI0NTE2MzA3fQ.87zRO3LTAML0Hhir7XT0-iklVd41cPDd8GtRsAQoZnQ",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "a739991b-c345-441a-9553-7325149a9137",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:28 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "78"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"4e-yo1YlsVOQ7RZ89tQajJfOc2Tl6o\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              110,
              111,
              116,
              95,
              102,
              111,
              117,
              110,
              100,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              95,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              104,
              101,
              32,
              116,
              97,
              114,
              103,
              101,
              116,
              32,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              46,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 174,
          "responseSize": 78
        },
        "id": "c76d5485-d724-4583-ba61-f77d9f5eaac6",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "243ac67d-a177-48d5-bb4b-64b7778e35eb",
          "length": 30,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d474b846-a72a-4ab6-8978-caea8b220d12"
        },
        "item": {
          "id": "525a745f-357a-4705-9d8f-d0060e278310",
          "name": "[Create 1]/v1/action",
          "request": {
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test1\",\r\n  \"description\": \"Test1\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "035535ed-7e60-4fad-824a-e9982b424430",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let actionId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                  "    pm.expect(actionId).to.not.be.null;\r",
                  "    pm.expect(actionId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"nameAction\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iamActionIds\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "5e440ab8-14c1-448e-8798-da363f42174b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "b2c9c95e-f67b-4923-a0aa-fe40bebccd1e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "bdd12300-2e5e-4d99-947d-3a94a013ce2f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDg1NjE5NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwOSwiZXhwIjoxNzI0NTE2MzA5fQ.0c0vz4d51b_D0N0Q66Yl4hUeDe36mNpmFlhxqcifW64",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "95ea2762-8427-4696-9fac-b7f82c2a8861",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "118",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test1\",\r\n  \"description\": \"Test1\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDg1NjE5NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwOSwiZXhwIjoxNzI0NTE2MzA5fQ.0c0vz4d51b_D0N0Q66Yl4hUeDe36mNpmFlhxqcifW64",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "74916c62-45ff-4b92-9832-c67b97d410e0",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:29 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "182"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b6-eYooaK7wwOY4spE/z0CtFvurRCc\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              57,
              46,
              54,
              51,
              55,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              57,
              46,
              54,
              51,
              55,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              49,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 170,
          "responseSize": 182
        },
        "id": "525a745f-357a-4705-9d8f-d0060e278310",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Action ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "243ac67d-a177-48d5-bb4b-64b7778e35eb",
          "length": 30,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d474b846-a72a-4ab6-8978-caea8b220d12"
        },
        "item": {
          "id": "525a745f-357a-4705-9d8f-d0060e278310",
          "name": "[Create 1]/v1/action",
          "request": {
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test1\",\r\n  \"description\": \"Test1\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "035535ed-7e60-4fad-824a-e9982b424430",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let actionId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                  "    pm.expect(actionId).to.not.be.null;\r",
                  "    pm.expect(actionId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"nameAction\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iamActionIds\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "5e440ab8-14c1-448e-8798-da363f42174b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "b2c9c95e-f67b-4923-a0aa-fe40bebccd1e",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "bdd12300-2e5e-4d99-947d-3a94a013ce2f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDg1NjE5NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwOSwiZXhwIjoxNzI0NTE2MzA5fQ.0c0vz4d51b_D0N0Q66Yl4hUeDe36mNpmFlhxqcifW64",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "95ea2762-8427-4696-9fac-b7f82c2a8861",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "118",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test1\",\r\n  \"description\": \"Test1\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDg1NjE5NyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwOSwiZXhwIjoxNzI0NTE2MzA5fQ.0c0vz4d51b_D0N0Q66Yl4hUeDe36mNpmFlhxqcifW64",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "74916c62-45ff-4b92-9832-c67b97d410e0",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:29 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "182"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b6-eYooaK7wwOY4spE/z0CtFvurRCc\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              57,
              46,
              54,
              51,
              55,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              50,
              57,
              46,
              54,
              51,
              55,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              49,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 170,
          "responseSize": 182
        },
        "id": "525a745f-357a-4705-9d8f-d0060e278310",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Action ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "912d5e32-69cd-428d-a8cd-7b9c6b25a37c",
          "length": 30,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e816aaaf-68f9-491e-8b82-2f971953f198"
        },
        "item": {
          "id": "f2d3374d-7098-404f-a912-8787093c8b24",
          "name": "[Create 2]/v1/action",
          "request": {
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5b284afc-453b-43a3-b6c5-70e813387634",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let actionId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                  "    pm.expect(actionId).to.not.be.null;\r",
                  "    pm.expect(actionId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"nameAction\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iamActionIds\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "21fa38e4-fd2f-435a-98c4-82d0ceff9a0a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "45df576d-930a-4c64-8cde-d4fc0e0fce1d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "cb9d25f4-2a15-4d6d-a56f-280185d8cc0d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDk4MTQxNCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwOSwiZXhwIjoxNzI0NTE2MzA5fQ.MLlpnTlpF2NO4fRMAREdsmMjW0nN0LY9t4eZCuzztqg",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "02cea049-d8c9-4d38-9272-4056e69f8b09",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDk4MTQxNCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwOSwiZXhwIjoxNzI0NTE2MzA5fQ.MLlpnTlpF2NO4fRMAREdsmMjW0nN0LY9t4eZCuzztqg",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "cd850439-54f6-4504-ba6c-dd72969c0db4",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-2+Q0NSHCJUg5v+QHQgQAH7hVHAg\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              48,
              46,
              50,
              52,
              55,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              48,
              46,
              50,
              52,
              55,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 189,
          "responseSize": 183
        },
        "id": "f2d3374d-7098-404f-a912-8787093c8b24",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Action ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "912d5e32-69cd-428d-a8cd-7b9c6b25a37c",
          "length": 30,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e816aaaf-68f9-491e-8b82-2f971953f198"
        },
        "item": {
          "id": "f2d3374d-7098-404f-a912-8787093c8b24",
          "name": "[Create 2]/v1/action",
          "request": {
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5b284afc-453b-43a3-b6c5-70e813387634",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let actionId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                  "    pm.expect(actionId).to.not.be.null;\r",
                  "    pm.expect(actionId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"nameAction\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iamActionIds\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "21fa38e4-fd2f-435a-98c4-82d0ceff9a0a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "45df576d-930a-4c64-8cde-d4fc0e0fce1d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "cb9d25f4-2a15-4d6d-a56f-280185d8cc0d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDk4MTQxNCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwOSwiZXhwIjoxNzI0NTE2MzA5fQ.MLlpnTlpF2NO4fRMAREdsmMjW0nN0LY9t4eZCuzztqg",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "02cea049-d8c9-4d38-9272-4056e69f8b09",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMDk4MTQxNCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMwOSwiZXhwIjoxNzI0NTE2MzA5fQ.MLlpnTlpF2NO4fRMAREdsmMjW0nN0LY9t4eZCuzztqg",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "cd850439-54f6-4504-ba6c-dd72969c0db4",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-2+Q0NSHCJUg5v+QHQgQAH7hVHAg\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              48,
              46,
              50,
              52,
              55,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              48,
              46,
              50,
              52,
              55,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 189,
          "responseSize": 183
        },
        "id": "f2d3374d-7098-404f-a912-8787093c8b24",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Action ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "93ca2df5-003e-429b-ac2a-0c79bee878dd",
          "length": 30,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "836521d2-ecc7-469e-8fd0-f33fb783259c"
        },
        "item": {
          "id": "2f38ae73-8c98-40ac-8d2b-7fdf23f5745b",
          "name": "[Create 3]/v1/action",
          "request": {
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ea2614e4-3bd2-4cd8-872a-e42c4b9851ad",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let actionId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                  "    pm.expect(actionId).to.not.be.null;\r",
                  "    pm.expect(actionId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"nameAction\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iamActionIds\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "906d2a11-85fd-4eec-872d-50ce2068994e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d0a3e923-462c-4e6a-991a-66bfea185e7a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "469a9599-cac6-4950-b1b3-2a36f9473540"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTA0Mzc4MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMCwiZXhwIjoxNzI0NTE2MzEwfQ.NxZdxKhQTBM66ZzjrTS1FZeZQQTsQkbE-Lr0kcGM4sg",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "92ab237d-3df4-4abb-8321-35f8c84e8abc",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTA0Mzc4MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMCwiZXhwIjoxNzI0NTE2MzEwfQ.NxZdxKhQTBM66ZzjrTS1FZeZQQTsQkbE-Lr0kcGM4sg",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e75d9a2e-61fe-4b41-8d18-895b642c9c84",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-2me/G9htlOGi7OiNx7j6vqN/0ZA\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              48,
              46,
              57,
              50,
              49,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              48,
              46,
              57,
              50,
              49,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 241,
          "responseSize": 183
        },
        "id": "2f38ae73-8c98-40ac-8d2b-7fdf23f5745b",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Action ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "93ca2df5-003e-429b-ac2a-0c79bee878dd",
          "length": 30,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "836521d2-ecc7-469e-8fd0-f33fb783259c"
        },
        "item": {
          "id": "2f38ae73-8c98-40ac-8d2b-7fdf23f5745b",
          "name": "[Create 3]/v1/action",
          "request": {
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ea2614e4-3bd2-4cd8-872a-e42c4b9851ad",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let actionId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                  "    pm.expect(actionId).to.not.be.null;\r",
                  "    pm.expect(actionId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"nameAction\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iamActionIds\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "906d2a11-85fd-4eec-872d-50ce2068994e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d0a3e923-462c-4e6a-991a-66bfea185e7a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "469a9599-cac6-4950-b1b3-2a36f9473540"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTA0Mzc4MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMCwiZXhwIjoxNzI0NTE2MzEwfQ.NxZdxKhQTBM66ZzjrTS1FZeZQQTsQkbE-Lr0kcGM4sg",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "92ab237d-3df4-4abb-8321-35f8c84e8abc",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTA0Mzc4MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMCwiZXhwIjoxNzI0NTE2MzEwfQ.NxZdxKhQTBM66ZzjrTS1FZeZQQTsQkbE-Lr0kcGM4sg",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e75d9a2e-61fe-4b41-8d18-895b642c9c84",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-2me/G9htlOGi7OiNx7j6vqN/0ZA\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              48,
              46,
              57,
              50,
              49,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              48,
              46,
              57,
              50,
              49,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 241,
          "responseSize": 183
        },
        "id": "2f38ae73-8c98-40ac-8d2b-7fdf23f5745b",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Action ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "79866503-eeae-4154-9f49-b4dfc3bd4fcd",
          "length": 30,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b3c93a46-2a67-4132-828f-6261f0870374"
        },
        "item": {
          "id": "74d39070-afe8-4db8-9a40-392ffe638876",
          "name": "[Update :list]/v1/action",
          "request": {
            "description": {
              "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "ql",
                  "value": "{\"id\":{\"in\":{{iamActionIds}}}}"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "\n{\n  \"name\": \"OnlineTest\",\n  \"description\": \"Bulk action\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 3,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-04-19 06:19:50\",\n  \"group\": \"guess\"\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ca60904-7df5-4293-b0ac-a32f0e48a60c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verifying that the names has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseName = jsonData.data.map(item => item.name);",
                  "    let requestName = requestBodyJson.name",
                  "    let allNamesMatch = responseName.every(name => name === requestName);",
                  "    pm.expect(allNamesMatch).to.be.true;  ",
                  "});",
                  "",
                  "pm.test(\"Verifying that the description has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseDescription = jsonData.data.map(item => item.description);",
                  "    let requestDescription = requestBodyJson.description",
                  "    let allDescriptionsMatch = responseDescription.every(description => description === requestDescription);",
                  "    pm.expect(allDescriptionsMatch).to.be.true;  ",
                  "});",
                  "",
                  "pm.test(\"Verifying that the Status has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseStatus = jsonData.data.map(item => item.status);",
                  "    let requestStatus = requestBodyJson.status",
                  "    let allStatusMatch = responseStatus.every(status => status === requestStatus);",
                  "    pm.expect(allStatusMatch).to.be.true;  ",
                  "});",
                  "",
                  "pm.test(\"Verifying that the Group has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseGroup = jsonData.data.map(item => item.group);",
                  "    let requestGroup = requestBodyJson.group",
                  "    let allStatusMatch = responseGroup.every(group => group === requestGroup);",
                  "    pm.expect(allStatusMatch).to.be.true;  ",
                  "});",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "   ",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "8703c4b4-76cf-42de-8441-96923deb8a64"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "561faf7a-fcc3-4b59-8c56-7f9b791137f7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPut = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPutAction\", requestBodyPut);\r",
                  "\r",
                  "\r",
                  "/*let uri = pm.collectionVariables.get('base_url')\r",
                  "pm.sendRequest({\r",
                  "    url: uri + '/v1/event',\r",
                  "    method: 'POST',\r",
                  "    header: {\r",
                  "        'Content-Type': 'application/x-www-form-urlencoded'\r",
                  "    },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            \"name\": \"test3\",\r",
                  "            \"description\": \"Test3\",\r",
                  "            \"payload\": { \"name\":\"test\"},\r",
                  "            \"status\": 1,\r",
                  "            \"group\": \"user\"\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    console.log(\">>> CREATE_\");\r",
                  "    if (!res?.responseSize) return null;\r",
                  "    let jsonData = res.json();\r",
                  "    if (!jsonData) return null;\r",
                  "    jsonData?.id && pm.collectionVariables.set(\"eventId\", jsonData.id);\r",
                  "});*/\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "d2cd924b-03cb-4b94-8f6a-03b3e7e54670"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "ql",
                "value": "{%22id%22:{%22in%22:[134944,134945,134946]}}"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTEwOTYzNyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMSwiZXhwIjoxNzI0NTE2MzExfQ.ikZlnhfudVPIqhaxSXCRYaTCwOOk77iZmCBp6uYb5BU",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "bb433d2b-7664-447d-9f0b-43eb1e6f91fa",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "3277",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "\n{\n  \"name\": \"OnlineTest\",\n  \"description\": \"Bulk action\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 3,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-04-19 06:19:50\",\n  \"group\": \"guess\"\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTEwOTYzNyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMSwiZXhwIjoxNzI0NTE2MzExfQ.ikZlnhfudVPIqhaxSXCRYaTCwOOk77iZmCBp6uYb5BU",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "4a88f991-a1a6-43a2-8ce5-dfcc60f045af",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:31 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "287"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"11f-YoWkDMmP02UtAA/9KNFxTly0fro\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              51,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 221,
          "responseSize": 287
        },
        "id": "74d39070-afe8-4db8-9a40-392ffe638876",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verifying that the names has been updated",
            "skipped": false
          },
          {
            "assertion": "Verifying that the description has been updated",
            "skipped": false
          },
          {
            "assertion": "Verifying that the Status has been updated",
            "skipped": false
          },
          {
            "assertion": "Verifying that the Group has been updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "79866503-eeae-4154-9f49-b4dfc3bd4fcd",
          "length": 30,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b3c93a46-2a67-4132-828f-6261f0870374"
        },
        "item": {
          "id": "74d39070-afe8-4db8-9a40-392ffe638876",
          "name": "[Update :list]/v1/action",
          "request": {
            "description": {
              "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "ql",
                  "value": "{\"id\":{\"in\":{{iamActionIds}}}}"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "\n{\n  \"name\": \"OnlineTest\",\n  \"description\": \"Bulk action\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 3,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-04-19 06:19:50\",\n  \"group\": \"guess\"\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ca60904-7df5-4293-b0ac-a32f0e48a60c",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verifying that the names has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseName = jsonData.data.map(item => item.name);",
                  "    let requestName = requestBodyJson.name",
                  "    let allNamesMatch = responseName.every(name => name === requestName);",
                  "    pm.expect(allNamesMatch).to.be.true;  ",
                  "});",
                  "",
                  "pm.test(\"Verifying that the description has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseDescription = jsonData.data.map(item => item.description);",
                  "    let requestDescription = requestBodyJson.description",
                  "    let allDescriptionsMatch = responseDescription.every(description => description === requestDescription);",
                  "    pm.expect(allDescriptionsMatch).to.be.true;  ",
                  "});",
                  "",
                  "pm.test(\"Verifying that the Status has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseStatus = jsonData.data.map(item => item.status);",
                  "    let requestStatus = requestBodyJson.status",
                  "    let allStatusMatch = responseStatus.every(status => status === requestStatus);",
                  "    pm.expect(allStatusMatch).to.be.true;  ",
                  "});",
                  "",
                  "pm.test(\"Verifying that the Group has been updated\", function () {",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPutAction\");",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;",
                  "    let responseGroup = jsonData.data.map(item => item.group);",
                  "    let requestGroup = requestBodyJson.group",
                  "    let allStatusMatch = responseGroup.every(group => group === requestGroup);",
                  "    pm.expect(allStatusMatch).to.be.true;  ",
                  "});",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "   ",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "8703c4b4-76cf-42de-8441-96923deb8a64"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "561faf7a-fcc3-4b59-8c56-7f9b791137f7",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPut = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPutAction\", requestBodyPut);\r",
                  "\r",
                  "\r",
                  "/*let uri = pm.collectionVariables.get('base_url')\r",
                  "pm.sendRequest({\r",
                  "    url: uri + '/v1/event',\r",
                  "    method: 'POST',\r",
                  "    header: {\r",
                  "        'Content-Type': 'application/x-www-form-urlencoded'\r",
                  "    },\r",
                  "    body: {\r",
                  "        mode: 'raw',\r",
                  "        raw: JSON.stringify({\r",
                  "            \"name\": \"test3\",\r",
                  "            \"description\": \"Test3\",\r",
                  "            \"payload\": { \"name\":\"test\"},\r",
                  "            \"status\": 1,\r",
                  "            \"group\": \"user\"\r",
                  "        })\r",
                  "    }\r",
                  "}, function (err, res) {\r",
                  "    console.log(\">>> CREATE_\");\r",
                  "    if (!res?.responseSize) return null;\r",
                  "    let jsonData = res.json();\r",
                  "    if (!jsonData) return null;\r",
                  "    jsonData?.id && pm.collectionVariables.set(\"eventId\", jsonData.id);\r",
                  "});*/\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "d2cd924b-03cb-4b94-8f6a-03b3e7e54670"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "ql",
                "value": "{%22id%22:{%22in%22:[134944,134945,134946]}}"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTEwOTYzNyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMSwiZXhwIjoxNzI0NTE2MzExfQ.ikZlnhfudVPIqhaxSXCRYaTCwOOk77iZmCBp6uYb5BU",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "bb433d2b-7664-447d-9f0b-43eb1e6f91fa",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "3277",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "\n{\n  \"name\": \"OnlineTest\",\n  \"description\": \"Bulk action\",\n  \"payload\": \"{\\\"example\\\":{\\\"method\\\":\\\"BASIC\\\",\\\"flow\\\":\\\"170834142332623\\\",\\\"username\\\":\\\"user1@example.com\\\",\\\"products\\\":{\\\"request\\\":[3]},\\\"error\\\":{\\\"short\\\":\\\"LOGIN_NOOK\\\"},\\\"fingerprint\\\":{\\\"hash\\\":\\\"18e23af4a27b0e0182fed5cbd7286be1\\\",\\\"components\\\":{\\\"useragent\\\":{\\\"product\\\":{\\\"name\\\":\\\"eWAS\\\",\\\"version\\\":\\\"3.6.1-12\\\",\\\"id\\\":3},\\\"device\\\":{\\\"id\\\":\\\"UUUU-AAAA-IIII\\\",\\\"description\\\":\\\"iPad Pro 2023 10.5inch (iPadOS 16.6)\\\"},\\\"os\\\":{\\\"name\\\":\\\"iPadOS\\\",\\\"version\\\":\\\"16.6\\\"}},\\\"acceptHeaders\\\":{\\\"accept\\\":\\\"*/*\\\"},\\\"geoip\\\":{\\\"country\\\":null},\\\"server\\\":{\\\"host\\\":\\\"localhost:4000\\\",\\\"ip\\\":\\\"localhost\\\",\\\"port\\\":\\\"4000\\\"},\\\"client\\\":{\\\"ip\\\":\\\"::1\\\",\\\"name\\\":\\\"localhost\\\",\\\"ipOriginal\\\":\\\"::1\\\"}}},\\\"failure\\\":{\\\"count\\\":5,\\\"ko_last\\\":\\\"2024-02-12T15:05:27.000Z\\\",\\\"ko_start\\\":\\\"2024-02-06T17:40:24.000Z\\\",\\\"user_id\\\":187721,\\\"ko_diff\\\":8485}},\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"method\\\":{\\\"type\\\":\\\"string\\\"},\\\"flow\\\":{\\\"type\\\":\\\"string\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"products\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"request\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":[{\\\"type\\\":\\\"integer\\\"}]}},\\\"required\\\":[\\\"request\\\"]},\\\"error\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"short\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"short\\\"]},\\\"fingerprint\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"hash\\\":{\\\"type\\\":\\\"string\\\"},\\\"components\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"useragent\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"product\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\",\\\"id\\\"]},\\\"device\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"id\\\",\\\"description\\\"]},\\\"os\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"version\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\",\\\"version\\\"]}},\\\"required\\\":[\\\"product\\\",\\\"device\\\",\\\"os\\\"]},\\\"acceptHeaders\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"accept\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"accept\\\"]},\\\"geoip\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"country\\\":{\\\"type\\\":\\\"null\\\"}},\\\"required\\\":[\\\"country\\\"]},\\\"server\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"host\\\":{\\\"type\\\":\\\"string\\\"},\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"port\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"host\\\",\\\"ip\\\",\\\"port\\\"]},\\\"client\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"ip\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"ipOriginal\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"ip\\\",\\\"name\\\",\\\"ipOriginal\\\"]}},\\\"required\\\":[\\\"useragent\\\",\\\"acceptHeaders\\\",\\\"geoip\\\",\\\"server\\\",\\\"client\\\"]}},\\\"required\\\":[\\\"hash\\\",\\\"components\\\"]},\\\"failure\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"count\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_last\\\":{\\\"type\\\":\\\"string\\\"},\\\"ko_start\\\":{\\\"type\\\":\\\"string\\\"},\\\"user_id\\\":{\\\"type\\\":\\\"integer\\\"},\\\"ko_diff\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"count\\\",\\\"ko_last\\\",\\\"ko_start\\\",\\\"user_id\\\",\\\"ko_diff\\\"]}},\\\"required\\\":[\\\"method\\\",\\\"flow\\\",\\\"username\\\",\\\"products\\\",\\\"error\\\",\\\"fingerprint\\\",\\\"failure\\\"]}}\",\n  \"status\": 3,\n  \"created_at\": \"2024-04-18 12:19:52\",\n  \"updated_at\": \"2024-04-19 06:19:50\",\n  \"group\": \"guess\"\n}\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTEwOTYzNyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMSwiZXhwIjoxNzI0NTE2MzExfQ.ikZlnhfudVPIqhaxSXCRYaTCwOOk77iZmCBp6uYb5BU",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "4a88f991-a1a6-43a2-8ce5-dfcc60f045af",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:31 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "287"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"11f-YoWkDMmP02UtAA/9KNFxTly0fro\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              51,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 221,
          "responseSize": 287
        },
        "id": "74d39070-afe8-4db8-9a40-392ffe638876",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verifying that the names has been updated",
            "skipped": false
          },
          {
            "assertion": "Verifying that the description has been updated",
            "skipped": false
          },
          {
            "assertion": "Verifying that the Status has been updated",
            "skipped": false
          },
          {
            "assertion": "Verifying that the Group has been updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f59a1a46-1361-48cd-8cc2-f1e415ae5bc6",
          "length": 30,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "178efb6b-ad08-401c-9e76-6b1fe4d01575"
        },
        "item": {
          "id": "2f3d8d67-cd71-408f-bf98-cd4b604fbfaf",
          "name": "[Delete :list]/v1/action",
          "request": {
            "description": {
              "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "ql",
                  "value": "{\"id\":{\"in\":{{iamActionIds}}}}"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e46744a8-d2bb-488c-8f97-729a900939be",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "(()=>{",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let iamActionIds = pm.collectionVariables.get(\"iamActionIds\");",
                  "    let list = iamActionIds ? JSON.parse(iamActionIds) : null;",
                  "    if (!Array.isArray(list) || !list.length) return null;",
                  "    let ids = jsonData.data.map(item => item.id);",
                  "    let res = list.filter(item => !ids.includes(item));",
                  "    let values = JSON.stringify(res);",
                  "    pm.collectionVariables.set(\"iamActionIds\", values);",
                  "})()",
                  ""
                ],
                "_lastExecutionId": "b6150710-e1b5-49e2-8e40-171ec5037cf0"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "10a4ada1-45fa-4ff4-98b0-a62e50d638b6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c8bf9e0a-0e29-435e-a4f3-5e65b13646eb"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "ql",
                "value": "{%22id%22:{%22in%22:[134944,134945,134946]}}"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTE3NTc2MSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMSwiZXhwIjoxNzI0NTE2MzExfQ.GGelk8vWYOxQfCqKaYtDR94sJHMS5_ETzlREXodYhWE",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "503e8ec9-4b30-4b2f-9d99-52da00679e19",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTE3NTc2MSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMSwiZXhwIjoxNzI0NTE2MzExfQ.GGelk8vWYOxQfCqKaYtDR94sJHMS5_ETzlREXodYhWE",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "72415c26-c03b-4a5e-ba3c-54f57a551e99",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:32 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "287"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"11f-YoWkDMmP02UtAA/9KNFxTly0fro\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              51,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 176,
          "responseSize": 287
        },
        "id": "2f3d8d67-cd71-408f-bf98-cd4b604fbfaf",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f59a1a46-1361-48cd-8cc2-f1e415ae5bc6",
          "length": 30,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "178efb6b-ad08-401c-9e76-6b1fe4d01575"
        },
        "item": {
          "id": "2f3d8d67-cd71-408f-bf98-cd4b604fbfaf",
          "name": "[Delete :list]/v1/action",
          "request": {
            "description": {
              "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "ql",
                  "value": "{\"id\":{\"in\":{{iamActionIds}}}}"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e46744a8-d2bb-488c-8f97-729a900939be",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "(()=>{",
                  "    if (!pm.response.responseSize) return null;",
                  "    let jsonData = pm.response.json();",
                  "    if (!jsonData) return null;",
                  "    let iamActionIds = pm.collectionVariables.get(\"iamActionIds\");",
                  "    let list = iamActionIds ? JSON.parse(iamActionIds) : null;",
                  "    if (!Array.isArray(list) || !list.length) return null;",
                  "    let ids = jsonData.data.map(item => item.id);",
                  "    let res = list.filter(item => !ids.includes(item));",
                  "    let values = JSON.stringify(res);",
                  "    pm.collectionVariables.set(\"iamActionIds\", values);",
                  "})()",
                  ""
                ],
                "_lastExecutionId": "b6150710-e1b5-49e2-8e40-171ec5037cf0"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "10a4ada1-45fa-4ff4-98b0-a62e50d638b6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c8bf9e0a-0e29-435e-a4f3-5e65b13646eb"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [
              {
                "key": "ql",
                "value": "{%22id%22:{%22in%22:[134944,134945,134946]}}"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTE3NTc2MSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMSwiZXhwIjoxNzI0NTE2MzExfQ.GGelk8vWYOxQfCqKaYtDR94sJHMS5_ETzlREXodYhWE",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "503e8ec9-4b30-4b2f-9d99-52da00679e19",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTE3NTc2MSIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMSwiZXhwIjoxNzI0NTE2MzExfQ.GGelk8vWYOxQfCqKaYtDR94sJHMS5_ETzlREXodYhWE",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "72415c26-c03b-4a5e-ba3c-54f57a551e99",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:32 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "287"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"11f-YoWkDMmP02UtAA/9KNFxTly0fro\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              51,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              79,
              110,
              108,
              105,
              110,
              101,
              84,
              101,
              115,
              116,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              66,
              117,
              108,
              107,
              32,
              97,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              103,
              117,
              101,
              115,
              115,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              51,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 176,
          "responseSize": 287
        },
        "id": "2f3d8d67-cd71-408f-bf98-cd4b604fbfaf",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "021f75a9-5199-49fd-8bc5-5d089ca10af9",
          "length": 30,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "44f291b9-acfe-411e-a1e1-d0de46053f1a"
        },
        "item": {
          "id": "11c748ae-ffb5-48ef-91a1-cfe4eae9a2d1",
          "name": "[clone non-existent id]/v1/action/:id",
          "request": {
            "url": {
              "path": [
                "v1",
                "action",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"name\": \"cloned\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5a5b21ec-cb69-4ccc-9eda-40c121f6efee",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"event name was cloned correctly\", function () {\r",
                  "    if (!pm.response.responseSize) return null;\r",
                  "    let jsonData = pm.response.json();\r",
                  "    if (!jsonData) return null;\r",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPostAction\");\r",
                  "    if (!requestBody || requestBody.trim() === \"\") {\r",
                  "        requestBody = null;\r",
                  "    }\r",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;\r",
                  "    let cloneName = jsonData.name;\r",
                  "    let requestName = requestBodyJson ? requestBodyJson.name: null;\r",
                  "    if (requestName) {\r",
                  "        pm.expect(cloneName).to.be.eql(requestName);\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "78b5c2b7-a95d-489c-af7d-688c579cba8d"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "591c9713-7366-481f-bd21-32c517f57f37",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPost = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPostAction\", requestBodyPost);"
                ],
                "_lastExecutionId": "6b68f34b-ee3f-407e-9733-d4277101ea93"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "135394"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTIyODU4MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMiwiZXhwIjoxNzI0NTE2MzEyfQ.DA47nUadZmHTyXit_J1WEYBzqWDJ2yxsp6QEfc_c1ZE",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5acce0ee-6eb5-4ced-887b-58cac8b6ee70",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "23",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n \"name\": \"cloned\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTIyODU4MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMiwiZXhwIjoxNzI0NTE2MzEyfQ.DA47nUadZmHTyXit_J1WEYBzqWDJ2yxsp6QEfc_c1ZE",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "2e6ebe10-b997-42e4-9885-8f4b2a9f7c3a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:32 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "120"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"78-piWHweBv61AVcIHfPMBnUmUz0+Q\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              50,
              46,
              55,
              55,
              52,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              50,
              46,
              55,
              55,
              52,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              55,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 195,
          "responseSize": 120
        },
        "id": "11c748ae-ffb5-48ef-91a1-cfe4eae9a2d1",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "event name was cloned correctly",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "021f75a9-5199-49fd-8bc5-5d089ca10af9",
          "length": 30,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "44f291b9-acfe-411e-a1e1-d0de46053f1a"
        },
        "item": {
          "id": "11c748ae-ffb5-48ef-91a1-cfe4eae9a2d1",
          "name": "[clone non-existent id]/v1/action/:id",
          "request": {
            "url": {
              "path": [
                "v1",
                "action",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"name\": \"cloned\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5a5b21ec-cb69-4ccc-9eda-40c121f6efee",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"event name was cloned correctly\", function () {\r",
                  "    if (!pm.response.responseSize) return null;\r",
                  "    let jsonData = pm.response.json();\r",
                  "    if (!jsonData) return null;\r",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPostAction\");\r",
                  "    if (!requestBody || requestBody.trim() === \"\") {\r",
                  "        requestBody = null;\r",
                  "    }\r",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;\r",
                  "    let cloneName = jsonData.name;\r",
                  "    let requestName = requestBodyJson ? requestBodyJson.name: null;\r",
                  "    if (requestName) {\r",
                  "        pm.expect(cloneName).to.be.eql(requestName);\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "78b5c2b7-a95d-489c-af7d-688c579cba8d"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "591c9713-7366-481f-bd21-32c517f57f37",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPost = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPostAction\", requestBodyPost);"
                ],
                "_lastExecutionId": "6b68f34b-ee3f-407e-9733-d4277101ea93"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "135394"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTIyODU4MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMiwiZXhwIjoxNzI0NTE2MzEyfQ.DA47nUadZmHTyXit_J1WEYBzqWDJ2yxsp6QEfc_c1ZE",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5acce0ee-6eb5-4ced-887b-58cac8b6ee70",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "23",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n \"name\": \"cloned\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTIyODU4MyIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMiwiZXhwIjoxNzI0NTE2MzEyfQ.DA47nUadZmHTyXit_J1WEYBzqWDJ2yxsp6QEfc_c1ZE",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "2e6ebe10-b997-42e4-9885-8f4b2a9f7c3a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:32 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "120"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"78-piWHweBv61AVcIHfPMBnUmUz0+Q\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              50,
              46,
              55,
              55,
              52,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              50,
              46,
              55,
              55,
              52,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              55,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 195,
          "responseSize": 120
        },
        "id": "11c748ae-ffb5-48ef-91a1-cfe4eae9a2d1",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "event name was cloned correctly",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "067e0acf-e4a1-4c7d-a632-b83575ab9ad3",
          "length": 30,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a5eafa77-5f7c-4bd8-8fc9-06fa6d4dc4b0"
        },
        "item": {
          "id": "30bfc71c-82f6-4eed-b1ed-08c8f05e6a81",
          "name": "[Create 4]/v1/action",
          "request": {
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "88b9c8ba-7e26-439c-9909-1ab452caccb2",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let actionId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                  "    pm.expect(actionId).to.not.be.null;\r",
                  "    pm.expect(actionId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"nameAction\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iamActionIds\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "445b5be3-da32-4ad5-af88-b709af36dfd8"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "27f8e72a-a0d9-40c9-90c4-045efc40cb73",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "618394c4-3638-4ff1-b2be-03c8a6b734ff"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTI5NDM1OCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMywiZXhwIjoxNzI0NTE2MzEzfQ.uhMZ5g122nfs7HttuA9Up5qubvgZcpxP87MlgsC8p2I",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c1413864-b31e-46c3-ba5e-4f410f317da9",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTI5NDM1OCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMywiZXhwIjoxNzI0NTE2MzEzfQ.uhMZ5g122nfs7HttuA9Up5qubvgZcpxP87MlgsC8p2I",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "2346c25b-0438-49a8-8883-baafa4caf9a2",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:33 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-PR/WvehwX5LyzN5glgEjsz6DzxY\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              51,
              46,
              51,
              49,
              55,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              51,
              46,
              51,
              49,
              55,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              56,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 163,
          "responseSize": 183
        },
        "id": "30bfc71c-82f6-4eed-b1ed-08c8f05e6a81",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Action ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "067e0acf-e4a1-4c7d-a632-b83575ab9ad3",
          "length": 30,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a5eafa77-5f7c-4bd8-8fc9-06fa6d4dc4b0"
        },
        "item": {
          "id": "30bfc71c-82f6-4eed-b1ed-08c8f05e6a81",
          "name": "[Create 4]/v1/action",
          "request": {
            "url": {
              "path": [
                "v1",
                "action"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "88b9c8ba-7e26-439c-9909-1ab452caccb2",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action ID is not null (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('id');\r",
                  "    let actionId = jsonData.id;\r",
                  "    pm.collectionVariables.set(\"idAction\", actionId);\r",
                  "    pm.expect(actionId).to.not.be.null;\r",
                  "    pm.expect(actionId).to.not.be.undefined;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action Name is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('name');\r",
                  "    let name = jsonData.name;\r",
                  "    pm.collectionVariables.set(\"nameAction\", name);\r",
                  "    pm.expect(name).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action updated_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('updated_at');\r",
                  "    let updatedAt = jsonData.updated_at;\r",
                  "    pm.collectionVariables.set(\"updatedAtAction\", updatedAt);\r",
                  "    pm.expect(updatedAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Action created_at is not empty (storaged)\", function () {\r",
                  "    let jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.have.property('created_at');\r",
                  "    let createdAt = jsonData.created_at;\r",
                  "    pm.collectionVariables.set(\"createdAtAction\", createdAt);\r",
                  "    pm.expect(createdAt).to.not.be.empty;\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Extract and store ID\", function () {\r",
                  "    let scope = pm.collectionVariables;\r",
                  "    let keyName = \"iamActionIds\";\r",
                  "    let jsonData = pm.response.json();\r",
                  "    let resourceIds = JSON.parse(scope.get(keyName) || \"[]\");\r",
                  "    pm.expect(jsonData.id).to.not.be.null;\r",
                  "    pm.expect(jsonData.id).to.not.be.undefined;\r",
                  "    if(jsonData.id != null & jsonData.id != undefined )\r",
                  "    {\r",
                  "    resourceIds.push(jsonData.id);\r",
                  "    scope.set(keyName, JSON.stringify(resourceIds));\r",
                  "    }\r",
                  "    else\r",
                  "    {\r",
                  "        resourceIds = resourceIds;\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "445b5be3-da32-4ad5-af88-b709af36dfd8"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "27f8e72a-a0d9-40c9-90c4-045efc40cb73",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "618394c4-3638-4ff1-b2be-03c8a6b734ff"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTI5NDM1OCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMywiZXhwIjoxNzI0NTE2MzEzfQ.uhMZ5g122nfs7HttuA9Up5qubvgZcpxP87MlgsC8p2I",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c1413864-b31e-46c3-ba5e-4f410f317da9",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "119",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"test14\",\r\n  \"description\": \"Test6\",\r\n  \"payload\": { \"name\":\"test\"},\r\n  \"status\": 1,\r\n  \"group\": \"user\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTI5NDM1OCIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMywiZXhwIjoxNzI0NTE2MzEzfQ.uhMZ5g122nfs7HttuA9Up5qubvgZcpxP87MlgsC8p2I",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "2346c25b-0438-49a8-8883-baafa4caf9a2",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:33 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "183"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"b7-PR/WvehwX5LyzN5glgEjsz6DzxY\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              121,
              108,
              111,
              97,
              100,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              125,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              51,
              46,
              51,
              49,
              55,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              51,
              46,
              51,
              49,
              55,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              56,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              49,
              52,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              84,
              101,
              115,
              116,
              54,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              103,
              114,
              111,
              117,
              112,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 163,
          "responseSize": 183
        },
        "id": "30bfc71c-82f6-4eed-b1ed-08c8f05e6a81",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Action ID is not null (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action Name is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action updated_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Action created_at is not empty (storaged)",
            "skipped": false
          },
          {
            "assertion": "Extract and store ID",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c94f5c0a-a01b-4ee2-bc9a-cc1bfd673a90",
          "length": 30,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "01458176-5f74-430e-8c65-a7bb75114ce1"
        },
        "item": {
          "id": "c3392703-1253-4ead-8778-d652c7df364f",
          "name": "[Cloned]/v1/action/:id",
          "request": {
            "url": {
              "path": [
                "v1",
                "action",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"cloned\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eb3e5f88-5e42-4a4d-8006-bc7fa54e1395",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"event name was cloned correctly\", function () {\r",
                  "    if (!pm.response.responseSize) return null;\r",
                  "    let jsonData = pm.response.json();\r",
                  "    if (!jsonData) return null;\r",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPostAction\");\r",
                  "    if (!requestBody || requestBody.trim() === \"\") {\r",
                  "        requestBody = null;\r",
                  "    }\r",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;\r",
                  "    let cloneName = jsonData.name;\r",
                  "    let originName = pm.collectionVariables.get(\"name\");\r",
                  "    let requestName = requestBodyJson ? requestBodyJson.name: null;\r",
                  "    if (!requestName) {\r",
                  "        pm.expect(cloneName).to.be.eql(originName);\r",
                  "    } else {\r",
                  "        pm.expect(cloneName).to.be.eql(requestName);\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "4931bf2d-a8b7-45ba-a713-2187931080a9"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ba28c886-ed61-47ea-b025-b46a35922a9b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPost = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPostAction\", requestBodyPost);"
                ],
                "_lastExecutionId": "8ae7a608-7ed4-44b9-84a0-6879579d1b8a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "135394"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTM1MDI0NiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMywiZXhwIjoxNzI0NTE2MzEzfQ._0ia0eFeKIGb6OGCgL18EKhKSQwDgsgja3X5hDy_jNo",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ffdfab49-65fc-4713-85dd-c221bf043bd8",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "24",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"cloned\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTM1MDI0NiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMywiZXhwIjoxNzI0NTE2MzEzfQ._0ia0eFeKIGb6OGCgL18EKhKSQwDgsgja3X5hDy_jNo",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e04646af-1a0d-4165-9b1d-bb225027555d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:34 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "120"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"78-VxfBCA2r1LuSg3KnzFE1Z2ynvok\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              52,
              46,
              48,
              52,
              49,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              52,
              46,
              48,
              52,
              49,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 190,
          "responseSize": 120
        },
        "id": "c3392703-1253-4ead-8778-d652c7df364f",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "event name was cloned correctly",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c94f5c0a-a01b-4ee2-bc9a-cc1bfd673a90",
          "length": 30,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "01458176-5f74-430e-8c65-a7bb75114ce1"
        },
        "item": {
          "id": "c3392703-1253-4ead-8778-d652c7df364f",
          "name": "[Cloned]/v1/action/:id",
          "request": {
            "url": {
              "path": [
                "v1",
                "action",
                "{{eventId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"name\": \"cloned\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eb3e5f88-5e42-4a4d-8006-bc7fa54e1395",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"event name was cloned correctly\", function () {\r",
                  "    if (!pm.response.responseSize) return null;\r",
                  "    let jsonData = pm.response.json();\r",
                  "    if (!jsonData) return null;\r",
                  "    let requestBody = pm.collectionVariables.get(\"requestBodyPostAction\");\r",
                  "    if (!requestBody || requestBody.trim() === \"\") {\r",
                  "        requestBody = null;\r",
                  "    }\r",
                  "    let requestBodyJson = requestBody ? JSON.parse(requestBody) : null;\r",
                  "    let cloneName = jsonData.name;\r",
                  "    let originName = pm.collectionVariables.get(\"name\");\r",
                  "    let requestName = requestBodyJson ? requestBodyJson.name: null;\r",
                  "    if (!requestName) {\r",
                  "        pm.expect(cloneName).to.be.eql(originName);\r",
                  "    } else {\r",
                  "        pm.expect(cloneName).to.be.eql(requestName);\r",
                  "    }\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "4931bf2d-a8b7-45ba-a713-2187931080a9"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ba28c886-ed61-47ea-b025-b46a35922a9b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "// Obtener el body del request como un objeto\r",
                  "let requestBodyPost = pm.request.body.raw;\r",
                  "\r",
                  "// Almacenar el body en una variable de entorno (como JSON string)\r",
                  "pm.collectionVariables.set(\"requestBodyPostAction\", requestBodyPost);"
                ],
                "_lastExecutionId": "8ae7a608-7ed4-44b9-84a0-6879579d1b8a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v1",
              "action",
              "135394"
            ],
            "host": [
              "auth-dev",
              "qa",
              "ewas",
              "aero"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTM1MDI0NiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMywiZXhwIjoxNzI0NTE2MzEzfQ._0ia0eFeKIGb6OGCgL18EKhKSQwDgsgja3X5hDy_jNo",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.0",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ffdfab49-65fc-4713-85dd-c221bf043bd8",
              "system": true
            },
            {
              "key": "Host",
              "value": "auth-dev.qa.ewas.aero",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "24",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "stickiness=1724084293.62.1932.755620|763bccbcfbedfe0481a2c9c7340fc2f7; auth.api=s%3AymCyxEGFLxSCGpq3bodmyn-OhCs9-oie.HgkirDwn5N22SpgFKjWwpC2aGRBc4Zl7KLw2usrKcrs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"name\": \"cloned\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "type": "string",
                "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiZmxvdyI6IjE3MjQwODQzMTM1MDI0NiIsInVzZXIiOjI1NTIzNCwicHJvZHVjdHMiOls2XSwidXNyIjp7InVzZXJJZCI6MjU1MjM0LCJmaXJzdE5hbWUiOiJBbnRvbmlvIn0sImlhdCI6MTcyNDA4NDMxMywiZXhwIjoxNzI0NTE2MzEzfQ._0ia0eFeKIGb6OGCgL18EKhKSQwDgsgja3X5hDy_jNo",
                "key": "token"
              }
            ]
          }
        },
        "response": {
          "id": "e04646af-1a0d-4165-9b1d-bb225027555d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 19 Aug 2024 16:18:34 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "120"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "ETag",
              "value": "W/\"78-VxfBCA2r1LuSg3KnzFE1Z2ynvok\""
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "Content-Security-Policy",
              "value": "frame-ancestors 'self'"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, must-revalidate"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              52,
              46,
              48,
              52,
              49,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              52,
              45,
              48,
              56,
              45,
              49,
              57,
              84,
              49,
              54,
              58,
              49,
              56,
              58,
              51,
              52,
              46,
              48,
              52,
              49,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              49,
              51,
              52,
              57,
              52,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              108,
              111,
              110,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 190,
          "responseSize": 120
        },
        "id": "c3392703-1253-4ead-8778-d652c7df364f",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "event name was cloned correctly",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 171527
    },
    "failures": [],
    "error": null
  }
}